{
  "openapi": "3.0.0",
  "info": {
    "title": "YG Student Financial Assistance",
    "description": "An endpoint for the Student Financial DB",
    "contact": {
      "email": "maxrparker@gmail.com"
    },
    "version": "0.2"
  },
  "servers": [
    {
      "url": "/"
    }
  ],
  "tags": [
    {
      "name": "requestStatusCorr"
    },
    {
      "name": "requestType"
    },
    {
      "name": "requirementMet"
    },
    {
      "name": "requirementType"
    },
    {
      "name": "residence"
    },
    {
      "name": "sfaDocumentLink"
    },
    {
      "name": "spouseTaxRate"
    },
    {
      "name": "staLookup"
    },
    {
      "name": "standardOfLiving"
    },
    {
      "name": "status"
    },
    {
      "name": "statusReason"
    },
    {
      "name": "student"
    },
    {
      "name": "studentCategory"
    },
    {
      "name": "studentConsent"
    },
    {
      "name": "studentContribution"
    },
    {
      "name": "studentLivingAllowance"
    },
    {
      "name": "studyArea"
    },
    {
      "name": "studyField"
    },
    {
      "name": "studyTaxRate"
    },
    {
      "name": "systemDepParams"
    },
    {
      "name": "systemParameter"
    },
    {
      "name": "tabPageItem"
    },
    {
      "name": "tableFormPoplist"
    },
    {
      "name": "transportation"
    },
    {
      "name": "vehicle"
    },
    {
      "name": "vehicleMake"
    },
    {
      "name": "vehicleModel"
    },
    {
      "name": "vendorFmis"
    },
    {
      "name": "vendorUpdate"
    },
    {
      "name": "verificationLog"
    },
    {
      "name": "yea"
    },
    {
      "name": "yeaUpdate"
    },
    {
      "name": "ygCost"
    },
    {
      "name": "aboriginalStatus"
    },
    {
      "name": "ageDistribution"
    },
    {
      "name": "agency"
    },
    {
      "name": "agencyAssistance"
    },
    {
      "name": "applicationType"
    },
    {
      "name": "assessment"
    },
    {
      "name": "assessmentType"
    },
    {
      "name": "batchGroup"
    },
    {
      "name": "batchParameter"
    },
    {
      "name": "category"
    },
    {
      "name": "changeReason"
    },
    {
      "name": "childCareCeiling"
    },
    {
      "name": "city"
    },
    {
      "name": "communication"
    },
    {
      "name": "communicationLog"
    },
    {
      "name": "communicationType"
    },
    {
      "name": "convertYtidToPen"
    },
    {
      "name": "corrTypeBatchParam"
    },
    {
      "name": "corresBatchParam"
    },
    {
      "name": "correspondence"
    },
    {
      "name": "correspondenceType"
    },
    {
      "name": "country"
    },
    {
      "name": "courseEnrolled"
    },
    {
      "name": "csgLookup"
    },
    {
      "name": "csgThreshold"
    },
    {
      "name": "cslCode"
    },
    {
      "name": "cslCodeOld"
    },
    {
      "name": "cslLookup"
    },
    {
      "name": "cslNarsHistory"
    },
    {
      "name": "cslNarsHistory2010jul29"
    },
    {
      "name": "cslNarsHistory2010may"
    },
    {
      "name": "cslNarsHistory2011jan27"
    },
    {
      "name": "cslNslscAddress"
    },
    {
      "name": "cslReason"
    },
    {
      "name": "cslRestricted"
    },
    {
      "name": "cslRestrictedBackup"
    },
    {
      "name": "dataCorrection"
    },
    {
      "name": "dependent"
    },
    {
      "name": "dependentEligibility"
    },
    {
      "name": "disabServiceType"
    },
    {
      "name": "disability"
    },
    {
      "name": "disabilityRequirement"
    },
    {
      "name": "disabilityType"
    },
    {
      "name": "disbursement"
    },
    {
      "name": "disbursementType"
    },
    {
      "name": "ecertImport"
    },
    {
      "name": "education"
    },
    {
      "name": "educationLevel"
    },
    {
      "name": "entitlementError"
    },
    {
      "name": "entitlementErrorCodes"
    },
    {
      "name": "expense"
    },
    {
      "name": "expenseCategory"
    },
    {
      "name": "externalYea"
    },
    {
      "name": "fieldProgram"
    },
    {
      "name": "firstNation"
    },
    {
      "name": "fundingGroup"
    },
    {
      "name": "fundingRequest"
    },
    {
      "name": "hidePartTimeReason"
    },
    {
      "name": "highSchool"
    },
    {
      "name": "historyDetail"
    },
    {
      "name": "income"
    },
    {
      "name": "incomeType"
    },
    {
      "name": "infoCategory"
    },
    {
      "name": "institution"
    },
    {
      "name": "institutionLevel"
    },
    {
      "name": "institutionRequestType"
    },
    {
      "name": "institutionType"
    },
    {
      "name": "instructionType"
    },
    {
      "name": "investment"
    },
    {
      "name": "investmentType"
    },
    {
      "name": "language"
    },
    {
      "name": "lookupTable"
    },
    {
      "name": "maritalStatus"
    },
    {
      "name": "menuState"
    },
    {
      "name": "message"
    },
    {
      "name": "currentDependentEligibility"
    },
    {
      "name": "msfaa"
    },
    {
      "name": "fundingHistory"
    },
    {
      "name": "msfaaEmailLog"
    },
    {
      "name": "fundingRequestRequirement"
    },
    {
      "name": "msfaaImport"
    },
    {
      "name": "inqStatus"
    },
    {
      "name": "officer"
    },
    {
      "name": "requestRequirementMet"
    },
    {
      "name": "ownership"
    },
    {
      "name": "requirementMetView"
    },
    {
      "name": "parentContributionFormula"
    },
    {
      "name": "sfaiFundingHistory"
    },
    {
      "name": "parentDependent"
    },
    {
      "name": "stepChangeReasons"
    },
    {
      "name": "parentResident"
    },
    {
      "name": "vwApplicationRequirements"
    },
    {
      "name": "partTimeReason"
    },
    {
      "name": "yeaDistinct"
    },
    {
      "name": "period"
    },
    {
      "name": "ygStatsExport"
    },
    {
      "name": "portalStatus"
    },
    {
      "name": "prestudyEmployStatus"
    },
    {
      "name": "prestudyEmployment"
    },
    {
      "name": "prestudyTaxRate"
    },
    {
      "name": "program"
    },
    {
      "name": "province"
    },
    {
      "name": "relationship"
    },
    {
      "name": "reportExpenseCategory"
    },
    {
      "name": "requestRequirement"
    }
  ],
  "paths": {
    "/RequestStatusCorrs": {
      "post": {
        "tags": [
          "RequestStatusCorrs"
        ],
        "description": "Adds a requestStatusCorr entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/requestStatusCorr"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "requestStatusCorr entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/RequestStatusCorrs/{requestTypeId}": {
      "get": {
        "tags": [
          "RequestStatusCorrs"
        ],
        "parameters": [
          {
            "name": "requestTypeId",
            "in": "path",
            "description": "gets a requestStatusCorr entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/requestStatusCorr"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "RequestStatusCorrs"
        ],
        "description": "Updates a requestStatusCorr entry in the system",
        "parameters": [
          {
            "name": "requestTypeId",
            "in": "path",
            "description": "gets a requestStatusCorr entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/requestStatusCorr"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "requestStatusCorr entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "RequestStatusCorrs"
        ],
        "description": "Deletes a requestStatusCorr entry in the system",
        "parameters": [
          {
            "name": "requestTypeId",
            "in": "path",
            "description": "gets a requestStatusCorr entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "requestStatusCorr entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/RequestTypes": {
      "post": {
        "tags": [
          "RequestTypes"
        ],
        "description": "Adds a requestType entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/requestType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "requestType entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/RequestTypes/{requestTypeId}": {
      "get": {
        "tags": [
          "RequestTypes"
        ],
        "parameters": [
          {
            "name": "requestTypeId",
            "in": "path",
            "description": "gets a requestType entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/requestType"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "RequestTypes"
        ],
        "description": "Updates a requestType entry in the system",
        "parameters": [
          {
            "name": "requestTypeId",
            "in": "path",
            "description": "gets a requestType entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/requestType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "requestType entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "RequestTypes"
        ],
        "description": "Deletes a requestType entry in the system",
        "parameters": [
          {
            "name": "requestTypeId",
            "in": "path",
            "description": "gets a requestType entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "requestType entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/RequirementMets": {
      "post": {
        "tags": [
          "RequirementMets"
        ],
        "description": "Adds a requirementMet entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/requirementMet"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "requirementMet entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/RequirementMets/{requirementMetId}": {
      "get": {
        "tags": [
          "RequirementMets"
        ],
        "parameters": [
          {
            "name": "requirementMetId",
            "in": "path",
            "description": "gets a requirementMet entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/requirementMet"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "RequirementMets"
        ],
        "description": "Updates a requirementMet entry in the system",
        "parameters": [
          {
            "name": "requirementMetId",
            "in": "path",
            "description": "gets a requirementMet entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/requirementMet"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "requirementMet entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "RequirementMets"
        ],
        "description": "Deletes a requirementMet entry in the system",
        "parameters": [
          {
            "name": "requirementMetId",
            "in": "path",
            "description": "gets a requirementMet entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "requirementMet entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/RequirementTypes": {
      "post": {
        "tags": [
          "RequirementTypes"
        ],
        "description": "Adds a requirementType entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/requirementType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "requirementType entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/RequirementTypes/{requirementTypeId}": {
      "get": {
        "tags": [
          "RequirementTypes"
        ],
        "parameters": [
          {
            "name": "requirementTypeId",
            "in": "path",
            "description": "gets a requirementType entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/requirementType"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "RequirementTypes"
        ],
        "description": "Updates a requirementType entry in the system",
        "parameters": [
          {
            "name": "requirementTypeId",
            "in": "path",
            "description": "gets a requirementType entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/requirementType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "requirementType entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "RequirementTypes"
        ],
        "description": "Deletes a requirementType entry in the system",
        "parameters": [
          {
            "name": "requirementTypeId",
            "in": "path",
            "description": "gets a requirementType entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "requirementType entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/Residences": {
      "post": {
        "tags": [
          "Residences"
        ],
        "description": "Adds a residence entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/residence"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "residence entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/Residences/{residenceId}": {
      "get": {
        "tags": [
          "Residences"
        ],
        "parameters": [
          {
            "name": "residenceId",
            "in": "path",
            "description": "gets a residence entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/residence"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "Residences"
        ],
        "description": "Updates a residence entry in the system",
        "parameters": [
          {
            "name": "residenceId",
            "in": "path",
            "description": "gets a residence entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/residence"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "residence entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "Residences"
        ],
        "description": "Deletes a residence entry in the system",
        "parameters": [
          {
            "name": "residenceId",
            "in": "path",
            "description": "gets a residence entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "residence entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/SfaDocumentLinks": {
      "post": {
        "tags": [
          "SfaDocumentLinks"
        ],
        "description": "Adds a sfaDocumentLink entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/sfaDocumentLink"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "sfaDocumentLink entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/SfaDocumentLinks/{sfaDocumentLinkId}": {
      "get": {
        "tags": [
          "SfaDocumentLinks"
        ],
        "parameters": [
          {
            "name": "sfaDocumentLinkId",
            "in": "path",
            "description": "gets a sfaDocumentLink entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/sfaDocumentLink"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "SfaDocumentLinks"
        ],
        "description": "Updates a sfaDocumentLink entry in the system",
        "parameters": [
          {
            "name": "sfaDocumentLinkId",
            "in": "path",
            "description": "gets a sfaDocumentLink entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/sfaDocumentLink"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "sfaDocumentLink entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "SfaDocumentLinks"
        ],
        "description": "Deletes a sfaDocumentLink entry in the system",
        "parameters": [
          {
            "name": "sfaDocumentLinkId",
            "in": "path",
            "description": "gets a sfaDocumentLink entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "sfaDocumentLink entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/SpouseTaxRates": {
      "post": {
        "tags": [
          "SpouseTaxRates"
        ],
        "description": "Adds a spouseTaxRate entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/spouseTaxRate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "spouseTaxRate entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/SpouseTaxRates/{academicYear}": {
      "get": {
        "tags": [
          "SpouseTaxRates"
        ],
        "parameters": [
          {
            "name": "academicYear",
            "in": "path",
            "description": "gets a spouseTaxRate entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/spouseTaxRate"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "SpouseTaxRates"
        ],
        "description": "Updates a spouseTaxRate entry in the system",
        "parameters": [
          {
            "name": "academicYear",
            "in": "path",
            "description": "gets a spouseTaxRate entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/spouseTaxRate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "spouseTaxRate entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "SpouseTaxRates"
        ],
        "description": "Deletes a spouseTaxRate entry in the system",
        "parameters": [
          {
            "name": "academicYear",
            "in": "path",
            "description": "gets a spouseTaxRate entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "spouseTaxRate entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/StaLookups": {
      "post": {
        "tags": [
          "StaLookups"
        ],
        "description": "Adds a staLookup entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/staLookup"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "staLookup entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/StaLookups/{academicYear}": {
      "get": {
        "tags": [
          "StaLookups"
        ],
        "parameters": [
          {
            "name": "academicYear",
            "in": "path",
            "description": "gets a staLookup entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/staLookup"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "StaLookups"
        ],
        "description": "Updates a staLookup entry in the system",
        "parameters": [
          {
            "name": "academicYear",
            "in": "path",
            "description": "gets a staLookup entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/staLookup"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "staLookup entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "StaLookups"
        ],
        "description": "Deletes a staLookup entry in the system",
        "parameters": [
          {
            "name": "academicYear",
            "in": "path",
            "description": "gets a staLookup entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "staLookup entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/StandardOfLivings": {
      "post": {
        "tags": [
          "StandardOfLivings"
        ],
        "description": "Adds a standardOfLiving entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/standardOfLiving"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "standardOfLiving entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/StandardOfLivings/{academicYear}": {
      "get": {
        "tags": [
          "StandardOfLivings"
        ],
        "parameters": [
          {
            "name": "academicYear",
            "in": "path",
            "description": "gets a standardOfLiving entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/standardOfLiving"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "StandardOfLivings"
        ],
        "description": "Updates a standardOfLiving entry in the system",
        "parameters": [
          {
            "name": "academicYear",
            "in": "path",
            "description": "gets a standardOfLiving entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/standardOfLiving"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "standardOfLiving entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "StandardOfLivings"
        ],
        "description": "Deletes a standardOfLiving entry in the system",
        "parameters": [
          {
            "name": "academicYear",
            "in": "path",
            "description": "gets a standardOfLiving entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "standardOfLiving entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/Statuss": {
      "post": {
        "tags": [
          "Statuss"
        ],
        "description": "Adds a status entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/status"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "status entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/Statuss/{statusId}": {
      "get": {
        "tags": [
          "Statuss"
        ],
        "parameters": [
          {
            "name": "statusId",
            "in": "path",
            "description": "gets a status entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/status"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "Statuss"
        ],
        "description": "Updates a status entry in the system",
        "parameters": [
          {
            "name": "statusId",
            "in": "path",
            "description": "gets a status entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/status"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "status entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "Statuss"
        ],
        "description": "Deletes a status entry in the system",
        "parameters": [
          {
            "name": "statusId",
            "in": "path",
            "description": "gets a status entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "status entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/StatusReasons": {
      "post": {
        "tags": [
          "StatusReasons"
        ],
        "description": "Adds a statusReason entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/statusReason"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "statusReason entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/StatusReasons/{statusReasonId}": {
      "get": {
        "tags": [
          "StatusReasons"
        ],
        "parameters": [
          {
            "name": "statusReasonId",
            "in": "path",
            "description": "gets a statusReason entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/statusReason"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "StatusReasons"
        ],
        "description": "Updates a statusReason entry in the system",
        "parameters": [
          {
            "name": "statusReasonId",
            "in": "path",
            "description": "gets a statusReason entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/statusReason"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "statusReason entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "StatusReasons"
        ],
        "description": "Deletes a statusReason entry in the system",
        "parameters": [
          {
            "name": "statusReasonId",
            "in": "path",
            "description": "gets a statusReason entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "statusReason entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/Students": {
      "post": {
        "tags": [
          "Students"
        ],
        "description": "Adds a student entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/student"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "student entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/Students/{studentId}": {
      "get": {
        "tags": [
          "Students"
        ],
        "parameters": [
          {
            "name": "studentId",
            "in": "path",
            "description": "gets a student entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/student"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "Students"
        ],
        "description": "Updates a student entry in the system",
        "parameters": [
          {
            "name": "studentId",
            "in": "path",
            "description": "gets a student entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/student"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "student entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "Students"
        ],
        "description": "Deletes a student entry in the system",
        "parameters": [
          {
            "name": "studentId",
            "in": "path",
            "description": "gets a student entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "student entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/StudentCategorys": {
      "post": {
        "tags": [
          "StudentCategorys"
        ],
        "description": "Adds a studentCategory entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/studentCategory"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "studentCategory entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/StudentCategorys/{studentCategoryCode}": {
      "get": {
        "tags": [
          "StudentCategorys"
        ],
        "parameters": [
          {
            "name": "studentCategoryCode",
            "in": "path",
            "description": "gets a studentCategory entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/studentCategory"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "StudentCategorys"
        ],
        "description": "Updates a studentCategory entry in the system",
        "parameters": [
          {
            "name": "studentCategoryCode",
            "in": "path",
            "description": "gets a studentCategory entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/studentCategory"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "studentCategory entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "StudentCategorys"
        ],
        "description": "Deletes a studentCategory entry in the system",
        "parameters": [
          {
            "name": "studentCategoryCode",
            "in": "path",
            "description": "gets a studentCategory entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "studentCategory entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/StudentConsents": {
      "post": {
        "tags": [
          "StudentConsents"
        ],
        "description": "Adds a studentConsent entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/studentConsent"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "studentConsent entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/StudentConsents/{studentConsentId}": {
      "get": {
        "tags": [
          "StudentConsents"
        ],
        "parameters": [
          {
            "name": "studentConsentId",
            "in": "path",
            "description": "gets a studentConsent entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/studentConsent"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "StudentConsents"
        ],
        "description": "Updates a studentConsent entry in the system",
        "parameters": [
          {
            "name": "studentConsentId",
            "in": "path",
            "description": "gets a studentConsent entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/studentConsent"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "studentConsent entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "StudentConsents"
        ],
        "description": "Deletes a studentConsent entry in the system",
        "parameters": [
          {
            "name": "studentConsentId",
            "in": "path",
            "description": "gets a studentConsent entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "studentConsent entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/StudentContributions": {
      "post": {
        "tags": [
          "StudentContributions"
        ],
        "description": "Adds a studentContribution entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/studentContribution"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "studentContribution entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/StudentContributions/{academicYear}": {
      "get": {
        "tags": [
          "StudentContributions"
        ],
        "parameters": [
          {
            "name": "academicYear",
            "in": "path",
            "description": "gets a studentContribution entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/studentContribution"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "StudentContributions"
        ],
        "description": "Updates a studentContribution entry in the system",
        "parameters": [
          {
            "name": "academicYear",
            "in": "path",
            "description": "gets a studentContribution entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/studentContribution"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "studentContribution entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "StudentContributions"
        ],
        "description": "Deletes a studentContribution entry in the system",
        "parameters": [
          {
            "name": "academicYear",
            "in": "path",
            "description": "gets a studentContribution entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "studentContribution entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/StudentLivingAllowances": {
      "post": {
        "tags": [
          "StudentLivingAllowances"
        ],
        "description": "Adds a studentLivingAllowance entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/studentLivingAllowance"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "studentLivingAllowance entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/StudentLivingAllowances/{academicYear}": {
      "get": {
        "tags": [
          "StudentLivingAllowances"
        ],
        "parameters": [
          {
            "name": "academicYear",
            "in": "path",
            "description": "gets a studentLivingAllowance entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/studentLivingAllowance"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "StudentLivingAllowances"
        ],
        "description": "Updates a studentLivingAllowance entry in the system",
        "parameters": [
          {
            "name": "academicYear",
            "in": "path",
            "description": "gets a studentLivingAllowance entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/studentLivingAllowance"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "studentLivingAllowance entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "StudentLivingAllowances"
        ],
        "description": "Deletes a studentLivingAllowance entry in the system",
        "parameters": [
          {
            "name": "academicYear",
            "in": "path",
            "description": "gets a studentLivingAllowance entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "studentLivingAllowance entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/StudyAreas": {
      "post": {
        "tags": [
          "StudyAreas"
        ],
        "description": "Adds a studyArea entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/studyArea"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "studyArea entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/StudyAreas/{studyAreaId}": {
      "get": {
        "tags": [
          "StudyAreas"
        ],
        "parameters": [
          {
            "name": "studyAreaId",
            "in": "path",
            "description": "gets a studyArea entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/studyArea"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "StudyAreas"
        ],
        "description": "Updates a studyArea entry in the system",
        "parameters": [
          {
            "name": "studyAreaId",
            "in": "path",
            "description": "gets a studyArea entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/studyArea"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "studyArea entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "StudyAreas"
        ],
        "description": "Deletes a studyArea entry in the system",
        "parameters": [
          {
            "name": "studyAreaId",
            "in": "path",
            "description": "gets a studyArea entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "studyArea entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/StudyFields": {
      "post": {
        "tags": [
          "StudyFields"
        ],
        "description": "Adds a studyField entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/studyField"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "studyField entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/StudyFields/{studyFieldId}": {
      "get": {
        "tags": [
          "StudyFields"
        ],
        "parameters": [
          {
            "name": "studyFieldId",
            "in": "path",
            "description": "gets a studyField entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/studyField"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "StudyFields"
        ],
        "description": "Updates a studyField entry in the system",
        "parameters": [
          {
            "name": "studyFieldId",
            "in": "path",
            "description": "gets a studyField entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/studyField"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "studyField entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "StudyFields"
        ],
        "description": "Deletes a studyField entry in the system",
        "parameters": [
          {
            "name": "studyFieldId",
            "in": "path",
            "description": "gets a studyField entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "studyField entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/StudyTaxRates": {
      "post": {
        "tags": [
          "StudyTaxRates"
        ],
        "description": "Adds a studyTaxRate entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/studyTaxRate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "studyTaxRate entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/StudyTaxRates/{academicYear}": {
      "get": {
        "tags": [
          "StudyTaxRates"
        ],
        "parameters": [
          {
            "name": "academicYear",
            "in": "path",
            "description": "gets a studyTaxRate entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/studyTaxRate"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "StudyTaxRates"
        ],
        "description": "Updates a studyTaxRate entry in the system",
        "parameters": [
          {
            "name": "academicYear",
            "in": "path",
            "description": "gets a studyTaxRate entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/studyTaxRate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "studyTaxRate entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "StudyTaxRates"
        ],
        "description": "Deletes a studyTaxRate entry in the system",
        "parameters": [
          {
            "name": "academicYear",
            "in": "path",
            "description": "gets a studyTaxRate entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "studyTaxRate entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/SystemDepParamss": {
      "post": {
        "tags": [
          "SystemDepParamss"
        ],
        "description": "Adds a systemDepParams entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/systemDepParams"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "systemDepParams entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/SystemDepParamss/{dependentCount}": {
      "get": {
        "tags": [
          "SystemDepParamss"
        ],
        "parameters": [
          {
            "name": "dependentCount",
            "in": "path",
            "description": "gets a systemDepParams entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/systemDepParams"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "SystemDepParamss"
        ],
        "description": "Updates a systemDepParams entry in the system",
        "parameters": [
          {
            "name": "dependentCount",
            "in": "path",
            "description": "gets a systemDepParams entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/systemDepParams"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "systemDepParams entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "SystemDepParamss"
        ],
        "description": "Deletes a systemDepParams entry in the system",
        "parameters": [
          {
            "name": "dependentCount",
            "in": "path",
            "description": "gets a systemDepParams entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "systemDepParams entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/SystemParameters": {
      "post": {
        "tags": [
          "SystemParameters"
        ],
        "description": "Adds a systemParameter entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/systemParameter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "systemParameter entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/SystemParameters/{secondResidenceRate}": {
      "get": {
        "tags": [
          "SystemParameters"
        ],
        "parameters": [
          {
            "name": "secondResidenceRate",
            "in": "path",
            "description": "gets a systemParameter entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/systemParameter"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "SystemParameters"
        ],
        "description": "Updates a systemParameter entry in the system",
        "parameters": [
          {
            "name": "secondResidenceRate",
            "in": "path",
            "description": "gets a systemParameter entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/systemParameter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "systemParameter entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "SystemParameters"
        ],
        "description": "Deletes a systemParameter entry in the system",
        "parameters": [
          {
            "name": "secondResidenceRate",
            "in": "path",
            "description": "gets a systemParameter entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "systemParameter entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/TabPageItems": {
      "post": {
        "tags": [
          "TabPageItems"
        ],
        "description": "Adds a tabPageItem entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tabPageItem"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "tabPageItem entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/TabPageItems/{formName}": {
      "get": {
        "tags": [
          "TabPageItems"
        ],
        "parameters": [
          {
            "name": "formName",
            "in": "path",
            "description": "gets a tabPageItem entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/tabPageItem"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "TabPageItems"
        ],
        "description": "Updates a tabPageItem entry in the system",
        "parameters": [
          {
            "name": "formName",
            "in": "path",
            "description": "gets a tabPageItem entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tabPageItem"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "tabPageItem entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "TabPageItems"
        ],
        "description": "Deletes a tabPageItem entry in the system",
        "parameters": [
          {
            "name": "formName",
            "in": "path",
            "description": "gets a tabPageItem entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "tabPageItem entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/TableFormPoplists": {
      "post": {
        "tags": [
          "TableFormPoplists"
        ],
        "description": "Adds a tableFormPoplist entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tableFormPoplist"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "tableFormPoplist entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/TableFormPoplists/{tableName}": {
      "get": {
        "tags": [
          "TableFormPoplists"
        ],
        "parameters": [
          {
            "name": "tableName",
            "in": "path",
            "description": "gets a tableFormPoplist entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/tableFormPoplist"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "TableFormPoplists"
        ],
        "description": "Updates a tableFormPoplist entry in the system",
        "parameters": [
          {
            "name": "tableName",
            "in": "path",
            "description": "gets a tableFormPoplist entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tableFormPoplist"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "tableFormPoplist entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "TableFormPoplists"
        ],
        "description": "Deletes a tableFormPoplist entry in the system",
        "parameters": [
          {
            "name": "tableName",
            "in": "path",
            "description": "gets a tableFormPoplist entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "tableFormPoplist entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/Transportations": {
      "post": {
        "tags": [
          "Transportations"
        ],
        "description": "Adds a transportation entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/transportation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "transportation entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/Transportations/{transportationId}": {
      "get": {
        "tags": [
          "Transportations"
        ],
        "parameters": [
          {
            "name": "transportationId",
            "in": "path",
            "description": "gets a transportation entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/transportation"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "Transportations"
        ],
        "description": "Updates a transportation entry in the system",
        "parameters": [
          {
            "name": "transportationId",
            "in": "path",
            "description": "gets a transportation entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/transportation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "transportation entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "Transportations"
        ],
        "description": "Deletes a transportation entry in the system",
        "parameters": [
          {
            "name": "transportationId",
            "in": "path",
            "description": "gets a transportation entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "transportation entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/Vehicles": {
      "post": {
        "tags": [
          "Vehicles"
        ],
        "description": "Adds a vehicle entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/vehicle"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "vehicle entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/Vehicles/{vehicleId}": {
      "get": {
        "tags": [
          "Vehicles"
        ],
        "parameters": [
          {
            "name": "vehicleId",
            "in": "path",
            "description": "gets a vehicle entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/vehicle"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "Vehicles"
        ],
        "description": "Updates a vehicle entry in the system",
        "parameters": [
          {
            "name": "vehicleId",
            "in": "path",
            "description": "gets a vehicle entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/vehicle"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "vehicle entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "Vehicles"
        ],
        "description": "Deletes a vehicle entry in the system",
        "parameters": [
          {
            "name": "vehicleId",
            "in": "path",
            "description": "gets a vehicle entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "vehicle entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/VehicleMakes": {
      "post": {
        "tags": [
          "VehicleMakes"
        ],
        "description": "Adds a vehicleMake entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/vehicleMake"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "vehicleMake entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/VehicleMakes/{vehicleMakeId}": {
      "get": {
        "tags": [
          "VehicleMakes"
        ],
        "parameters": [
          {
            "name": "vehicleMakeId",
            "in": "path",
            "description": "gets a vehicleMake entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/vehicleMake"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "VehicleMakes"
        ],
        "description": "Updates a vehicleMake entry in the system",
        "parameters": [
          {
            "name": "vehicleMakeId",
            "in": "path",
            "description": "gets a vehicleMake entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/vehicleMake"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "vehicleMake entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "VehicleMakes"
        ],
        "description": "Deletes a vehicleMake entry in the system",
        "parameters": [
          {
            "name": "vehicleMakeId",
            "in": "path",
            "description": "gets a vehicleMake entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "vehicleMake entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/VehicleModels": {
      "post": {
        "tags": [
          "VehicleModels"
        ],
        "description": "Adds a vehicleModel entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/vehicleModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "vehicleModel entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/VehicleModels/{vehicleModelId}": {
      "get": {
        "tags": [
          "VehicleModels"
        ],
        "parameters": [
          {
            "name": "vehicleModelId",
            "in": "path",
            "description": "gets a vehicleModel entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/vehicleModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "VehicleModels"
        ],
        "description": "Updates a vehicleModel entry in the system",
        "parameters": [
          {
            "name": "vehicleModelId",
            "in": "path",
            "description": "gets a vehicleModel entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/vehicleModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "vehicleModel entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "VehicleModels"
        ],
        "description": "Deletes a vehicleModel entry in the system",
        "parameters": [
          {
            "name": "vehicleModelId",
            "in": "path",
            "description": "gets a vehicleModel entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "vehicleModel entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/VendorFmiss": {
      "post": {
        "tags": [
          "VendorFmiss"
        ],
        "description": "Adds a vendorFmis entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/vendorFmis"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "vendorFmis entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/VendorFmiss/{active}": {
      "get": {
        "tags": [
          "VendorFmiss"
        ],
        "parameters": [
          {
            "name": "active",
            "in": "path",
            "description": "gets a vendorFmis entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/vendorFmis"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "VendorFmiss"
        ],
        "description": "Updates a vendorFmis entry in the system",
        "parameters": [
          {
            "name": "active",
            "in": "path",
            "description": "gets a vendorFmis entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/vendorFmis"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "vendorFmis entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "VendorFmiss"
        ],
        "description": "Deletes a vendorFmis entry in the system",
        "parameters": [
          {
            "name": "active",
            "in": "path",
            "description": "gets a vendorFmis entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "vendorFmis entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/VendorUpdates": {
      "post": {
        "tags": [
          "VendorUpdates"
        ],
        "description": "Adds a vendorUpdate entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/vendorUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "vendorUpdate entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/VendorUpdates/{vendorUpdateId}": {
      "get": {
        "tags": [
          "VendorUpdates"
        ],
        "parameters": [
          {
            "name": "vendorUpdateId",
            "in": "path",
            "description": "gets a vendorUpdate entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/vendorUpdate"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "VendorUpdates"
        ],
        "description": "Updates a vendorUpdate entry in the system",
        "parameters": [
          {
            "name": "vendorUpdateId",
            "in": "path",
            "description": "gets a vendorUpdate entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/vendorUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "vendorUpdate entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "VendorUpdates"
        ],
        "description": "Deletes a vendorUpdate entry in the system",
        "parameters": [
          {
            "name": "vendorUpdateId",
            "in": "path",
            "description": "gets a vendorUpdate entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "vendorUpdate entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/VerificationLogs": {
      "post": {
        "tags": [
          "VerificationLogs"
        ],
        "description": "Adds a verificationLog entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/verificationLog"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "verificationLog entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/VerificationLogs/{verificationLogId}": {
      "get": {
        "tags": [
          "VerificationLogs"
        ],
        "parameters": [
          {
            "name": "verificationLogId",
            "in": "path",
            "description": "gets a verificationLog entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/verificationLog"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "VerificationLogs"
        ],
        "description": "Updates a verificationLog entry in the system",
        "parameters": [
          {
            "name": "verificationLogId",
            "in": "path",
            "description": "gets a verificationLog entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/verificationLog"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "verificationLog entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "VerificationLogs"
        ],
        "description": "Deletes a verificationLog entry in the system",
        "parameters": [
          {
            "name": "verificationLogId",
            "in": "path",
            "description": "gets a verificationLog entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "verificationLog entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/Yeas": {
      "post": {
        "tags": [
          "Yeas"
        ],
        "description": "Adds a yea entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/yea"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "yea entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/Yeas/{fname}": {
      "get": {
        "tags": [
          "Yeas"
        ],
        "parameters": [
          {
            "name": "fname",
            "in": "path",
            "description": "gets a yea entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/yea"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "Yeas"
        ],
        "description": "Updates a yea entry in the system",
        "parameters": [
          {
            "name": "fname",
            "in": "path",
            "description": "gets a yea entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/yea"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "yea entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "Yeas"
        ],
        "description": "Deletes a yea entry in the system",
        "parameters": [
          {
            "name": "fname",
            "in": "path",
            "description": "gets a yea entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "yea entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/YeaUpdates": {
      "post": {
        "tags": [
          "YeaUpdates"
        ],
        "description": "Adds a yeaUpdate entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/yeaUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "yeaUpdate entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/YeaUpdates/{fname}": {
      "get": {
        "tags": [
          "YeaUpdates"
        ],
        "parameters": [
          {
            "name": "fname",
            "in": "path",
            "description": "gets a yeaUpdate entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/yeaUpdate"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "YeaUpdates"
        ],
        "description": "Updates a yeaUpdate entry in the system",
        "parameters": [
          {
            "name": "fname",
            "in": "path",
            "description": "gets a yeaUpdate entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/yeaUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "yeaUpdate entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "YeaUpdates"
        ],
        "description": "Deletes a yeaUpdate entry in the system",
        "parameters": [
          {
            "name": "fname",
            "in": "path",
            "description": "gets a yeaUpdate entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "yeaUpdate entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/YgCosts": {
      "post": {
        "tags": [
          "YgCosts"
        ],
        "description": "Adds a ygCost entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ygCost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ygCost entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/YgCosts/{ygCostId}": {
      "get": {
        "tags": [
          "YgCosts"
        ],
        "parameters": [
          {
            "name": "ygCostId",
            "in": "path",
            "description": "gets a ygCost entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ygCost"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "YgCosts"
        ],
        "description": "Updates a ygCost entry in the system",
        "parameters": [
          {
            "name": "ygCostId",
            "in": "path",
            "description": "gets a ygCost entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ygCost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ygCost entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "YgCosts"
        ],
        "description": "Deletes a ygCost entry in the system",
        "parameters": [
          {
            "name": "ygCostId",
            "in": "path",
            "description": "gets a ygCost entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ygCost entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/AboriginalStatuss": {
      "post": {
        "tags": [
          "AboriginalStatuss"
        ],
        "description": "Adds a aboriginalStatus entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/aboriginalStatus"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "aboriginalStatus entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/AboriginalStatuss/{aboriginalStatusId}": {
      "get": {
        "tags": [
          "AboriginalStatuss"
        ],
        "parameters": [
          {
            "name": "aboriginalStatusId",
            "in": "path",
            "description": "gets a aboriginalStatus entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/aboriginalStatus"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "AboriginalStatuss"
        ],
        "description": "Updates a aboriginalStatus entry in the system",
        "parameters": [
          {
            "name": "aboriginalStatusId",
            "in": "path",
            "description": "gets a aboriginalStatus entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/aboriginalStatus"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "aboriginalStatus entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "AboriginalStatuss"
        ],
        "description": "Deletes a aboriginalStatus entry in the system",
        "parameters": [
          {
            "name": "aboriginalStatusId",
            "in": "path",
            "description": "gets a aboriginalStatus entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "aboriginalStatus entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/AgeDistributions": {
      "post": {
        "tags": [
          "AgeDistributions"
        ],
        "description": "Adds a ageDistribution entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ageDistribution"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ageDistribution entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/AgeDistributions/{ageDistributionId}": {
      "get": {
        "tags": [
          "AgeDistributions"
        ],
        "parameters": [
          {
            "name": "ageDistributionId",
            "in": "path",
            "description": "gets a ageDistribution entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ageDistribution"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "AgeDistributions"
        ],
        "description": "Updates a ageDistribution entry in the system",
        "parameters": [
          {
            "name": "ageDistributionId",
            "in": "path",
            "description": "gets a ageDistribution entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ageDistribution"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ageDistribution entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "AgeDistributions"
        ],
        "description": "Deletes a ageDistribution entry in the system",
        "parameters": [
          {
            "name": "ageDistributionId",
            "in": "path",
            "description": "gets a ageDistribution entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ageDistribution entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/Agencys": {
      "post": {
        "tags": [
          "Agencys"
        ],
        "description": "Adds a agency entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/agency"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "agency entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/Agencys/{agencyId}": {
      "get": {
        "tags": [
          "Agencys"
        ],
        "parameters": [
          {
            "name": "agencyId",
            "in": "path",
            "description": "gets a agency entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/agency"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "Agencys"
        ],
        "description": "Updates a agency entry in the system",
        "parameters": [
          {
            "name": "agencyId",
            "in": "path",
            "description": "gets a agency entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/agency"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "agency entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "Agencys"
        ],
        "description": "Deletes a agency entry in the system",
        "parameters": [
          {
            "name": "agencyId",
            "in": "path",
            "description": "gets a agency entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "agency entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/AgencyAssistances": {
      "post": {
        "tags": [
          "AgencyAssistances"
        ],
        "description": "Adds a agencyAssistance entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/agencyAssistance"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "agencyAssistance entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/AgencyAssistances/{historyDetailId}": {
      "get": {
        "tags": [
          "AgencyAssistances"
        ],
        "parameters": [
          {
            "name": "historyDetailId",
            "in": "path",
            "description": "gets a agencyAssistance entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/agencyAssistance"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "AgencyAssistances"
        ],
        "description": "Updates a agencyAssistance entry in the system",
        "parameters": [
          {
            "name": "historyDetailId",
            "in": "path",
            "description": "gets a agencyAssistance entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/agencyAssistance"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "agencyAssistance entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "AgencyAssistances"
        ],
        "description": "Deletes a agencyAssistance entry in the system",
        "parameters": [
          {
            "name": "historyDetailId",
            "in": "path",
            "description": "gets a agencyAssistance entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "agencyAssistance entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/ApplicationTypes": {
      "post": {
        "tags": [
          "ApplicationTypes"
        ],
        "description": "Adds a applicationType entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/applicationType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "applicationType entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/ApplicationTypes/{applicationTypeId}": {
      "get": {
        "tags": [
          "ApplicationTypes"
        ],
        "parameters": [
          {
            "name": "applicationTypeId",
            "in": "path",
            "description": "gets a applicationType entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/applicationType"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "ApplicationTypes"
        ],
        "description": "Updates a applicationType entry in the system",
        "parameters": [
          {
            "name": "applicationTypeId",
            "in": "path",
            "description": "gets a applicationType entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/applicationType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "applicationType entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "ApplicationTypes"
        ],
        "description": "Deletes a applicationType entry in the system",
        "parameters": [
          {
            "name": "applicationTypeId",
            "in": "path",
            "description": "gets a applicationType entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "applicationType entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/Assessments": {
      "post": {
        "tags": [
          "Assessments"
        ],
        "description": "Adds a assessment entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/assessment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "assessment entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/Assessments/{assessmentId}": {
      "get": {
        "tags": [
          "Assessments"
        ],
        "parameters": [
          {
            "name": "assessmentId",
            "in": "path",
            "description": "gets a assessment entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/assessment"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "Assessments"
        ],
        "description": "Updates a assessment entry in the system",
        "parameters": [
          {
            "name": "assessmentId",
            "in": "path",
            "description": "gets a assessment entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/assessment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "assessment entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "Assessments"
        ],
        "description": "Deletes a assessment entry in the system",
        "parameters": [
          {
            "name": "assessmentId",
            "in": "path",
            "description": "gets a assessment entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "assessment entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/AssessmentTypes": {
      "post": {
        "tags": [
          "AssessmentTypes"
        ],
        "description": "Adds a assessmentType entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/assessmentType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "assessmentType entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/AssessmentTypes/{assessmentTypeId}": {
      "get": {
        "tags": [
          "AssessmentTypes"
        ],
        "parameters": [
          {
            "name": "assessmentTypeId",
            "in": "path",
            "description": "gets a assessmentType entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/assessmentType"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "AssessmentTypes"
        ],
        "description": "Updates a assessmentType entry in the system",
        "parameters": [
          {
            "name": "assessmentTypeId",
            "in": "path",
            "description": "gets a assessmentType entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/assessmentType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "assessmentType entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "AssessmentTypes"
        ],
        "description": "Deletes a assessmentType entry in the system",
        "parameters": [
          {
            "name": "assessmentTypeId",
            "in": "path",
            "description": "gets a assessmentType entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "assessmentType entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/BatchGroups": {
      "post": {
        "tags": [
          "BatchGroups"
        ],
        "description": "Adds a batchGroup entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/batchGroup"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "batchGroup entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/BatchGroups/{batchGroupId}": {
      "get": {
        "tags": [
          "BatchGroups"
        ],
        "parameters": [
          {
            "name": "batchGroupId",
            "in": "path",
            "description": "gets a batchGroup entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/batchGroup"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "BatchGroups"
        ],
        "description": "Updates a batchGroup entry in the system",
        "parameters": [
          {
            "name": "batchGroupId",
            "in": "path",
            "description": "gets a batchGroup entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/batchGroup"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "batchGroup entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "BatchGroups"
        ],
        "description": "Deletes a batchGroup entry in the system",
        "parameters": [
          {
            "name": "batchGroupId",
            "in": "path",
            "description": "gets a batchGroup entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "batchGroup entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/BatchParameters": {
      "post": {
        "tags": [
          "BatchParameters"
        ],
        "description": "Adds a batchParameter entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/batchParameter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "batchParameter entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/BatchParameters/{batchParameterId}": {
      "get": {
        "tags": [
          "BatchParameters"
        ],
        "parameters": [
          {
            "name": "batchParameterId",
            "in": "path",
            "description": "gets a batchParameter entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/batchParameter"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "BatchParameters"
        ],
        "description": "Updates a batchParameter entry in the system",
        "parameters": [
          {
            "name": "batchParameterId",
            "in": "path",
            "description": "gets a batchParameter entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/batchParameter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "batchParameter entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "BatchParameters"
        ],
        "description": "Deletes a batchParameter entry in the system",
        "parameters": [
          {
            "name": "batchParameterId",
            "in": "path",
            "description": "gets a batchParameter entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "batchParameter entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/Categorys": {
      "post": {
        "tags": [
          "Categorys"
        ],
        "description": "Adds a category entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/category"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "category entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/Categorys/{categoryId}": {
      "get": {
        "tags": [
          "Categorys"
        ],
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "description": "gets a category entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/category"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "Categorys"
        ],
        "description": "Updates a category entry in the system",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "description": "gets a category entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/category"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "category entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "Categorys"
        ],
        "description": "Deletes a category entry in the system",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "description": "gets a category entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "category entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/ChangeReasons": {
      "post": {
        "tags": [
          "ChangeReasons"
        ],
        "description": "Adds a changeReason entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/changeReason"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "changeReason entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/ChangeReasons/{changeReasonId}": {
      "get": {
        "tags": [
          "ChangeReasons"
        ],
        "parameters": [
          {
            "name": "changeReasonId",
            "in": "path",
            "description": "gets a changeReason entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/changeReason"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "ChangeReasons"
        ],
        "description": "Updates a changeReason entry in the system",
        "parameters": [
          {
            "name": "changeReasonId",
            "in": "path",
            "description": "gets a changeReason entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/changeReason"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "changeReason entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "ChangeReasons"
        ],
        "description": "Deletes a changeReason entry in the system",
        "parameters": [
          {
            "name": "changeReasonId",
            "in": "path",
            "description": "gets a changeReason entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "changeReason entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/ChildCareCeilings": {
      "post": {
        "tags": [
          "ChildCareCeilings"
        ],
        "description": "Adds a childCareCeiling entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/childCareCeiling"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "childCareCeiling entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/ChildCareCeilings/{academicYear}": {
      "get": {
        "tags": [
          "ChildCareCeilings"
        ],
        "parameters": [
          {
            "name": "academicYear",
            "in": "path",
            "description": "gets a childCareCeiling entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/childCareCeiling"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "ChildCareCeilings"
        ],
        "description": "Updates a childCareCeiling entry in the system",
        "parameters": [
          {
            "name": "academicYear",
            "in": "path",
            "description": "gets a childCareCeiling entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/childCareCeiling"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "childCareCeiling entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "ChildCareCeilings"
        ],
        "description": "Deletes a childCareCeiling entry in the system",
        "parameters": [
          {
            "name": "academicYear",
            "in": "path",
            "description": "gets a childCareCeiling entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "childCareCeiling entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/Citys": {
      "post": {
        "tags": [
          "Citys"
        ],
        "description": "Adds a city entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/city"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "city entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/Citys/{cityId}": {
      "get": {
        "tags": [
          "Citys"
        ],
        "parameters": [
          {
            "name": "cityId",
            "in": "path",
            "description": "gets a city entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/city"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "Citys"
        ],
        "description": "Updates a city entry in the system",
        "parameters": [
          {
            "name": "cityId",
            "in": "path",
            "description": "gets a city entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/city"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "city entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "Citys"
        ],
        "description": "Deletes a city entry in the system",
        "parameters": [
          {
            "name": "cityId",
            "in": "path",
            "description": "gets a city entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "city entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/Communications": {
      "post": {
        "tags": [
          "Communications"
        ],
        "description": "Adds a communication entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/communication"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "communication entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/Communications/{communicationId}": {
      "get": {
        "tags": [
          "Communications"
        ],
        "parameters": [
          {
            "name": "communicationId",
            "in": "path",
            "description": "gets a communication entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/communication"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "Communications"
        ],
        "description": "Updates a communication entry in the system",
        "parameters": [
          {
            "name": "communicationId",
            "in": "path",
            "description": "gets a communication entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/communication"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "communication entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "Communications"
        ],
        "description": "Deletes a communication entry in the system",
        "parameters": [
          {
            "name": "communicationId",
            "in": "path",
            "description": "gets a communication entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "communication entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/CommunicationLogs": {
      "post": {
        "tags": [
          "CommunicationLogs"
        ],
        "description": "Adds a communicationLog entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/communicationLog"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "communicationLog entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/CommunicationLogs/{communicationLogId}": {
      "get": {
        "tags": [
          "CommunicationLogs"
        ],
        "parameters": [
          {
            "name": "communicationLogId",
            "in": "path",
            "description": "gets a communicationLog entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/communicationLog"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "CommunicationLogs"
        ],
        "description": "Updates a communicationLog entry in the system",
        "parameters": [
          {
            "name": "communicationLogId",
            "in": "path",
            "description": "gets a communicationLog entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/communicationLog"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "communicationLog entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "CommunicationLogs"
        ],
        "description": "Deletes a communicationLog entry in the system",
        "parameters": [
          {
            "name": "communicationLogId",
            "in": "path",
            "description": "gets a communicationLog entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "communicationLog entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/CommunicationTypes": {
      "post": {
        "tags": [
          "CommunicationTypes"
        ],
        "description": "Adds a communicationType entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/communicationType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "communicationType entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/CommunicationTypes/{communicationTypeId}": {
      "get": {
        "tags": [
          "CommunicationTypes"
        ],
        "parameters": [
          {
            "name": "communicationTypeId",
            "in": "path",
            "description": "gets a communicationType entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/communicationType"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "CommunicationTypes"
        ],
        "description": "Updates a communicationType entry in the system",
        "parameters": [
          {
            "name": "communicationTypeId",
            "in": "path",
            "description": "gets a communicationType entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/communicationType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "communicationType entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "CommunicationTypes"
        ],
        "description": "Deletes a communicationType entry in the system",
        "parameters": [
          {
            "name": "communicationTypeId",
            "in": "path",
            "description": "gets a communicationType entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "communicationType entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/ConvertYtidToPens": {
      "post": {
        "tags": [
          "ConvertYtidToPens"
        ],
        "description": "Adds a convertYtidToPen entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/convertYtidToPen"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "convertYtidToPen entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/ConvertYtidToPens/{ytid}": {
      "get": {
        "tags": [
          "ConvertYtidToPens"
        ],
        "parameters": [
          {
            "name": "ytid",
            "in": "path",
            "description": "gets a convertYtidToPen entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/convertYtidToPen"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "ConvertYtidToPens"
        ],
        "description": "Updates a convertYtidToPen entry in the system",
        "parameters": [
          {
            "name": "ytid",
            "in": "path",
            "description": "gets a convertYtidToPen entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/convertYtidToPen"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "convertYtidToPen entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "ConvertYtidToPens"
        ],
        "description": "Deletes a convertYtidToPen entry in the system",
        "parameters": [
          {
            "name": "ytid",
            "in": "path",
            "description": "gets a convertYtidToPen entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "convertYtidToPen entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/CorrTypeBatchParams": {
      "post": {
        "tags": [
          "CorrTypeBatchParams"
        ],
        "description": "Adds a corrTypeBatchParam entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/corrTypeBatchParam"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "corrTypeBatchParam entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/CorrTypeBatchParams/{correspondenceTypeId}": {
      "get": {
        "tags": [
          "CorrTypeBatchParams"
        ],
        "parameters": [
          {
            "name": "correspondenceTypeId",
            "in": "path",
            "description": "gets a corrTypeBatchParam entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/corrTypeBatchParam"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "CorrTypeBatchParams"
        ],
        "description": "Updates a corrTypeBatchParam entry in the system",
        "parameters": [
          {
            "name": "correspondenceTypeId",
            "in": "path",
            "description": "gets a corrTypeBatchParam entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/corrTypeBatchParam"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "corrTypeBatchParam entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "CorrTypeBatchParams"
        ],
        "description": "Deletes a corrTypeBatchParam entry in the system",
        "parameters": [
          {
            "name": "correspondenceTypeId",
            "in": "path",
            "description": "gets a corrTypeBatchParam entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "corrTypeBatchParam entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/CorresBatchParams": {
      "post": {
        "tags": [
          "CorresBatchParams"
        ],
        "description": "Adds a corresBatchParam entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/corresBatchParam"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "corresBatchParam entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/CorresBatchParams/{correspondenceId}": {
      "get": {
        "tags": [
          "CorresBatchParams"
        ],
        "parameters": [
          {
            "name": "correspondenceId",
            "in": "path",
            "description": "gets a corresBatchParam entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/corresBatchParam"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "CorresBatchParams"
        ],
        "description": "Updates a corresBatchParam entry in the system",
        "parameters": [
          {
            "name": "correspondenceId",
            "in": "path",
            "description": "gets a corresBatchParam entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/corresBatchParam"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "corresBatchParam entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "CorresBatchParams"
        ],
        "description": "Deletes a corresBatchParam entry in the system",
        "parameters": [
          {
            "name": "correspondenceId",
            "in": "path",
            "description": "gets a corresBatchParam entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "corresBatchParam entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/Correspondences": {
      "post": {
        "tags": [
          "Correspondences"
        ],
        "description": "Adds a correspondence entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/correspondence"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "correspondence entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/Correspondences/{correspondenceId}": {
      "get": {
        "tags": [
          "Correspondences"
        ],
        "parameters": [
          {
            "name": "correspondenceId",
            "in": "path",
            "description": "gets a correspondence entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/correspondence"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "Correspondences"
        ],
        "description": "Updates a correspondence entry in the system",
        "parameters": [
          {
            "name": "correspondenceId",
            "in": "path",
            "description": "gets a correspondence entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/correspondence"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "correspondence entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "Correspondences"
        ],
        "description": "Deletes a correspondence entry in the system",
        "parameters": [
          {
            "name": "correspondenceId",
            "in": "path",
            "description": "gets a correspondence entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "correspondence entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/CorrespondenceTypes": {
      "post": {
        "tags": [
          "CorrespondenceTypes"
        ],
        "description": "Adds a correspondenceType entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/correspondenceType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "correspondenceType entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/CorrespondenceTypes/{correspondenceTypeId}": {
      "get": {
        "tags": [
          "CorrespondenceTypes"
        ],
        "parameters": [
          {
            "name": "correspondenceTypeId",
            "in": "path",
            "description": "gets a correspondenceType entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/correspondenceType"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "CorrespondenceTypes"
        ],
        "description": "Updates a correspondenceType entry in the system",
        "parameters": [
          {
            "name": "correspondenceTypeId",
            "in": "path",
            "description": "gets a correspondenceType entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/correspondenceType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "correspondenceType entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "CorrespondenceTypes"
        ],
        "description": "Deletes a correspondenceType entry in the system",
        "parameters": [
          {
            "name": "correspondenceTypeId",
            "in": "path",
            "description": "gets a correspondenceType entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "correspondenceType entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/Countrys": {
      "post": {
        "tags": [
          "Countrys"
        ],
        "description": "Adds a country entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/country"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "country entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/Countrys/{countryId}": {
      "get": {
        "tags": [
          "Countrys"
        ],
        "parameters": [
          {
            "name": "countryId",
            "in": "path",
            "description": "gets a country entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/country"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "Countrys"
        ],
        "description": "Updates a country entry in the system",
        "parameters": [
          {
            "name": "countryId",
            "in": "path",
            "description": "gets a country entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/country"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "country entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "Countrys"
        ],
        "description": "Deletes a country entry in the system",
        "parameters": [
          {
            "name": "countryId",
            "in": "path",
            "description": "gets a country entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "country entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/CourseEnrolleds": {
      "post": {
        "tags": [
          "CourseEnrolleds"
        ],
        "description": "Adds a courseEnrolled entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/courseEnrolled"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "courseEnrolled entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/CourseEnrolleds/{courseEnrolledId}": {
      "get": {
        "tags": [
          "CourseEnrolleds"
        ],
        "parameters": [
          {
            "name": "courseEnrolledId",
            "in": "path",
            "description": "gets a courseEnrolled entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/courseEnrolled"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "CourseEnrolleds"
        ],
        "description": "Updates a courseEnrolled entry in the system",
        "parameters": [
          {
            "name": "courseEnrolledId",
            "in": "path",
            "description": "gets a courseEnrolled entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/courseEnrolled"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "courseEnrolled entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "CourseEnrolleds"
        ],
        "description": "Deletes a courseEnrolled entry in the system",
        "parameters": [
          {
            "name": "courseEnrolledId",
            "in": "path",
            "description": "gets a courseEnrolled entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "courseEnrolled entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/CsgLookups": {
      "post": {
        "tags": [
          "CsgLookups"
        ],
        "description": "Adds a csgLookup entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/csgLookup"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "csgLookup entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/CsgLookups/{academicYear}": {
      "get": {
        "tags": [
          "CsgLookups"
        ],
        "parameters": [
          {
            "name": "academicYear",
            "in": "path",
            "description": "gets a csgLookup entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/csgLookup"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "CsgLookups"
        ],
        "description": "Updates a csgLookup entry in the system",
        "parameters": [
          {
            "name": "academicYear",
            "in": "path",
            "description": "gets a csgLookup entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/csgLookup"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "csgLookup entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "CsgLookups"
        ],
        "description": "Deletes a csgLookup entry in the system",
        "parameters": [
          {
            "name": "academicYear",
            "in": "path",
            "description": "gets a csgLookup entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "csgLookup entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/CsgThresholds": {
      "post": {
        "tags": [
          "CsgThresholds"
        ],
        "description": "Adds a csgThreshold entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/csgThreshold"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "csgThreshold entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/CsgThresholds/{academicYear}": {
      "get": {
        "tags": [
          "CsgThresholds"
        ],
        "parameters": [
          {
            "name": "academicYear",
            "in": "path",
            "description": "gets a csgThreshold entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/csgThreshold"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "CsgThresholds"
        ],
        "description": "Updates a csgThreshold entry in the system",
        "parameters": [
          {
            "name": "academicYear",
            "in": "path",
            "description": "gets a csgThreshold entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/csgThreshold"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "csgThreshold entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "CsgThresholds"
        ],
        "description": "Deletes a csgThreshold entry in the system",
        "parameters": [
          {
            "name": "academicYear",
            "in": "path",
            "description": "gets a csgThreshold entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "csgThreshold entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/CslCodes": {
      "post": {
        "tags": [
          "CslCodes"
        ],
        "description": "Adds a cslCode entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/cslCode"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "cslCode entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/CslCodes/{cslCodeId}": {
      "get": {
        "tags": [
          "CslCodes"
        ],
        "parameters": [
          {
            "name": "cslCodeId",
            "in": "path",
            "description": "gets a cslCode entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/cslCode"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "CslCodes"
        ],
        "description": "Updates a cslCode entry in the system",
        "parameters": [
          {
            "name": "cslCodeId",
            "in": "path",
            "description": "gets a cslCode entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/cslCode"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "cslCode entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "CslCodes"
        ],
        "description": "Deletes a cslCode entry in the system",
        "parameters": [
          {
            "name": "cslCodeId",
            "in": "path",
            "description": "gets a cslCode entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "cslCode entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/CslCodeOlds": {
      "post": {
        "tags": [
          "CslCodeOlds"
        ],
        "description": "Adds a cslCodeOld entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/cslCodeOld"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "cslCodeOld entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/CslCodeOlds/{cslCode}": {
      "get": {
        "tags": [
          "CslCodeOlds"
        ],
        "parameters": [
          {
            "name": "cslCode",
            "in": "path",
            "description": "gets a cslCodeOld entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/cslCodeOld"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "CslCodeOlds"
        ],
        "description": "Updates a cslCodeOld entry in the system",
        "parameters": [
          {
            "name": "cslCode",
            "in": "path",
            "description": "gets a cslCodeOld entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/cslCodeOld"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "cslCodeOld entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "CslCodeOlds"
        ],
        "description": "Deletes a cslCodeOld entry in the system",
        "parameters": [
          {
            "name": "cslCode",
            "in": "path",
            "description": "gets a cslCodeOld entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "cslCodeOld entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/CslLookups": {
      "post": {
        "tags": [
          "CslLookups"
        ],
        "description": "Adds a cslLookup entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/cslLookup"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "cslLookup entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/CslLookups/{academicYear}": {
      "get": {
        "tags": [
          "CslLookups"
        ],
        "parameters": [
          {
            "name": "academicYear",
            "in": "path",
            "description": "gets a cslLookup entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/cslLookup"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "CslLookups"
        ],
        "description": "Updates a cslLookup entry in the system",
        "parameters": [
          {
            "name": "academicYear",
            "in": "path",
            "description": "gets a cslLookup entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/cslLookup"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "cslLookup entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "CslLookups"
        ],
        "description": "Deletes a cslLookup entry in the system",
        "parameters": [
          {
            "name": "academicYear",
            "in": "path",
            "description": "gets a cslLookup entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "cslLookup entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/CslNarsHistorys": {
      "post": {
        "tags": [
          "CslNarsHistorys"
        ],
        "description": "Adds a cslNarsHistory entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/cslNarsHistory"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "cslNarsHistory entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/CslNarsHistorys/{cslNarsHistoryId}": {
      "get": {
        "tags": [
          "CslNarsHistorys"
        ],
        "parameters": [
          {
            "name": "cslNarsHistoryId",
            "in": "path",
            "description": "gets a cslNarsHistory entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/cslNarsHistory"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "CslNarsHistorys"
        ],
        "description": "Updates a cslNarsHistory entry in the system",
        "parameters": [
          {
            "name": "cslNarsHistoryId",
            "in": "path",
            "description": "gets a cslNarsHistory entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/cslNarsHistory"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "cslNarsHistory entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "CslNarsHistorys"
        ],
        "description": "Deletes a cslNarsHistory entry in the system",
        "parameters": [
          {
            "name": "cslNarsHistoryId",
            "in": "path",
            "description": "gets a cslNarsHistory entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "cslNarsHistory entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/CslNarsHistory2010jul29s": {
      "post": {
        "tags": [
          "CslNarsHistory2010jul29s"
        ],
        "description": "Adds a cslNarsHistory2010jul29 entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/cslNarsHistory2010jul29"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "cslNarsHistory2010jul29 entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/CslNarsHistory2010jul29s/{cslNarsHistoryId}": {
      "get": {
        "tags": [
          "CslNarsHistory2010jul29s"
        ],
        "parameters": [
          {
            "name": "cslNarsHistoryId",
            "in": "path",
            "description": "gets a cslNarsHistory2010jul29 entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/cslNarsHistory2010jul29"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "CslNarsHistory2010jul29s"
        ],
        "description": "Updates a cslNarsHistory2010jul29 entry in the system",
        "parameters": [
          {
            "name": "cslNarsHistoryId",
            "in": "path",
            "description": "gets a cslNarsHistory2010jul29 entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/cslNarsHistory2010jul29"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "cslNarsHistory2010jul29 entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "CslNarsHistory2010jul29s"
        ],
        "description": "Deletes a cslNarsHistory2010jul29 entry in the system",
        "parameters": [
          {
            "name": "cslNarsHistoryId",
            "in": "path",
            "description": "gets a cslNarsHistory2010jul29 entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "cslNarsHistory2010jul29 entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/CslNarsHistory2010mays": {
      "post": {
        "tags": [
          "CslNarsHistory2010mays"
        ],
        "description": "Adds a cslNarsHistory2010may entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/cslNarsHistory2010may"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "cslNarsHistory2010may entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/CslNarsHistory2010mays/{cslNarsHistoryId}": {
      "get": {
        "tags": [
          "CslNarsHistory2010mays"
        ],
        "parameters": [
          {
            "name": "cslNarsHistoryId",
            "in": "path",
            "description": "gets a cslNarsHistory2010may entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/cslNarsHistory2010may"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "CslNarsHistory2010mays"
        ],
        "description": "Updates a cslNarsHistory2010may entry in the system",
        "parameters": [
          {
            "name": "cslNarsHistoryId",
            "in": "path",
            "description": "gets a cslNarsHistory2010may entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/cslNarsHistory2010may"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "cslNarsHistory2010may entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "CslNarsHistory2010mays"
        ],
        "description": "Deletes a cslNarsHistory2010may entry in the system",
        "parameters": [
          {
            "name": "cslNarsHistoryId",
            "in": "path",
            "description": "gets a cslNarsHistory2010may entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "cslNarsHistory2010may entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/CslNarsHistory2011jan27s": {
      "post": {
        "tags": [
          "CslNarsHistory2011jan27s"
        ],
        "description": "Adds a cslNarsHistory2011jan27 entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/cslNarsHistory2011jan27"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "cslNarsHistory2011jan27 entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/CslNarsHistory2011jan27s/{cslNarsHistoryId}": {
      "get": {
        "tags": [
          "CslNarsHistory2011jan27s"
        ],
        "parameters": [
          {
            "name": "cslNarsHistoryId",
            "in": "path",
            "description": "gets a cslNarsHistory2011jan27 entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/cslNarsHistory2011jan27"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "CslNarsHistory2011jan27s"
        ],
        "description": "Updates a cslNarsHistory2011jan27 entry in the system",
        "parameters": [
          {
            "name": "cslNarsHistoryId",
            "in": "path",
            "description": "gets a cslNarsHistory2011jan27 entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/cslNarsHistory2011jan27"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "cslNarsHistory2011jan27 entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "CslNarsHistory2011jan27s"
        ],
        "description": "Deletes a cslNarsHistory2011jan27 entry in the system",
        "parameters": [
          {
            "name": "cslNarsHistoryId",
            "in": "path",
            "description": "gets a cslNarsHistory2011jan27 entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "cslNarsHistory2011jan27 entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/CslNslscAddresss": {
      "post": {
        "tags": [
          "CslNslscAddresss"
        ],
        "description": "Adds a cslNslscAddress entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/cslNslscAddress"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "cslNslscAddress entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/CslNslscAddresss/{cslNslscAddressId}": {
      "get": {
        "tags": [
          "CslNslscAddresss"
        ],
        "parameters": [
          {
            "name": "cslNslscAddressId",
            "in": "path",
            "description": "gets a cslNslscAddress entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/cslNslscAddress"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "CslNslscAddresss"
        ],
        "description": "Updates a cslNslscAddress entry in the system",
        "parameters": [
          {
            "name": "cslNslscAddressId",
            "in": "path",
            "description": "gets a cslNslscAddress entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/cslNslscAddress"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "cslNslscAddress entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "CslNslscAddresss"
        ],
        "description": "Deletes a cslNslscAddress entry in the system",
        "parameters": [
          {
            "name": "cslNslscAddressId",
            "in": "path",
            "description": "gets a cslNslscAddress entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "cslNslscAddress entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/CslReasons": {
      "post": {
        "tags": [
          "CslReasons"
        ],
        "description": "Adds a cslReason entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/cslReason"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "cslReason entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/CslReasons/{cslReasonId}": {
      "get": {
        "tags": [
          "CslReasons"
        ],
        "parameters": [
          {
            "name": "cslReasonId",
            "in": "path",
            "description": "gets a cslReason entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/cslReason"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "CslReasons"
        ],
        "description": "Updates a cslReason entry in the system",
        "parameters": [
          {
            "name": "cslReasonId",
            "in": "path",
            "description": "gets a cslReason entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/cslReason"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "cslReason entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "CslReasons"
        ],
        "description": "Deletes a cslReason entry in the system",
        "parameters": [
          {
            "name": "cslReasonId",
            "in": "path",
            "description": "gets a cslReason entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "cslReason entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/CslRestricteds": {
      "post": {
        "tags": [
          "CslRestricteds"
        ],
        "description": "Adds a cslRestricted entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/cslRestricted"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "cslRestricted entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/CslRestricteds/{cslRestrictedId}": {
      "get": {
        "tags": [
          "CslRestricteds"
        ],
        "parameters": [
          {
            "name": "cslRestrictedId",
            "in": "path",
            "description": "gets a cslRestricted entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/cslRestricted"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "CslRestricteds"
        ],
        "description": "Updates a cslRestricted entry in the system",
        "parameters": [
          {
            "name": "cslRestrictedId",
            "in": "path",
            "description": "gets a cslRestricted entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/cslRestricted"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "cslRestricted entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "CslRestricteds"
        ],
        "description": "Deletes a cslRestricted entry in the system",
        "parameters": [
          {
            "name": "cslRestrictedId",
            "in": "path",
            "description": "gets a cslRestricted entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "cslRestricted entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/CslRestrictedBackups": {
      "post": {
        "tags": [
          "CslRestrictedBackups"
        ],
        "description": "Adds a cslRestrictedBackup entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/cslRestrictedBackup"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "cslRestrictedBackup entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/CslRestrictedBackups/{cslRestrictedId}": {
      "get": {
        "tags": [
          "CslRestrictedBackups"
        ],
        "parameters": [
          {
            "name": "cslRestrictedId",
            "in": "path",
            "description": "gets a cslRestrictedBackup entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/cslRestrictedBackup"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "CslRestrictedBackups"
        ],
        "description": "Updates a cslRestrictedBackup entry in the system",
        "parameters": [
          {
            "name": "cslRestrictedId",
            "in": "path",
            "description": "gets a cslRestrictedBackup entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/cslRestrictedBackup"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "cslRestrictedBackup entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "CslRestrictedBackups"
        ],
        "description": "Deletes a cslRestrictedBackup entry in the system",
        "parameters": [
          {
            "name": "cslRestrictedId",
            "in": "path",
            "description": "gets a cslRestrictedBackup entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "cslRestrictedBackup entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/DataCorrections": {
      "post": {
        "tags": [
          "DataCorrections"
        ],
        "description": "Adds a dataCorrection entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dataCorrection"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "dataCorrection entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/DataCorrections/{dataCorrectionId}": {
      "get": {
        "tags": [
          "DataCorrections"
        ],
        "parameters": [
          {
            "name": "dataCorrectionId",
            "in": "path",
            "description": "gets a dataCorrection entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/dataCorrection"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "DataCorrections"
        ],
        "description": "Updates a dataCorrection entry in the system",
        "parameters": [
          {
            "name": "dataCorrectionId",
            "in": "path",
            "description": "gets a dataCorrection entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dataCorrection"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "dataCorrection entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "DataCorrections"
        ],
        "description": "Deletes a dataCorrection entry in the system",
        "parameters": [
          {
            "name": "dataCorrectionId",
            "in": "path",
            "description": "gets a dataCorrection entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "dataCorrection entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/Dependents": {
      "post": {
        "tags": [
          "Dependents"
        ],
        "description": "Adds a dependent entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dependent"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "dependent entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/Dependents/{dependentId}": {
      "get": {
        "tags": [
          "Dependents"
        ],
        "parameters": [
          {
            "name": "dependentId",
            "in": "path",
            "description": "gets a dependent entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/dependent"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "Dependents"
        ],
        "description": "Updates a dependent entry in the system",
        "parameters": [
          {
            "name": "dependentId",
            "in": "path",
            "description": "gets a dependent entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dependent"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "dependent entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "Dependents"
        ],
        "description": "Deletes a dependent entry in the system",
        "parameters": [
          {
            "name": "dependentId",
            "in": "path",
            "description": "gets a dependent entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "dependent entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/DependentEligibilitys": {
      "post": {
        "tags": [
          "DependentEligibilitys"
        ],
        "description": "Adds a dependentEligibility entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dependentEligibility"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "dependentEligibility entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/DependentEligibilitys/{dependentEligibilityId}": {
      "get": {
        "tags": [
          "DependentEligibilitys"
        ],
        "parameters": [
          {
            "name": "dependentEligibilityId",
            "in": "path",
            "description": "gets a dependentEligibility entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/dependentEligibility"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "DependentEligibilitys"
        ],
        "description": "Updates a dependentEligibility entry in the system",
        "parameters": [
          {
            "name": "dependentEligibilityId",
            "in": "path",
            "description": "gets a dependentEligibility entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dependentEligibility"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "dependentEligibility entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "DependentEligibilitys"
        ],
        "description": "Deletes a dependentEligibility entry in the system",
        "parameters": [
          {
            "name": "dependentEligibilityId",
            "in": "path",
            "description": "gets a dependentEligibility entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "dependentEligibility entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/DisabServiceTypes": {
      "post": {
        "tags": [
          "DisabServiceTypes"
        ],
        "description": "Adds a disabServiceType entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/disabServiceType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "disabServiceType entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/DisabServiceTypes/{disabServiceTypeId}": {
      "get": {
        "tags": [
          "DisabServiceTypes"
        ],
        "parameters": [
          {
            "name": "disabServiceTypeId",
            "in": "path",
            "description": "gets a disabServiceType entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/disabServiceType"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "DisabServiceTypes"
        ],
        "description": "Updates a disabServiceType entry in the system",
        "parameters": [
          {
            "name": "disabServiceTypeId",
            "in": "path",
            "description": "gets a disabServiceType entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/disabServiceType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "disabServiceType entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "DisabServiceTypes"
        ],
        "description": "Deletes a disabServiceType entry in the system",
        "parameters": [
          {
            "name": "disabServiceTypeId",
            "in": "path",
            "description": "gets a disabServiceType entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "disabServiceType entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/Disabilitys": {
      "post": {
        "tags": [
          "Disabilitys"
        ],
        "description": "Adds a disability entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/disability"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "disability entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/Disabilitys/{disabilityId}": {
      "get": {
        "tags": [
          "Disabilitys"
        ],
        "parameters": [
          {
            "name": "disabilityId",
            "in": "path",
            "description": "gets a disability entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/disability"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "Disabilitys"
        ],
        "description": "Updates a disability entry in the system",
        "parameters": [
          {
            "name": "disabilityId",
            "in": "path",
            "description": "gets a disability entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/disability"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "disability entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "Disabilitys"
        ],
        "description": "Deletes a disability entry in the system",
        "parameters": [
          {
            "name": "disabilityId",
            "in": "path",
            "description": "gets a disability entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "disability entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/DisabilityRequirements": {
      "post": {
        "tags": [
          "DisabilityRequirements"
        ],
        "description": "Adds a disabilityRequirement entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/disabilityRequirement"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "disabilityRequirement entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/DisabilityRequirements/{disabilityRequirementId}": {
      "get": {
        "tags": [
          "DisabilityRequirements"
        ],
        "parameters": [
          {
            "name": "disabilityRequirementId",
            "in": "path",
            "description": "gets a disabilityRequirement entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/disabilityRequirement"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "DisabilityRequirements"
        ],
        "description": "Updates a disabilityRequirement entry in the system",
        "parameters": [
          {
            "name": "disabilityRequirementId",
            "in": "path",
            "description": "gets a disabilityRequirement entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/disabilityRequirement"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "disabilityRequirement entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "DisabilityRequirements"
        ],
        "description": "Deletes a disabilityRequirement entry in the system",
        "parameters": [
          {
            "name": "disabilityRequirementId",
            "in": "path",
            "description": "gets a disabilityRequirement entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "disabilityRequirement entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/DisabilityTypes": {
      "post": {
        "tags": [
          "DisabilityTypes"
        ],
        "description": "Adds a disabilityType entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/disabilityType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "disabilityType entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/DisabilityTypes/{disabilityTypeId}": {
      "get": {
        "tags": [
          "DisabilityTypes"
        ],
        "parameters": [
          {
            "name": "disabilityTypeId",
            "in": "path",
            "description": "gets a disabilityType entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/disabilityType"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "DisabilityTypes"
        ],
        "description": "Updates a disabilityType entry in the system",
        "parameters": [
          {
            "name": "disabilityTypeId",
            "in": "path",
            "description": "gets a disabilityType entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/disabilityType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "disabilityType entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "DisabilityTypes"
        ],
        "description": "Deletes a disabilityType entry in the system",
        "parameters": [
          {
            "name": "disabilityTypeId",
            "in": "path",
            "description": "gets a disabilityType entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "disabilityType entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/Disbursements": {
      "post": {
        "tags": [
          "Disbursements"
        ],
        "description": "Adds a disbursement entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/disbursement"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "disbursement entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/Disbursements/{disbursementId}": {
      "get": {
        "tags": [
          "Disbursements"
        ],
        "parameters": [
          {
            "name": "disbursementId",
            "in": "path",
            "description": "gets a disbursement entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/disbursement"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "Disbursements"
        ],
        "description": "Updates a disbursement entry in the system",
        "parameters": [
          {
            "name": "disbursementId",
            "in": "path",
            "description": "gets a disbursement entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/disbursement"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "disbursement entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "Disbursements"
        ],
        "description": "Deletes a disbursement entry in the system",
        "parameters": [
          {
            "name": "disbursementId",
            "in": "path",
            "description": "gets a disbursement entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "disbursement entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/DisbursementTypes": {
      "post": {
        "tags": [
          "DisbursementTypes"
        ],
        "description": "Adds a disbursementType entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/disbursementType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "disbursementType entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/DisbursementTypes/{disbursementTypeId}": {
      "get": {
        "tags": [
          "DisbursementTypes"
        ],
        "parameters": [
          {
            "name": "disbursementTypeId",
            "in": "path",
            "description": "gets a disbursementType entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/disbursementType"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "DisbursementTypes"
        ],
        "description": "Updates a disbursementType entry in the system",
        "parameters": [
          {
            "name": "disbursementTypeId",
            "in": "path",
            "description": "gets a disbursementType entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/disbursementType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "disbursementType entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "DisbursementTypes"
        ],
        "description": "Deletes a disbursementType entry in the system",
        "parameters": [
          {
            "name": "disbursementTypeId",
            "in": "path",
            "description": "gets a disbursementType entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "disbursementType entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/EcertImports": {
      "post": {
        "tags": [
          "EcertImports"
        ],
        "description": "Adds a ecertImport entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ecertImport"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ecertImport entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/EcertImports/{sequenceNumber}": {
      "get": {
        "tags": [
          "EcertImports"
        ],
        "parameters": [
          {
            "name": "sequenceNumber",
            "in": "path",
            "description": "gets a ecertImport entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ecertImport"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "EcertImports"
        ],
        "description": "Updates a ecertImport entry in the system",
        "parameters": [
          {
            "name": "sequenceNumber",
            "in": "path",
            "description": "gets a ecertImport entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ecertImport"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ecertImport entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "EcertImports"
        ],
        "description": "Deletes a ecertImport entry in the system",
        "parameters": [
          {
            "name": "sequenceNumber",
            "in": "path",
            "description": "gets a ecertImport entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ecertImport entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/Educations": {
      "post": {
        "tags": [
          "Educations"
        ],
        "description": "Adds a education entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/education"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "education entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/Educations/{educationId}": {
      "get": {
        "tags": [
          "Educations"
        ],
        "parameters": [
          {
            "name": "educationId",
            "in": "path",
            "description": "gets a education entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/education"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "Educations"
        ],
        "description": "Updates a education entry in the system",
        "parameters": [
          {
            "name": "educationId",
            "in": "path",
            "description": "gets a education entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/education"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "education entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "Educations"
        ],
        "description": "Deletes a education entry in the system",
        "parameters": [
          {
            "name": "educationId",
            "in": "path",
            "description": "gets a education entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "education entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/EducationLevels": {
      "post": {
        "tags": [
          "EducationLevels"
        ],
        "description": "Adds a educationLevel entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/educationLevel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "educationLevel entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/EducationLevels/{educationLevelId}": {
      "get": {
        "tags": [
          "EducationLevels"
        ],
        "parameters": [
          {
            "name": "educationLevelId",
            "in": "path",
            "description": "gets a educationLevel entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/educationLevel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "EducationLevels"
        ],
        "description": "Updates a educationLevel entry in the system",
        "parameters": [
          {
            "name": "educationLevelId",
            "in": "path",
            "description": "gets a educationLevel entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/educationLevel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "educationLevel entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "EducationLevels"
        ],
        "description": "Deletes a educationLevel entry in the system",
        "parameters": [
          {
            "name": "educationLevelId",
            "in": "path",
            "description": "gets a educationLevel entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "educationLevel entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/EntitlementErrors": {
      "post": {
        "tags": [
          "EntitlementErrors"
        ],
        "description": "Adds a entitlementError entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/entitlementError"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "entitlementError entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/EntitlementErrors/{entitlementErrorId}": {
      "get": {
        "tags": [
          "EntitlementErrors"
        ],
        "parameters": [
          {
            "name": "entitlementErrorId",
            "in": "path",
            "description": "gets a entitlementError entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/entitlementError"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "EntitlementErrors"
        ],
        "description": "Updates a entitlementError entry in the system",
        "parameters": [
          {
            "name": "entitlementErrorId",
            "in": "path",
            "description": "gets a entitlementError entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/entitlementError"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "entitlementError entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "EntitlementErrors"
        ],
        "description": "Deletes a entitlementError entry in the system",
        "parameters": [
          {
            "name": "entitlementErrorId",
            "in": "path",
            "description": "gets a entitlementError entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "entitlementError entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/EntitlementErrorCodess": {
      "post": {
        "tags": [
          "EntitlementErrorCodess"
        ],
        "description": "Adds a entitlementErrorCodes entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/entitlementErrorCodes"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "entitlementErrorCodes entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/EntitlementErrorCodess/{errorCode}": {
      "get": {
        "tags": [
          "EntitlementErrorCodess"
        ],
        "parameters": [
          {
            "name": "errorCode",
            "in": "path",
            "description": "gets a entitlementErrorCodes entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/entitlementErrorCodes"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "EntitlementErrorCodess"
        ],
        "description": "Updates a entitlementErrorCodes entry in the system",
        "parameters": [
          {
            "name": "errorCode",
            "in": "path",
            "description": "gets a entitlementErrorCodes entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/entitlementErrorCodes"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "entitlementErrorCodes entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "EntitlementErrorCodess"
        ],
        "description": "Deletes a entitlementErrorCodes entry in the system",
        "parameters": [
          {
            "name": "errorCode",
            "in": "path",
            "description": "gets a entitlementErrorCodes entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "entitlementErrorCodes entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/Expenses": {
      "post": {
        "tags": [
          "Expenses"
        ],
        "description": "Adds a expense entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/expense"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "expense entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/Expenses/{expenseId}": {
      "get": {
        "tags": [
          "Expenses"
        ],
        "parameters": [
          {
            "name": "expenseId",
            "in": "path",
            "description": "gets a expense entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/expense"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "Expenses"
        ],
        "description": "Updates a expense entry in the system",
        "parameters": [
          {
            "name": "expenseId",
            "in": "path",
            "description": "gets a expense entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/expense"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "expense entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "Expenses"
        ],
        "description": "Deletes a expense entry in the system",
        "parameters": [
          {
            "name": "expenseId",
            "in": "path",
            "description": "gets a expense entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "expense entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/ExpenseCategorys": {
      "post": {
        "tags": [
          "ExpenseCategorys"
        ],
        "description": "Adds a expenseCategory entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/expenseCategory"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "expenseCategory entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/ExpenseCategorys/{expenseCategoryId}": {
      "get": {
        "tags": [
          "ExpenseCategorys"
        ],
        "parameters": [
          {
            "name": "expenseCategoryId",
            "in": "path",
            "description": "gets a expenseCategory entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/expenseCategory"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "ExpenseCategorys"
        ],
        "description": "Updates a expenseCategory entry in the system",
        "parameters": [
          {
            "name": "expenseCategoryId",
            "in": "path",
            "description": "gets a expenseCategory entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/expenseCategory"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "expenseCategory entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "ExpenseCategorys"
        ],
        "description": "Deletes a expenseCategory entry in the system",
        "parameters": [
          {
            "name": "expenseCategoryId",
            "in": "path",
            "description": "gets a expenseCategory entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "expenseCategory entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/ExternalYeas": {
      "post": {
        "tags": [
          "ExternalYeas"
        ],
        "description": "Adds a externalYea entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/externalYea"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "externalYea entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/ExternalYeas/{fname}": {
      "get": {
        "tags": [
          "ExternalYeas"
        ],
        "parameters": [
          {
            "name": "fname",
            "in": "path",
            "description": "gets a externalYea entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/externalYea"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "ExternalYeas"
        ],
        "description": "Updates a externalYea entry in the system",
        "parameters": [
          {
            "name": "fname",
            "in": "path",
            "description": "gets a externalYea entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/externalYea"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "externalYea entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "ExternalYeas"
        ],
        "description": "Deletes a externalYea entry in the system",
        "parameters": [
          {
            "name": "fname",
            "in": "path",
            "description": "gets a externalYea entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "externalYea entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/FieldPrograms": {
      "post": {
        "tags": [
          "FieldPrograms"
        ],
        "description": "Adds a fieldProgram entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/fieldProgram"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "fieldProgram entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/FieldPrograms/{studyFieldId}": {
      "get": {
        "tags": [
          "FieldPrograms"
        ],
        "parameters": [
          {
            "name": "studyFieldId",
            "in": "path",
            "description": "gets a fieldProgram entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/fieldProgram"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "FieldPrograms"
        ],
        "description": "Updates a fieldProgram entry in the system",
        "parameters": [
          {
            "name": "studyFieldId",
            "in": "path",
            "description": "gets a fieldProgram entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/fieldProgram"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "fieldProgram entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "FieldPrograms"
        ],
        "description": "Deletes a fieldProgram entry in the system",
        "parameters": [
          {
            "name": "studyFieldId",
            "in": "path",
            "description": "gets a fieldProgram entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "fieldProgram entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/FirstNations": {
      "post": {
        "tags": [
          "FirstNations"
        ],
        "description": "Adds a firstNation entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/firstNation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "firstNation entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/FirstNations/{firstNationId}": {
      "get": {
        "tags": [
          "FirstNations"
        ],
        "parameters": [
          {
            "name": "firstNationId",
            "in": "path",
            "description": "gets a firstNation entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/firstNation"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "FirstNations"
        ],
        "description": "Updates a firstNation entry in the system",
        "parameters": [
          {
            "name": "firstNationId",
            "in": "path",
            "description": "gets a firstNation entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/firstNation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "firstNation entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "FirstNations"
        ],
        "description": "Deletes a firstNation entry in the system",
        "parameters": [
          {
            "name": "firstNationId",
            "in": "path",
            "description": "gets a firstNation entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "firstNation entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/FundingGroups": {
      "post": {
        "tags": [
          "FundingGroups"
        ],
        "description": "Adds a fundingGroup entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/fundingGroup"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "fundingGroup entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/FundingGroups/{fundingGroupId}": {
      "get": {
        "tags": [
          "FundingGroups"
        ],
        "parameters": [
          {
            "name": "fundingGroupId",
            "in": "path",
            "description": "gets a fundingGroup entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/fundingGroup"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "FundingGroups"
        ],
        "description": "Updates a fundingGroup entry in the system",
        "parameters": [
          {
            "name": "fundingGroupId",
            "in": "path",
            "description": "gets a fundingGroup entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/fundingGroup"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "fundingGroup entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "FundingGroups"
        ],
        "description": "Deletes a fundingGroup entry in the system",
        "parameters": [
          {
            "name": "fundingGroupId",
            "in": "path",
            "description": "gets a fundingGroup entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "fundingGroup entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/FundingRequests": {
      "post": {
        "tags": [
          "FundingRequests"
        ],
        "description": "Adds a fundingRequest entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/fundingRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "fundingRequest entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/FundingRequests/{fundingRequestId}": {
      "get": {
        "tags": [
          "FundingRequests"
        ],
        "parameters": [
          {
            "name": "fundingRequestId",
            "in": "path",
            "description": "gets a fundingRequest entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/fundingRequest"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "FundingRequests"
        ],
        "description": "Updates a fundingRequest entry in the system",
        "parameters": [
          {
            "name": "fundingRequestId",
            "in": "path",
            "description": "gets a fundingRequest entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/fundingRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "fundingRequest entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "FundingRequests"
        ],
        "description": "Deletes a fundingRequest entry in the system",
        "parameters": [
          {
            "name": "fundingRequestId",
            "in": "path",
            "description": "gets a fundingRequest entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "fundingRequest entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/HidePartTimeReasons": {
      "post": {
        "tags": [
          "HidePartTimeReasons"
        ],
        "description": "Adds a hidePartTimeReason entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/hidePartTimeReason"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "hidePartTimeReason entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/HidePartTimeReasons/{historyDetailId}": {
      "get": {
        "tags": [
          "HidePartTimeReasons"
        ],
        "parameters": [
          {
            "name": "historyDetailId",
            "in": "path",
            "description": "gets a hidePartTimeReason entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/hidePartTimeReason"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "HidePartTimeReasons"
        ],
        "description": "Updates a hidePartTimeReason entry in the system",
        "parameters": [
          {
            "name": "historyDetailId",
            "in": "path",
            "description": "gets a hidePartTimeReason entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/hidePartTimeReason"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "hidePartTimeReason entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "HidePartTimeReasons"
        ],
        "description": "Deletes a hidePartTimeReason entry in the system",
        "parameters": [
          {
            "name": "historyDetailId",
            "in": "path",
            "description": "gets a hidePartTimeReason entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "hidePartTimeReason entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/HighSchools": {
      "post": {
        "tags": [
          "HighSchools"
        ],
        "description": "Adds a highSchool entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/highSchool"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "highSchool entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/HighSchools/{highSchoolId}": {
      "get": {
        "tags": [
          "HighSchools"
        ],
        "parameters": [
          {
            "name": "highSchoolId",
            "in": "path",
            "description": "gets a highSchool entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/highSchool"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "HighSchools"
        ],
        "description": "Updates a highSchool entry in the system",
        "parameters": [
          {
            "name": "highSchoolId",
            "in": "path",
            "description": "gets a highSchool entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/highSchool"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "highSchool entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "HighSchools"
        ],
        "description": "Deletes a highSchool entry in the system",
        "parameters": [
          {
            "name": "highSchoolId",
            "in": "path",
            "description": "gets a highSchool entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "highSchool entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/HistoryDetails": {
      "post": {
        "tags": [
          "HistoryDetails"
        ],
        "description": "Adds a historyDetail entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/historyDetail"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "historyDetail entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/HistoryDetails/{historyDetailId}": {
      "get": {
        "tags": [
          "HistoryDetails"
        ],
        "parameters": [
          {
            "name": "historyDetailId",
            "in": "path",
            "description": "gets a historyDetail entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/historyDetail"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "HistoryDetails"
        ],
        "description": "Updates a historyDetail entry in the system",
        "parameters": [
          {
            "name": "historyDetailId",
            "in": "path",
            "description": "gets a historyDetail entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/historyDetail"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "historyDetail entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "HistoryDetails"
        ],
        "description": "Deletes a historyDetail entry in the system",
        "parameters": [
          {
            "name": "historyDetailId",
            "in": "path",
            "description": "gets a historyDetail entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "historyDetail entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/Incomes": {
      "post": {
        "tags": [
          "Incomes"
        ],
        "description": "Adds a income entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/income"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "income entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/Incomes/{incomeId}": {
      "get": {
        "tags": [
          "Incomes"
        ],
        "parameters": [
          {
            "name": "incomeId",
            "in": "path",
            "description": "gets a income entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/income"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "Incomes"
        ],
        "description": "Updates a income entry in the system",
        "parameters": [
          {
            "name": "incomeId",
            "in": "path",
            "description": "gets a income entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/income"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "income entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "Incomes"
        ],
        "description": "Deletes a income entry in the system",
        "parameters": [
          {
            "name": "incomeId",
            "in": "path",
            "description": "gets a income entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "income entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/IncomeTypes": {
      "post": {
        "tags": [
          "IncomeTypes"
        ],
        "description": "Adds a incomeType entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/incomeType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "incomeType entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/IncomeTypes/{incomeTypeId}": {
      "get": {
        "tags": [
          "IncomeTypes"
        ],
        "parameters": [
          {
            "name": "incomeTypeId",
            "in": "path",
            "description": "gets a incomeType entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/incomeType"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "IncomeTypes"
        ],
        "description": "Updates a incomeType entry in the system",
        "parameters": [
          {
            "name": "incomeTypeId",
            "in": "path",
            "description": "gets a incomeType entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/incomeType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "incomeType entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "IncomeTypes"
        ],
        "description": "Deletes a incomeType entry in the system",
        "parameters": [
          {
            "name": "incomeTypeId",
            "in": "path",
            "description": "gets a incomeType entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "incomeType entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/InfoCategorys": {
      "post": {
        "tags": [
          "InfoCategorys"
        ],
        "description": "Adds a infoCategory entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/infoCategory"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "infoCategory entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/InfoCategorys/{infoCategoryId}": {
      "get": {
        "tags": [
          "InfoCategorys"
        ],
        "parameters": [
          {
            "name": "infoCategoryId",
            "in": "path",
            "description": "gets a infoCategory entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/infoCategory"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "InfoCategorys"
        ],
        "description": "Updates a infoCategory entry in the system",
        "parameters": [
          {
            "name": "infoCategoryId",
            "in": "path",
            "description": "gets a infoCategory entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/infoCategory"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "infoCategory entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "InfoCategorys"
        ],
        "description": "Deletes a infoCategory entry in the system",
        "parameters": [
          {
            "name": "infoCategoryId",
            "in": "path",
            "description": "gets a infoCategory entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "infoCategory entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/Institutions": {
      "post": {
        "tags": [
          "Institutions"
        ],
        "description": "Adds a institution entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/institution"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "institution entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/Institutions/{institutionId}": {
      "get": {
        "tags": [
          "Institutions"
        ],
        "parameters": [
          {
            "name": "institutionId",
            "in": "path",
            "description": "gets a institution entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/institution"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "Institutions"
        ],
        "description": "Updates a institution entry in the system",
        "parameters": [
          {
            "name": "institutionId",
            "in": "path",
            "description": "gets a institution entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/institution"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "institution entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "Institutions"
        ],
        "description": "Deletes a institution entry in the system",
        "parameters": [
          {
            "name": "institutionId",
            "in": "path",
            "description": "gets a institution entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "institution entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/InstitutionLevels": {
      "post": {
        "tags": [
          "InstitutionLevels"
        ],
        "description": "Adds a institutionLevel entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/institutionLevel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "institutionLevel entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/InstitutionLevels/{institutionLevelId}": {
      "get": {
        "tags": [
          "InstitutionLevels"
        ],
        "parameters": [
          {
            "name": "institutionLevelId",
            "in": "path",
            "description": "gets a institutionLevel entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/institutionLevel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "InstitutionLevels"
        ],
        "description": "Updates a institutionLevel entry in the system",
        "parameters": [
          {
            "name": "institutionLevelId",
            "in": "path",
            "description": "gets a institutionLevel entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/institutionLevel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "institutionLevel entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "InstitutionLevels"
        ],
        "description": "Deletes a institutionLevel entry in the system",
        "parameters": [
          {
            "name": "institutionLevelId",
            "in": "path",
            "description": "gets a institutionLevel entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "institutionLevel entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/InstitutionRequestTypes": {
      "post": {
        "tags": [
          "InstitutionRequestTypes"
        ],
        "description": "Adds a institutionRequestType entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/institutionRequestType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "institutionRequestType entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/InstitutionRequestTypes/{institutionId}": {
      "get": {
        "tags": [
          "InstitutionRequestTypes"
        ],
        "parameters": [
          {
            "name": "institutionId",
            "in": "path",
            "description": "gets a institutionRequestType entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/institutionRequestType"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "InstitutionRequestTypes"
        ],
        "description": "Updates a institutionRequestType entry in the system",
        "parameters": [
          {
            "name": "institutionId",
            "in": "path",
            "description": "gets a institutionRequestType entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/institutionRequestType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "institutionRequestType entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "InstitutionRequestTypes"
        ],
        "description": "Deletes a institutionRequestType entry in the system",
        "parameters": [
          {
            "name": "institutionId",
            "in": "path",
            "description": "gets a institutionRequestType entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "institutionRequestType entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/InstitutionTypes": {
      "post": {
        "tags": [
          "InstitutionTypes"
        ],
        "description": "Adds a institutionType entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/institutionType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "institutionType entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/InstitutionTypes/{institutionTypeId}": {
      "get": {
        "tags": [
          "InstitutionTypes"
        ],
        "parameters": [
          {
            "name": "institutionTypeId",
            "in": "path",
            "description": "gets a institutionType entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/institutionType"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "InstitutionTypes"
        ],
        "description": "Updates a institutionType entry in the system",
        "parameters": [
          {
            "name": "institutionTypeId",
            "in": "path",
            "description": "gets a institutionType entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/institutionType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "institutionType entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "InstitutionTypes"
        ],
        "description": "Deletes a institutionType entry in the system",
        "parameters": [
          {
            "name": "institutionTypeId",
            "in": "path",
            "description": "gets a institutionType entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "institutionType entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/InstructionTypes": {
      "post": {
        "tags": [
          "InstructionTypes"
        ],
        "description": "Adds a instructionType entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/instructionType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "instructionType entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/InstructionTypes/{instructionTypeId}": {
      "get": {
        "tags": [
          "InstructionTypes"
        ],
        "parameters": [
          {
            "name": "instructionTypeId",
            "in": "path",
            "description": "gets a instructionType entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/instructionType"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "InstructionTypes"
        ],
        "description": "Updates a instructionType entry in the system",
        "parameters": [
          {
            "name": "instructionTypeId",
            "in": "path",
            "description": "gets a instructionType entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/instructionType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "instructionType entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "InstructionTypes"
        ],
        "description": "Deletes a instructionType entry in the system",
        "parameters": [
          {
            "name": "instructionTypeId",
            "in": "path",
            "description": "gets a instructionType entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "instructionType entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/Investments": {
      "post": {
        "tags": [
          "Investments"
        ],
        "description": "Adds a investment entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/investment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "investment entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/Investments/{investmentId}": {
      "get": {
        "tags": [
          "Investments"
        ],
        "parameters": [
          {
            "name": "investmentId",
            "in": "path",
            "description": "gets a investment entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/investment"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "Investments"
        ],
        "description": "Updates a investment entry in the system",
        "parameters": [
          {
            "name": "investmentId",
            "in": "path",
            "description": "gets a investment entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/investment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "investment entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "Investments"
        ],
        "description": "Deletes a investment entry in the system",
        "parameters": [
          {
            "name": "investmentId",
            "in": "path",
            "description": "gets a investment entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "investment entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/InvestmentTypes": {
      "post": {
        "tags": [
          "InvestmentTypes"
        ],
        "description": "Adds a investmentType entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/investmentType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "investmentType entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/InvestmentTypes/{investmentTypeId}": {
      "get": {
        "tags": [
          "InvestmentTypes"
        ],
        "parameters": [
          {
            "name": "investmentTypeId",
            "in": "path",
            "description": "gets a investmentType entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/investmentType"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "InvestmentTypes"
        ],
        "description": "Updates a investmentType entry in the system",
        "parameters": [
          {
            "name": "investmentTypeId",
            "in": "path",
            "description": "gets a investmentType entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/investmentType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "investmentType entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "InvestmentTypes"
        ],
        "description": "Deletes a investmentType entry in the system",
        "parameters": [
          {
            "name": "investmentTypeId",
            "in": "path",
            "description": "gets a investmentType entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "investmentType entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/Languages": {
      "post": {
        "tags": [
          "Languages"
        ],
        "description": "Adds a language entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/language"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "language entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/Languages/{languageId}": {
      "get": {
        "tags": [
          "Languages"
        ],
        "parameters": [
          {
            "name": "languageId",
            "in": "path",
            "description": "gets a language entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/language"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "Languages"
        ],
        "description": "Updates a language entry in the system",
        "parameters": [
          {
            "name": "languageId",
            "in": "path",
            "description": "gets a language entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/language"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "language entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "Languages"
        ],
        "description": "Deletes a language entry in the system",
        "parameters": [
          {
            "name": "languageId",
            "in": "path",
            "description": "gets a language entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "language entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/LookupTables": {
      "post": {
        "tags": [
          "LookupTables"
        ],
        "description": "Adds a lookupTable entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/lookupTable"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "lookupTable entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/LookupTables/{tableName}": {
      "get": {
        "tags": [
          "LookupTables"
        ],
        "parameters": [
          {
            "name": "tableName",
            "in": "path",
            "description": "gets a lookupTable entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/lookupTable"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "LookupTables"
        ],
        "description": "Updates a lookupTable entry in the system",
        "parameters": [
          {
            "name": "tableName",
            "in": "path",
            "description": "gets a lookupTable entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/lookupTable"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "lookupTable entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "LookupTables"
        ],
        "description": "Deletes a lookupTable entry in the system",
        "parameters": [
          {
            "name": "tableName",
            "in": "path",
            "description": "gets a lookupTable entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "lookupTable entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/MaritalStatuss": {
      "post": {
        "tags": [
          "MaritalStatuss"
        ],
        "description": "Adds a maritalStatus entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/maritalStatus"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "maritalStatus entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/MaritalStatuss/{maritalStatusId}": {
      "get": {
        "tags": [
          "MaritalStatuss"
        ],
        "parameters": [
          {
            "name": "maritalStatusId",
            "in": "path",
            "description": "gets a maritalStatus entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/maritalStatus"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "MaritalStatuss"
        ],
        "description": "Updates a maritalStatus entry in the system",
        "parameters": [
          {
            "name": "maritalStatusId",
            "in": "path",
            "description": "gets a maritalStatus entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/maritalStatus"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "maritalStatus entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "MaritalStatuss"
        ],
        "description": "Deletes a maritalStatus entry in the system",
        "parameters": [
          {
            "name": "maritalStatusId",
            "in": "path",
            "description": "gets a maritalStatus entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "maritalStatus entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/MenuStates": {
      "post": {
        "tags": [
          "MenuStates"
        ],
        "description": "Adds a menuState entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/menuState"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "menuState entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/MenuStates/{menuStateId}": {
      "get": {
        "tags": [
          "MenuStates"
        ],
        "parameters": [
          {
            "name": "menuStateId",
            "in": "path",
            "description": "gets a menuState entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/menuState"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "MenuStates"
        ],
        "description": "Updates a menuState entry in the system",
        "parameters": [
          {
            "name": "menuStateId",
            "in": "path",
            "description": "gets a menuState entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/menuState"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "menuState entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "MenuStates"
        ],
        "description": "Deletes a menuState entry in the system",
        "parameters": [
          {
            "name": "menuStateId",
            "in": "path",
            "description": "gets a menuState entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "menuState entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/Messages": {
      "post": {
        "tags": [
          "Messages"
        ],
        "description": "Adds a message entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/message"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "message entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/Messages/{mesgId}": {
      "get": {
        "tags": [
          "Messages"
        ],
        "parameters": [
          {
            "name": "mesgId",
            "in": "path",
            "description": "gets a message entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/message"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "Messages"
        ],
        "description": "Updates a message entry in the system",
        "parameters": [
          {
            "name": "mesgId",
            "in": "path",
            "description": "gets a message entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/message"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "message entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "Messages"
        ],
        "description": "Deletes a message entry in the system",
        "parameters": [
          {
            "name": "mesgId",
            "in": "path",
            "description": "gets a message entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "message entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/CurrentDependentEligibilitys": {
      "post": {
        "tags": [
          "CurrentDependentEligibilitys"
        ],
        "description": "Adds a currentDependentEligibility entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/currentDependentEligibility"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "currentDependentEligibility entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/CurrentDependentEligibilitys/{historyDetailId}": {
      "get": {
        "tags": [
          "CurrentDependentEligibilitys"
        ],
        "parameters": [
          {
            "name": "historyDetailId",
            "in": "path",
            "description": "gets a currentDependentEligibility entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/currentDependentEligibility"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "CurrentDependentEligibilitys"
        ],
        "description": "Updates a currentDependentEligibility entry in the system",
        "parameters": [
          {
            "name": "historyDetailId",
            "in": "path",
            "description": "gets a currentDependentEligibility entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/currentDependentEligibility"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "currentDependentEligibility entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "CurrentDependentEligibilitys"
        ],
        "description": "Deletes a currentDependentEligibility entry in the system",
        "parameters": [
          {
            "name": "historyDetailId",
            "in": "path",
            "description": "gets a currentDependentEligibility entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "currentDependentEligibility entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/Msfaas": {
      "post": {
        "tags": [
          "Msfaas"
        ],
        "description": "Adds a msfaa entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/msfaa"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "msfaa entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/Msfaas/{msfaaId}": {
      "get": {
        "tags": [
          "Msfaas"
        ],
        "parameters": [
          {
            "name": "msfaaId",
            "in": "path",
            "description": "gets a msfaa entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/msfaa"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "Msfaas"
        ],
        "description": "Updates a msfaa entry in the system",
        "parameters": [
          {
            "name": "msfaaId",
            "in": "path",
            "description": "gets a msfaa entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/msfaa"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "msfaa entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "Msfaas"
        ],
        "description": "Deletes a msfaa entry in the system",
        "parameters": [
          {
            "name": "msfaaId",
            "in": "path",
            "description": "gets a msfaa entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "msfaa entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/FundingHistorys": {
      "post": {
        "tags": [
          "FundingHistorys"
        ],
        "description": "Adds a fundingHistory entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/fundingHistory"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "fundingHistory entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/FundingHistorys/{studentId}": {
      "get": {
        "tags": [
          "FundingHistorys"
        ],
        "parameters": [
          {
            "name": "studentId",
            "in": "path",
            "description": "gets a fundingHistory entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/fundingHistory"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "FundingHistorys"
        ],
        "description": "Updates a fundingHistory entry in the system",
        "parameters": [
          {
            "name": "studentId",
            "in": "path",
            "description": "gets a fundingHistory entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/fundingHistory"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "fundingHistory entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "FundingHistorys"
        ],
        "description": "Deletes a fundingHistory entry in the system",
        "parameters": [
          {
            "name": "studentId",
            "in": "path",
            "description": "gets a fundingHistory entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "fundingHistory entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/MsfaaEmailLogs": {
      "post": {
        "tags": [
          "MsfaaEmailLogs"
        ],
        "description": "Adds a msfaaEmailLog entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/msfaaEmailLog"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "msfaaEmailLog entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/MsfaaEmailLogs/{msfaaEmailLogId}": {
      "get": {
        "tags": [
          "MsfaaEmailLogs"
        ],
        "parameters": [
          {
            "name": "msfaaEmailLogId",
            "in": "path",
            "description": "gets a msfaaEmailLog entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/msfaaEmailLog"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "MsfaaEmailLogs"
        ],
        "description": "Updates a msfaaEmailLog entry in the system",
        "parameters": [
          {
            "name": "msfaaEmailLogId",
            "in": "path",
            "description": "gets a msfaaEmailLog entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/msfaaEmailLog"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "msfaaEmailLog entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "MsfaaEmailLogs"
        ],
        "description": "Deletes a msfaaEmailLog entry in the system",
        "parameters": [
          {
            "name": "msfaaEmailLogId",
            "in": "path",
            "description": "gets a msfaaEmailLog entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "msfaaEmailLog entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/FundingRequestRequirements": {
      "post": {
        "tags": [
          "FundingRequestRequirements"
        ],
        "description": "Adds a fundingRequestRequirement entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/fundingRequestRequirement"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "fundingRequestRequirement entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/FundingRequestRequirements/{requestTypeId}": {
      "get": {
        "tags": [
          "FundingRequestRequirements"
        ],
        "parameters": [
          {
            "name": "requestTypeId",
            "in": "path",
            "description": "gets a fundingRequestRequirement entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/fundingRequestRequirement"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "FundingRequestRequirements"
        ],
        "description": "Updates a fundingRequestRequirement entry in the system",
        "parameters": [
          {
            "name": "requestTypeId",
            "in": "path",
            "description": "gets a fundingRequestRequirement entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/fundingRequestRequirement"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "fundingRequestRequirement entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "FundingRequestRequirements"
        ],
        "description": "Deletes a fundingRequestRequirement entry in the system",
        "parameters": [
          {
            "name": "requestTypeId",
            "in": "path",
            "description": "gets a fundingRequestRequirement entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "fundingRequestRequirement entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/MsfaaImports": {
      "post": {
        "tags": [
          "MsfaaImports"
        ],
        "description": "Adds a msfaaImport entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/msfaaImport"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "msfaaImport entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/MsfaaImports/{agreementNumber}": {
      "get": {
        "tags": [
          "MsfaaImports"
        ],
        "parameters": [
          {
            "name": "agreementNumber",
            "in": "path",
            "description": "gets a msfaaImport entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/msfaaImport"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "MsfaaImports"
        ],
        "description": "Updates a msfaaImport entry in the system",
        "parameters": [
          {
            "name": "agreementNumber",
            "in": "path",
            "description": "gets a msfaaImport entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/msfaaImport"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "msfaaImport entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "MsfaaImports"
        ],
        "description": "Deletes a msfaaImport entry in the system",
        "parameters": [
          {
            "name": "agreementNumber",
            "in": "path",
            "description": "gets a msfaaImport entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "msfaaImport entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/InqStatuss": {
      "post": {
        "tags": [
          "InqStatuss"
        ],
        "description": "Adds a inqStatus entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/inqStatus"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "inqStatus entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/InqStatuss/{requestType}": {
      "get": {
        "tags": [
          "InqStatuss"
        ],
        "parameters": [
          {
            "name": "requestType",
            "in": "path",
            "description": "gets a inqStatus entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inqStatus"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "InqStatuss"
        ],
        "description": "Updates a inqStatus entry in the system",
        "parameters": [
          {
            "name": "requestType",
            "in": "path",
            "description": "gets a inqStatus entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/inqStatus"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "inqStatus entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "InqStatuss"
        ],
        "description": "Deletes a inqStatus entry in the system",
        "parameters": [
          {
            "name": "requestType",
            "in": "path",
            "description": "gets a inqStatus entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "inqStatus entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/Officers": {
      "post": {
        "tags": [
          "Officers"
        ],
        "description": "Adds a officer entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/officer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "officer entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/Officers/{officerId}": {
      "get": {
        "tags": [
          "Officers"
        ],
        "parameters": [
          {
            "name": "officerId",
            "in": "path",
            "description": "gets a officer entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/officer"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "Officers"
        ],
        "description": "Updates a officer entry in the system",
        "parameters": [
          {
            "name": "officerId",
            "in": "path",
            "description": "gets a officer entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/officer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "officer entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "Officers"
        ],
        "description": "Deletes a officer entry in the system",
        "parameters": [
          {
            "name": "officerId",
            "in": "path",
            "description": "gets a officer entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "officer entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/RequestRequirementMets": {
      "post": {
        "tags": [
          "RequestRequirementMets"
        ],
        "description": "Adds a requestRequirementMet entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/requestRequirementMet"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "requestRequirementMet entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/RequestRequirementMets/{requestTypeId}": {
      "get": {
        "tags": [
          "RequestRequirementMets"
        ],
        "parameters": [
          {
            "name": "requestTypeId",
            "in": "path",
            "description": "gets a requestRequirementMet entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/requestRequirementMet"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "RequestRequirementMets"
        ],
        "description": "Updates a requestRequirementMet entry in the system",
        "parameters": [
          {
            "name": "requestTypeId",
            "in": "path",
            "description": "gets a requestRequirementMet entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/requestRequirementMet"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "requestRequirementMet entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "RequestRequirementMets"
        ],
        "description": "Deletes a requestRequirementMet entry in the system",
        "parameters": [
          {
            "name": "requestTypeId",
            "in": "path",
            "description": "gets a requestRequirementMet entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "requestRequirementMet entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/Ownerships": {
      "post": {
        "tags": [
          "Ownerships"
        ],
        "description": "Adds a ownership entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ownership"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ownership entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/Ownerships/{ownershipId}": {
      "get": {
        "tags": [
          "Ownerships"
        ],
        "parameters": [
          {
            "name": "ownershipId",
            "in": "path",
            "description": "gets a ownership entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ownership"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "Ownerships"
        ],
        "description": "Updates a ownership entry in the system",
        "parameters": [
          {
            "name": "ownershipId",
            "in": "path",
            "description": "gets a ownership entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ownership"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ownership entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "Ownerships"
        ],
        "description": "Deletes a ownership entry in the system",
        "parameters": [
          {
            "name": "ownershipId",
            "in": "path",
            "description": "gets a ownership entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ownership entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/RequirementMetViews": {
      "post": {
        "tags": [
          "RequirementMetViews"
        ],
        "description": "Adds a requirementMetView entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/requirementMetView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "requirementMetView entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/RequirementMetViews/{requirementMetId}": {
      "get": {
        "tags": [
          "RequirementMetViews"
        ],
        "parameters": [
          {
            "name": "requirementMetId",
            "in": "path",
            "description": "gets a requirementMetView entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/requirementMetView"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "RequirementMetViews"
        ],
        "description": "Updates a requirementMetView entry in the system",
        "parameters": [
          {
            "name": "requirementMetId",
            "in": "path",
            "description": "gets a requirementMetView entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/requirementMetView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "requirementMetView entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "RequirementMetViews"
        ],
        "description": "Deletes a requirementMetView entry in the system",
        "parameters": [
          {
            "name": "requirementMetId",
            "in": "path",
            "description": "gets a requirementMetView entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "requirementMetView entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/ParentContributionFormulas": {
      "post": {
        "tags": [
          "ParentContributionFormulas"
        ],
        "description": "Adds a parentContributionFormula entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/parentContributionFormula"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "parentContributionFormula entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/ParentContributionFormulas/{academicYear}": {
      "get": {
        "tags": [
          "ParentContributionFormulas"
        ],
        "parameters": [
          {
            "name": "academicYear",
            "in": "path",
            "description": "gets a parentContributionFormula entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/parentContributionFormula"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "ParentContributionFormulas"
        ],
        "description": "Updates a parentContributionFormula entry in the system",
        "parameters": [
          {
            "name": "academicYear",
            "in": "path",
            "description": "gets a parentContributionFormula entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/parentContributionFormula"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "parentContributionFormula entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "ParentContributionFormulas"
        ],
        "description": "Deletes a parentContributionFormula entry in the system",
        "parameters": [
          {
            "name": "academicYear",
            "in": "path",
            "description": "gets a parentContributionFormula entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "parentContributionFormula entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/SfaiFundingHistorys": {
      "post": {
        "tags": [
          "SfaiFundingHistorys"
        ],
        "description": "Adds a sfaiFundingHistory entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/sfaiFundingHistory"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "sfaiFundingHistory entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/SfaiFundingHistorys/{studentId}": {
      "get": {
        "tags": [
          "SfaiFundingHistorys"
        ],
        "parameters": [
          {
            "name": "studentId",
            "in": "path",
            "description": "gets a sfaiFundingHistory entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/sfaiFundingHistory"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "SfaiFundingHistorys"
        ],
        "description": "Updates a sfaiFundingHistory entry in the system",
        "parameters": [
          {
            "name": "studentId",
            "in": "path",
            "description": "gets a sfaiFundingHistory entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/sfaiFundingHistory"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "sfaiFundingHistory entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "SfaiFundingHistorys"
        ],
        "description": "Deletes a sfaiFundingHistory entry in the system",
        "parameters": [
          {
            "name": "studentId",
            "in": "path",
            "description": "gets a sfaiFundingHistory entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "sfaiFundingHistory entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/ParentDependents": {
      "post": {
        "tags": [
          "ParentDependents"
        ],
        "description": "Adds a parentDependent entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/parentDependent"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "parentDependent entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/ParentDependents/{parentDependentId}": {
      "get": {
        "tags": [
          "ParentDependents"
        ],
        "parameters": [
          {
            "name": "parentDependentId",
            "in": "path",
            "description": "gets a parentDependent entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/parentDependent"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "ParentDependents"
        ],
        "description": "Updates a parentDependent entry in the system",
        "parameters": [
          {
            "name": "parentDependentId",
            "in": "path",
            "description": "gets a parentDependent entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/parentDependent"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "parentDependent entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "ParentDependents"
        ],
        "description": "Deletes a parentDependent entry in the system",
        "parameters": [
          {
            "name": "parentDependentId",
            "in": "path",
            "description": "gets a parentDependent entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "parentDependent entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/StepChangeReasonss": {
      "post": {
        "tags": [
          "StepChangeReasonss"
        ],
        "description": "Adds a stepChangeReasons entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/stepChangeReasons"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "stepChangeReasons entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/StepChangeReasonss/{studentId}": {
      "get": {
        "tags": [
          "StepChangeReasonss"
        ],
        "parameters": [
          {
            "name": "studentId",
            "in": "path",
            "description": "gets a stepChangeReasons entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/stepChangeReasons"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "StepChangeReasonss"
        ],
        "description": "Updates a stepChangeReasons entry in the system",
        "parameters": [
          {
            "name": "studentId",
            "in": "path",
            "description": "gets a stepChangeReasons entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/stepChangeReasons"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "stepChangeReasons entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "StepChangeReasonss"
        ],
        "description": "Deletes a stepChangeReasons entry in the system",
        "parameters": [
          {
            "name": "studentId",
            "in": "path",
            "description": "gets a stepChangeReasons entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "stepChangeReasons entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/ParentResidents": {
      "post": {
        "tags": [
          "ParentResidents"
        ],
        "description": "Adds a parentResident entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/parentResident"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "parentResident entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/ParentResidents/{parentResidentId}": {
      "get": {
        "tags": [
          "ParentResidents"
        ],
        "parameters": [
          {
            "name": "parentResidentId",
            "in": "path",
            "description": "gets a parentResident entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/parentResident"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "ParentResidents"
        ],
        "description": "Updates a parentResident entry in the system",
        "parameters": [
          {
            "name": "parentResidentId",
            "in": "path",
            "description": "gets a parentResident entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/parentResident"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "parentResident entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "ParentResidents"
        ],
        "description": "Deletes a parentResident entry in the system",
        "parameters": [
          {
            "name": "parentResidentId",
            "in": "path",
            "description": "gets a parentResident entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "parentResident entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/VwApplicationRequirementss": {
      "post": {
        "tags": [
          "VwApplicationRequirementss"
        ],
        "description": "Adds a vwApplicationRequirements entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/vwApplicationRequirements"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "vwApplicationRequirements entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/VwApplicationRequirementss/{historyDetailId}": {
      "get": {
        "tags": [
          "VwApplicationRequirementss"
        ],
        "parameters": [
          {
            "name": "historyDetailId",
            "in": "path",
            "description": "gets a vwApplicationRequirements entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/vwApplicationRequirements"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "VwApplicationRequirementss"
        ],
        "description": "Updates a vwApplicationRequirements entry in the system",
        "parameters": [
          {
            "name": "historyDetailId",
            "in": "path",
            "description": "gets a vwApplicationRequirements entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/vwApplicationRequirements"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "vwApplicationRequirements entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "VwApplicationRequirementss"
        ],
        "description": "Deletes a vwApplicationRequirements entry in the system",
        "parameters": [
          {
            "name": "historyDetailId",
            "in": "path",
            "description": "gets a vwApplicationRequirements entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "vwApplicationRequirements entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/PartTimeReasons": {
      "post": {
        "tags": [
          "PartTimeReasons"
        ],
        "description": "Adds a partTimeReason entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/partTimeReason"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partTimeReason entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/PartTimeReasons/{partTimeReasonId}": {
      "get": {
        "tags": [
          "PartTimeReasons"
        ],
        "parameters": [
          {
            "name": "partTimeReasonId",
            "in": "path",
            "description": "gets a partTimeReason entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/partTimeReason"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "PartTimeReasons"
        ],
        "description": "Updates a partTimeReason entry in the system",
        "parameters": [
          {
            "name": "partTimeReasonId",
            "in": "path",
            "description": "gets a partTimeReason entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/partTimeReason"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "partTimeReason entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "PartTimeReasons"
        ],
        "description": "Deletes a partTimeReason entry in the system",
        "parameters": [
          {
            "name": "partTimeReasonId",
            "in": "path",
            "description": "gets a partTimeReason entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "partTimeReason entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/YeaDistincts": {
      "post": {
        "tags": [
          "YeaDistincts"
        ],
        "description": "Adds a yeaDistinct entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/yeaDistinct"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "yeaDistinct entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/YeaDistincts/{ytid}": {
      "get": {
        "tags": [
          "YeaDistincts"
        ],
        "parameters": [
          {
            "name": "ytid",
            "in": "path",
            "description": "gets a yeaDistinct entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/yeaDistinct"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "YeaDistincts"
        ],
        "description": "Updates a yeaDistinct entry in the system",
        "parameters": [
          {
            "name": "ytid",
            "in": "path",
            "description": "gets a yeaDistinct entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/yeaDistinct"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "yeaDistinct entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "YeaDistincts"
        ],
        "description": "Deletes a yeaDistinct entry in the system",
        "parameters": [
          {
            "name": "ytid",
            "in": "path",
            "description": "gets a yeaDistinct entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "yeaDistinct entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/Periods": {
      "post": {
        "tags": [
          "Periods"
        ],
        "description": "Adds a period entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/period"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "period entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/Periods/{periodId}": {
      "get": {
        "tags": [
          "Periods"
        ],
        "parameters": [
          {
            "name": "periodId",
            "in": "path",
            "description": "gets a period entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/period"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "Periods"
        ],
        "description": "Updates a period entry in the system",
        "parameters": [
          {
            "name": "periodId",
            "in": "path",
            "description": "gets a period entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/period"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "period entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "Periods"
        ],
        "description": "Deletes a period entry in the system",
        "parameters": [
          {
            "name": "periodId",
            "in": "path",
            "description": "gets a period entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "period entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/YgStatsExports": {
      "post": {
        "tags": [
          "YgStatsExports"
        ],
        "description": "Adds a ygStatsExport entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ygStatsExport"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ygStatsExport entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/YgStatsExports/{studentId}": {
      "get": {
        "tags": [
          "YgStatsExports"
        ],
        "parameters": [
          {
            "name": "studentId",
            "in": "path",
            "description": "gets a ygStatsExport entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ygStatsExport"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "YgStatsExports"
        ],
        "description": "Updates a ygStatsExport entry in the system",
        "parameters": [
          {
            "name": "studentId",
            "in": "path",
            "description": "gets a ygStatsExport entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ygStatsExport"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ygStatsExport entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "YgStatsExports"
        ],
        "description": "Deletes a ygStatsExport entry in the system",
        "parameters": [
          {
            "name": "studentId",
            "in": "path",
            "description": "gets a ygStatsExport entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ygStatsExport entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/PortalStatuss": {
      "post": {
        "tags": [
          "PortalStatuss"
        ],
        "description": "Adds a portalStatus entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/portalStatus"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "portalStatus entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/PortalStatuss/{portalStatusId}": {
      "get": {
        "tags": [
          "PortalStatuss"
        ],
        "parameters": [
          {
            "name": "portalStatusId",
            "in": "path",
            "description": "gets a portalStatus entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/portalStatus"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "PortalStatuss"
        ],
        "description": "Updates a portalStatus entry in the system",
        "parameters": [
          {
            "name": "portalStatusId",
            "in": "path",
            "description": "gets a portalStatus entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/portalStatus"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "portalStatus entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "PortalStatuss"
        ],
        "description": "Deletes a portalStatus entry in the system",
        "parameters": [
          {
            "name": "portalStatusId",
            "in": "path",
            "description": "gets a portalStatus entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "portalStatus entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/PrestudyEmployStatuss": {
      "post": {
        "tags": [
          "PrestudyEmployStatuss"
        ],
        "description": "Adds a prestudyEmployStatus entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/prestudyEmployStatus"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "prestudyEmployStatus entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/PrestudyEmployStatuss/{prestudyEmployStatusId}": {
      "get": {
        "tags": [
          "PrestudyEmployStatuss"
        ],
        "parameters": [
          {
            "name": "prestudyEmployStatusId",
            "in": "path",
            "description": "gets a prestudyEmployStatus entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/prestudyEmployStatus"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "PrestudyEmployStatuss"
        ],
        "description": "Updates a prestudyEmployStatus entry in the system",
        "parameters": [
          {
            "name": "prestudyEmployStatusId",
            "in": "path",
            "description": "gets a prestudyEmployStatus entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/prestudyEmployStatus"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "prestudyEmployStatus entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "PrestudyEmployStatuss"
        ],
        "description": "Deletes a prestudyEmployStatus entry in the system",
        "parameters": [
          {
            "name": "prestudyEmployStatusId",
            "in": "path",
            "description": "gets a prestudyEmployStatus entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "prestudyEmployStatus entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/PrestudyEmployments": {
      "post": {
        "tags": [
          "PrestudyEmployments"
        ],
        "description": "Adds a prestudyEmployment entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/prestudyEmployment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "prestudyEmployment entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/PrestudyEmployments/{prestudyEmploymentId}": {
      "get": {
        "tags": [
          "PrestudyEmployments"
        ],
        "parameters": [
          {
            "name": "prestudyEmploymentId",
            "in": "path",
            "description": "gets a prestudyEmployment entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/prestudyEmployment"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "PrestudyEmployments"
        ],
        "description": "Updates a prestudyEmployment entry in the system",
        "parameters": [
          {
            "name": "prestudyEmploymentId",
            "in": "path",
            "description": "gets a prestudyEmployment entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/prestudyEmployment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "prestudyEmployment entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "PrestudyEmployments"
        ],
        "description": "Deletes a prestudyEmployment entry in the system",
        "parameters": [
          {
            "name": "prestudyEmploymentId",
            "in": "path",
            "description": "gets a prestudyEmployment entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "prestudyEmployment entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/PrestudyTaxRates": {
      "post": {
        "tags": [
          "PrestudyTaxRates"
        ],
        "description": "Adds a prestudyTaxRate entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/prestudyTaxRate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "prestudyTaxRate entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/PrestudyTaxRates/{academicYear}": {
      "get": {
        "tags": [
          "PrestudyTaxRates"
        ],
        "parameters": [
          {
            "name": "academicYear",
            "in": "path",
            "description": "gets a prestudyTaxRate entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/prestudyTaxRate"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "PrestudyTaxRates"
        ],
        "description": "Updates a prestudyTaxRate entry in the system",
        "parameters": [
          {
            "name": "academicYear",
            "in": "path",
            "description": "gets a prestudyTaxRate entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/prestudyTaxRate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "prestudyTaxRate entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "PrestudyTaxRates"
        ],
        "description": "Deletes a prestudyTaxRate entry in the system",
        "parameters": [
          {
            "name": "academicYear",
            "in": "path",
            "description": "gets a prestudyTaxRate entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "prestudyTaxRate entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/Programs": {
      "post": {
        "tags": [
          "Programs"
        ],
        "description": "Adds a program entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/program"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "program entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/Programs/{programId}": {
      "get": {
        "tags": [
          "Programs"
        ],
        "parameters": [
          {
            "name": "programId",
            "in": "path",
            "description": "gets a program entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/program"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "Programs"
        ],
        "description": "Updates a program entry in the system",
        "parameters": [
          {
            "name": "programId",
            "in": "path",
            "description": "gets a program entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/program"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "program entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "Programs"
        ],
        "description": "Deletes a program entry in the system",
        "parameters": [
          {
            "name": "programId",
            "in": "path",
            "description": "gets a program entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "program entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/Provinces": {
      "post": {
        "tags": [
          "Provinces"
        ],
        "description": "Adds a province entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/province"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "province entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/Provinces/{provinceId}": {
      "get": {
        "tags": [
          "Provinces"
        ],
        "parameters": [
          {
            "name": "provinceId",
            "in": "path",
            "description": "gets a province entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/province"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "Provinces"
        ],
        "description": "Updates a province entry in the system",
        "parameters": [
          {
            "name": "provinceId",
            "in": "path",
            "description": "gets a province entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/province"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "province entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "Provinces"
        ],
        "description": "Deletes a province entry in the system",
        "parameters": [
          {
            "name": "provinceId",
            "in": "path",
            "description": "gets a province entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "province entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/Relationships": {
      "post": {
        "tags": [
          "Relationships"
        ],
        "description": "Adds a relationship entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/relationship"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "relationship entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/Relationships/{relationshipId}": {
      "get": {
        "tags": [
          "Relationships"
        ],
        "parameters": [
          {
            "name": "relationshipId",
            "in": "path",
            "description": "gets a relationship entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/relationship"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "Relationships"
        ],
        "description": "Updates a relationship entry in the system",
        "parameters": [
          {
            "name": "relationshipId",
            "in": "path",
            "description": "gets a relationship entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/relationship"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "relationship entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "Relationships"
        ],
        "description": "Deletes a relationship entry in the system",
        "parameters": [
          {
            "name": "relationshipId",
            "in": "path",
            "description": "gets a relationship entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "relationship entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/ReportExpenseCategorys": {
      "post": {
        "tags": [
          "ReportExpenseCategorys"
        ],
        "description": "Adds a reportExpenseCategory entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/reportExpenseCategory"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "reportExpenseCategory entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/ReportExpenseCategorys/{reportExpenseCategoryId}": {
      "get": {
        "tags": [
          "ReportExpenseCategorys"
        ],
        "parameters": [
          {
            "name": "reportExpenseCategoryId",
            "in": "path",
            "description": "gets a reportExpenseCategory entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/reportExpenseCategory"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "ReportExpenseCategorys"
        ],
        "description": "Updates a reportExpenseCategory entry in the system",
        "parameters": [
          {
            "name": "reportExpenseCategoryId",
            "in": "path",
            "description": "gets a reportExpenseCategory entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/reportExpenseCategory"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "reportExpenseCategory entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "ReportExpenseCategorys"
        ],
        "description": "Deletes a reportExpenseCategory entry in the system",
        "parameters": [
          {
            "name": "reportExpenseCategoryId",
            "in": "path",
            "description": "gets a reportExpenseCategory entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "reportExpenseCategory entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    },
    "/RequestRequirements": {
      "post": {
        "tags": [
          "RequestRequirements"
        ],
        "description": "Adds a requestRequirement entry to the system",
        "requestBody": {
          "description": "add entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/requestRequirement"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "requestRequirement entry created"
          },
          "400": {
            "description": "invalid input, entry invalid"
          },
          "409": {
            "description": "an existing entry already exists"
          }
        }
      }
    },
    "/RequestRequirements/{requestTypeId}": {
      "get": {
        "tags": [
          "RequestRequirements"
        ],
        "parameters": [
          {
            "name": "requestTypeId",
            "in": "path",
            "description": "gets a requestRequirement entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/requestRequirement"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "put": {
        "tags": [
          "RequestRequirements"
        ],
        "description": "Updates a requestRequirement entry in the system",
        "parameters": [
          {
            "name": "requestTypeId",
            "in": "path",
            "description": "gets a requestRequirement entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "update entry",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/requestRequirement"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "requestRequirement entry updated"
          },
          "400": {
            "description": "invalid input, entry invalid"
          }
        }
      },
      "delete": {
        "tags": [
          "RequestRequirements"
        ],
        "description": "Deletes a requestRequirement entry in the system",
        "parameters": [
          {
            "name": "requestTypeId",
            "in": "path",
            "description": "gets a requestRequirement entry base on the ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "requestRequirement entry deleted"
          },
          "400": {
            "description": "invalid ID"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "requestStatusCorr": {
        "required": [
          "correspondenceTypeId",
          "createdBy",
          "createdDate",
          "requestTypeId",
          "rowid",
          "statusId",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "requestTypeId": {
            "type": "number"
          },
          "statusId": {
            "type": "number"
          },
          "correspondenceTypeId": {
            "type": "number"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "requestType": {
        "required": [
          "applicationDeadline",
          "applicationReqTypeId",
          "applicationTypeId",
          "autoAppear",
          "batchGroupId",
          "createdBy",
          "createdDate",
          "csgOtherFlag",
          "description",
          "financialCoding",
          "fundingGroupId",
          "glBudget",
          "helpText",
          "helpUrl",
          "isActiveFlg",
          "programType",
          "regulation",
          "requestTypeId",
          "rowid",
          "scholarshipFlag",
          "shortName",
          "showOnline",
          "staticDescriptionFlag",
          "t4aRequiredFlag",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "requestTypeId": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "scholarshipFlag": {
            "type": "number"
          },
          "applicationDeadline": {
            "type": "string"
          },
          "regulation": {
            "type": "string"
          },
          "applicationTypeId": {
            "type": "number"
          },
          "programType": {
            "type": "string"
          },
          "staticDescriptionFlag": {
            "type": "number"
          },
          "financialCoding": {
            "type": "string"
          },
          "fundingGroupId": {
            "type": "number"
          },
          "t4aRequiredFlag": {
            "type": "number"
          },
          "csgOtherFlag": {
            "type": "number"
          },
          "glBudget": {
            "type": "number"
          },
          "batchGroupId": {
            "type": "number"
          },
          "autoAppear": {
            "type": "string"
          },
          "isActiveFlg": {
            "type": "string"
          },
          "showOnline": {
            "type": "string"
          },
          "shortName": {
            "type": "string"
          },
          "helpUrl": {
            "type": "string"
          },
          "applicationReqTypeId": {
            "type": "number"
          },
          "helpText": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "requirementMet": {
        "required": [
          "completedDate",
          "createdBy",
          "createdDate",
          "historyDetailId",
          "requirementMetId",
          "requirementTypeId",
          "rowid",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "requirementMetId": {
            "type": "number"
          },
          "completedDate": {
            "type": "string"
          },
          "requirementTypeId": {
            "type": "number"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "historyDetailId": {
            "type": "number"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "requirementType": {
        "required": [
          "createdBy",
          "createdDate",
          "description",
          "documentLocation",
          "isActiveFlg",
          "requirementTypeId",
          "rowid",
          "showOnline",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "requirementTypeId": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "isActiveFlg": {
            "type": "string"
          },
          "documentLocation": {
            "type": "string"
          },
          "showOnline": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "residence": {
        "required": [
          "address",
          "cityId",
          "countryId",
          "createdBy",
          "createdDate",
          "fromMonth",
          "fromYear",
          "inSchool",
          "isInProgressFlg",
          "postalCode",
          "provinceId",
          "residenceId",
          "rowid",
          "studentId",
          "toMonth",
          "toYear",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "residenceId": {
            "type": "number"
          },
          "cityId": {
            "type": "number"
          },
          "provinceId": {
            "type": "number"
          },
          "postalCode": {
            "type": "string"
          },
          "countryId": {
            "type": "number"
          },
          "address": {
            "type": "string"
          },
          "inSchool": {
            "type": "number"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "studentId": {
            "type": "number"
          },
          "fromMonth": {
            "type": "number"
          },
          "toMonth": {
            "type": "number"
          },
          "fromYear": {
            "type": "number"
          },
          "toYear": {
            "type": "number"
          },
          "isInProgressFlg": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "sfaDocumentLink": {
        "required": [
          "createdBy",
          "createdDate",
          "description",
          "documentLocation",
          "isActiveFlg",
          "rowid",
          "sfaDocumentLinkId",
          "sortOrder",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "sfaDocumentLinkId": {
            "type": "number"
          },
          "isActiveFlg": {
            "type": "string"
          },
          "documentLocation": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "sortOrder": {
            "type": "number"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "spouseTaxRate": {
        "required": [
          "academicYear",
          "createdBy",
          "createdDate",
          "incomeFrom",
          "incomeTo",
          "provinceId",
          "rowid",
          "spouseTaxRate",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "academicYear": {
            "type": "number"
          },
          "provinceId": {
            "type": "number"
          },
          "incomeFrom": {
            "type": "number"
          },
          "incomeTo": {
            "type": "number"
          },
          "spouseTaxRate": {
            "type": "number"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "staLookup": {
        "required": [
          "academicYear",
          "createdBy",
          "createdDate",
          "dependentFour",
          "dependentOne",
          "dependentThree",
          "dependentTwo",
          "dependentZero",
          "rowid",
          "secondResidence",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "academicYear": {
            "type": "string"
          },
          "dependentZero": {
            "type": "number"
          },
          "dependentOne": {
            "type": "number"
          },
          "dependentTwo": {
            "type": "number"
          },
          "dependentThree": {
            "type": "number"
          },
          "dependentFour": {
            "type": "number"
          },
          "secondResidence": {
            "type": "number"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "standardOfLiving": {
        "required": [
          "academicYear",
          "createdBy",
          "createdDate",
          "familySize",
          "provinceId",
          "rowid",
          "standardLivingAmt",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "academicYear": {
            "type": "string"
          },
          "provinceId": {
            "type": "number"
          },
          "familySize": {
            "type": "number"
          },
          "standardLivingAmt": {
            "type": "number"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "status": {
        "required": [
          "createdBy",
          "createdDate",
          "description",
          "isActiveFlg",
          "onlineDescription",
          "rowid",
          "sort",
          "statusId",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "statusId": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "isActiveFlg": {
            "type": "string"
          },
          "sort": {
            "type": "number"
          },
          "onlineDescription": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "statusReason": {
        "required": [
          "createdBy",
          "createdDate",
          "description",
          "isActiveFlg",
          "rowid",
          "statusId",
          "statusReasonId",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "statusReasonId": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "statusId": {
            "type": "number"
          },
          "isActiveFlg": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "student": {
        "required": [
          "adjOutsideTravelCnt",
          "adjStaUpgradingWeeks",
          "adjYgFundingWeeks",
          "birthCityId",
          "birthCountryId",
          "birthDate",
          "birthProvinceId",
          "canadianResidentFromMonth",
          "canadianResidentFromYear",
          "checkedForYtidFlg",
          "createdBy",
          "createdDate",
          "crownWardFlg",
          "cslLetterDate",
          "cslWarnCode",
          "educationLevelId",
          "firstName",
          "highSchoolFinalGrade",
          "highSchoolId",
          "highSchoolLeftMonth",
          "highSchoolLeftYear",
          "homeAddress1",
          "homeAddress2",
          "homeCityId",
          "homeCountryId",
          "homeEmail",
          "homePhone",
          "homePostalCode",
          "homeProvinceId",
          "indigenousLearner",
          "initials",
          "isActiveFlg",
          "isFirstLogonFlg",
          "kinAddress1",
          "kinAddress2",
          "kinCityId",
          "kinCountryId",
          "kinFirstName",
          "kinLastName",
          "kinPostalCode",
          "kinProvinceId",
          "languageId",
          "lastLogonDate",
          "lastName",
          "lastPwChgDate",
          "locatorNumber",
          "mailingAddress1",
          "mailingAddress2",
          "mailingCityId",
          "mailingCountryId",
          "mailingPostalCode",
          "mailingProvinceId",
          "nationalId",
          "oldYtid",
          "parentMailingAddress1",
          "parentMailingAddress2",
          "parentMailingCityId",
          "parentMailingCountryId",
          "parentMailingPostalCode",
          "parentMailingProvinceId",
          "parentTelephone",
          "preFundedYear",
          "preFundingYearsUsed",
          "preOverAward",
          "preYeaAwardsUsed",
          "previousLastName",
          "residenceComment",
          "rowid",
          "schoolEmail",
          "schoolPhone",
          "sex",
          "sin",
          "spouseHsEndMonth",
          "spouseHsEndYear",
          "studentId",
          "updatedBy",
          "updatedDate",
          "userName",
          "userPassword",
          "vendorId",
          "yeaExpiryDate",
          "yukonId",
          "yukonResidentFromMonth",
          "yukonResidentFromYear"
        ],
        "type": "object",
        "properties": {
          "studentId": {
            "type": "number"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "initials": {
            "type": "string"
          },
          "vendorId": {
            "type": "string"
          },
          "yukonId": {
            "type": "string"
          },
          "sin": {
            "type": "number"
          },
          "nationalId": {
            "type": "string"
          },
          "cslLetterDate": {
            "type": "string"
          },
          "cslWarnCode": {
            "type": "string"
          },
          "languageId": {
            "type": "number"
          },
          "birthDate": {
            "type": "string"
          },
          "homeAddress1": {
            "type": "string"
          },
          "homeAddress2": {
            "type": "string"
          },
          "birthCityId": {
            "type": "number"
          },
          "birthCountryId": {
            "type": "number"
          },
          "homeCityId": {
            "type": "number"
          },
          "birthProvinceId": {
            "type": "number"
          },
          "homeProvinceId": {
            "type": "number"
          },
          "homeCountryId": {
            "type": "number"
          },
          "homePhone": {
            "type": "string"
          },
          "homePostalCode": {
            "type": "string"
          },
          "homeEmail": {
            "type": "string"
          },
          "locatorNumber": {
            "type": "string"
          },
          "mailingAddress1": {
            "type": "string"
          },
          "mailingAddress2": {
            "type": "string"
          },
          "mailingCityId": {
            "type": "number"
          },
          "mailingProvinceId": {
            "type": "number"
          },
          "mailingCountryId": {
            "type": "number"
          },
          "mailingPostalCode": {
            "type": "string"
          },
          "kinFirstName": {
            "type": "string"
          },
          "kinLastName": {
            "type": "string"
          },
          "kinAddress1": {
            "type": "string"
          },
          "kinCityId": {
            "type": "number"
          },
          "kinProvinceId": {
            "type": "number"
          },
          "kinCountryId": {
            "type": "number"
          },
          "preFundedYear": {
            "type": "number"
          },
          "preFundingYearsUsed": {
            "type": "number"
          },
          "schoolEmail": {
            "type": "string"
          },
          "schoolPhone": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "highSchoolFinalGrade": {
            "type": "string"
          },
          "parentMailingAddress1": {
            "type": "string"
          },
          "parentMailingAddress2": {
            "type": "string"
          },
          "parentMailingCityId": {
            "type": "number"
          },
          "parentMailingProvinceId": {
            "type": "number"
          },
          "parentMailingCountryId": {
            "type": "number"
          },
          "parentMailingPostalCode": {
            "type": "string"
          },
          "parentTelephone": {
            "type": "string"
          },
          "kinAddress2": {
            "type": "string"
          },
          "kinPostalCode": {
            "type": "string"
          },
          "preOverAward": {
            "type": "number"
          },
          "preYeaAwardsUsed": {
            "type": "number"
          },
          "educationLevelId": {
            "type": "number"
          },
          "canadianResidentFromMonth": {
            "type": "number"
          },
          "canadianResidentFromYear": {
            "type": "number"
          },
          "yukonResidentFromYear": {
            "type": "number"
          },
          "yukonResidentFromMonth": {
            "type": "number"
          },
          "highSchoolId": {
            "type": "number"
          },
          "highSchoolLeftYear": {
            "type": "number"
          },
          "highSchoolLeftMonth": {
            "type": "number"
          },
          "residenceComment": {
            "type": "string"
          },
          "sex": {
            "type": "number"
          },
          "spouseHsEndMonth": {
            "type": "number"
          },
          "spouseHsEndYear": {
            "type": "number"
          },
          "userName": {
            "type": "string"
          },
          "userPassword": {
            "type": "string"
          },
          "isActiveFlg": {
            "type": "string"
          },
          "isFirstLogonFlg": {
            "type": "string"
          },
          "lastPwChgDate": {
            "type": "string"
          },
          "lastLogonDate": {
            "type": "string"
          },
          "previousLastName": {
            "type": "string"
          },
          "yeaExpiryDate": {
            "type": "string"
          },
          "oldYtid": {
            "type": "string"
          },
          "adjYgFundingWeeks": {
            "type": "number"
          },
          "adjStaUpgradingWeeks": {
            "type": "number"
          },
          "adjOutsideTravelCnt": {
            "type": "number"
          },
          "checkedForYtidFlg": {
            "type": "string"
          },
          "indigenousLearner": {
            "type": "string"
          },
          "crownWardFlg": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "studentCategory": {
        "required": [
          "createdBy",
          "createdDate",
          "description",
          "isActiveFlg",
          "rowid",
          "studentCategoryCode",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "studentCategoryCode": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "isActiveFlg": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "studentConsent": {
        "required": [
          "academicYearEnd",
          "academicYearStart",
          "consentCslFlg",
          "consentPerson",
          "consentSfaFlg",
          "recCreateDate",
          "recCreateUser",
          "recLastModDate",
          "recLastModUser",
          "rowid",
          "studentConsentId",
          "studentId"
        ],
        "type": "object",
        "properties": {
          "studentConsentId": {
            "type": "number"
          },
          "studentId": {
            "type": "number"
          },
          "academicYearStart": {
            "type": "number"
          },
          "academicYearEnd": {
            "type": "number"
          },
          "consentPerson": {
            "type": "string"
          },
          "consentSfaFlg": {
            "type": "string"
          },
          "consentCslFlg": {
            "type": "string"
          },
          "recCreateDate": {
            "type": "string"
          },
          "recCreateUser": {
            "type": "string"
          },
          "recLastModDate": {
            "type": "string"
          },
          "recLastModUser": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "studentContribution": {
        "required": [
          "academicYear",
          "contributionAmount",
          "createdBy",
          "createdDate",
          "periodId",
          "provinceId",
          "rowid",
          "studentCategoryCode",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "academicYear": {
            "type": "string"
          },
          "periodId": {
            "type": "number"
          },
          "provinceId": {
            "type": "number"
          },
          "contributionAmount": {
            "type": "number"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "studentCategoryCode": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "studentLivingAllowance": {
        "required": [
          "academicYear",
          "createdBy",
          "createdDate",
          "foodAmount",
          "miscAmount",
          "provinceId",
          "publicTransAmount",
          "rowid",
          "shelterAmount",
          "studentCategoryCode",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "academicYear": {
            "type": "number"
          },
          "provinceId": {
            "type": "number"
          },
          "studentCategoryCode": {
            "type": "string"
          },
          "shelterAmount": {
            "type": "number"
          },
          "foodAmount": {
            "type": "number"
          },
          "miscAmount": {
            "type": "number"
          },
          "publicTransAmount": {
            "type": "number"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "studyArea": {
        "required": [
          "createdBy",
          "createdDate",
          "description",
          "isActiveFlg",
          "rowid",
          "showOnline",
          "studyAreaId",
          "studyFieldId",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "studyAreaId": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "studyFieldId": {
            "type": "number"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "isActiveFlg": {
            "type": "string"
          },
          "showOnline": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "studyField": {
        "required": [
          "createdBy",
          "createdDate",
          "description",
          "isActiveFlg",
          "rowid",
          "studyFieldId",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "studyFieldId": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "isActiveFlg": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "studyTaxRate": {
        "required": [
          "academicYear",
          "createdBy",
          "createdDate",
          "incomeFrom",
          "incomeTo",
          "rowid",
          "studyTaxRate",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "academicYear": {
            "type": "number"
          },
          "incomeFrom": {
            "type": "number"
          },
          "incomeTo": {
            "type": "number"
          },
          "studyTaxRate": {
            "type": "number"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "systemDepParams": {
        "required": [
          "createdBy",
          "createdDate",
          "dependentCount",
          "rowid",
          "updatedBy",
          "updatedDate",
          "weeklyRate"
        ],
        "type": "object",
        "properties": {
          "dependentCount": {
            "type": "number"
          },
          "weeklyRate": {
            "type": "number"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "systemParameter": {
        "required": [
          "academicStartYear",
          "arialTtfDirectory",
          "createdBy",
          "createdDate",
          "cslMaxWeeklyAmount",
          "cslftMsfaaText",
          "directorEmail",
          "directorNamePosition",
          "directorPhone",
          "environment",
          "financialBatchIdEnd",
          "financialBatchIdStart",
          "financialBatchIdYear",
          "lastMsfaaSentDate",
          "lastMsfaaSentSeqNum",
          "lastOnlineExpireDate",
          "letterheadTray",
          "ministerName",
          "monthlyBoardChangeDate",
          "msfaaEnclosedApprovalText",
          "msfaaNotEnclApprovalText",
          "previousFinBatchIdEnd",
          "previousFinBatchIdStart",
          "previousFinBatchIdYear",
          "rowid",
          "secondResidenceRate",
          "systemParameterId",
          "updatedBy",
          "updatedDate",
          "weeklyRate",
          "ygApprovalText",
          "ygQuarterWeeks",
          "ygSemesterWeeks"
        ],
        "type": "object",
        "properties": {
          "secondResidenceRate": {
            "type": "number"
          },
          "weeklyRate": {
            "type": "number"
          },
          "systemParameterId": {
            "type": "number"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "academicStartYear": {
            "type": "number"
          },
          "cslMaxWeeklyAmount": {
            "type": "number"
          },
          "ministerName": {
            "type": "string"
          },
          "financialBatchIdStart": {
            "type": "number"
          },
          "financialBatchIdEnd": {
            "type": "number"
          },
          "financialBatchIdYear": {
            "type": "number"
          },
          "previousFinBatchIdStart": {
            "type": "number"
          },
          "previousFinBatchIdEnd": {
            "type": "number"
          },
          "previousFinBatchIdYear": {
            "type": "number"
          },
          "lastOnlineExpireDate": {
            "type": "string"
          },
          "lastMsfaaSentDate": {
            "type": "string"
          },
          "lastMsfaaSentSeqNum": {
            "type": "number"
          },
          "msfaaEnclosedApprovalText": {
            "type": "string"
          },
          "msfaaNotEnclApprovalText": {
            "type": "string"
          },
          "monthlyBoardChangeDate": {
            "type": "string"
          },
          "arialTtfDirectory": {
            "type": "string"
          },
          "letterheadTray": {
            "type": "string"
          },
          "ygQuarterWeeks": {
            "type": "number"
          },
          "ygSemesterWeeks": {
            "type": "number"
          },
          "ygApprovalText": {
            "type": "string"
          },
          "directorNamePosition": {
            "type": "string"
          },
          "directorEmail": {
            "type": "string"
          },
          "directorPhone": {
            "type": "string"
          },
          "environment": {
            "type": "string"
          },
          "cslftMsfaaText": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "tabPageItem": {
        "required": [
          "canvasName",
          "createdBy",
          "createdDate",
          "firstItem",
          "formName",
          "rowid",
          "tabName",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "formName": {
            "type": "string"
          },
          "canvasName": {
            "type": "string"
          },
          "tabName": {
            "type": "string"
          },
          "firstItem": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "tableFormPoplist": {
        "required": [
          "createdBy",
          "createdDate",
          "formName",
          "listDisplayName",
          "listItemName",
          "rowid",
          "tableName",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "tableName": {
            "type": "string"
          },
          "formName": {
            "type": "string"
          },
          "listItemName": {
            "type": "string"
          },
          "listDisplayName": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "transportation": {
        "required": [
          "airfare",
          "createdBy",
          "createdDate",
          "homeCityId",
          "institutionCityId",
          "rowid",
          "transportationId",
          "travelAllowance",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "transportationId": {
            "type": "number"
          },
          "homeCityId": {
            "type": "number"
          },
          "institutionCityId": {
            "type": "number"
          },
          "travelAllowance": {
            "type": "number"
          },
          "airfare": {
            "type": "number"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "vehicle": {
        "required": [
          "createdBy",
          "createdDate",
          "historyDetailId",
          "marketValue",
          "rowid",
          "updatedBy",
          "updatedDate",
          "vehicleId",
          "vehicleMakeId",
          "vehicleModelId",
          "vehicleYear"
        ],
        "type": "object",
        "properties": {
          "vehicleId": {
            "type": "number"
          },
          "vehicleMakeId": {
            "type": "number"
          },
          "marketValue": {
            "type": "number"
          },
          "vehicleModelId": {
            "type": "number"
          },
          "vehicleYear": {
            "type": "number"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "historyDetailId": {
            "type": "number"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "vehicleMake": {
        "required": [
          "createdBy",
          "createdDate",
          "description",
          "isActiveFlg",
          "rowid",
          "updatedBy",
          "updatedDate",
          "vehicleMakeId"
        ],
        "type": "object",
        "properties": {
          "vehicleMakeId": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "isActiveFlg": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "vehicleModel": {
        "required": [
          "createdBy",
          "createdDate",
          "description",
          "isActiveFlg",
          "rowid",
          "updatedBy",
          "updatedDate",
          "vehicleModelId"
        ],
        "type": "object",
        "properties": {
          "vehicleModelId": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "isActiveFlg": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "vendorFmis": {
        "required": [
          "active",
          "addrcode",
          "vendid",
          "vendl1",
          "vendl2",
          "vendl3",
          "vendl4",
          "vendl5",
          "vendname",
          "vendpost"
        ],
        "type": "object",
        "properties": {
          "active": {
            "type": "string"
          },
          "vendid": {
            "type": "string"
          },
          "vendname": {
            "type": "string"
          },
          "vendl1": {
            "type": "string"
          },
          "vendl2": {
            "type": "string"
          },
          "vendl3": {
            "type": "string"
          },
          "vendl4": {
            "type": "string"
          },
          "vendl5": {
            "type": "string"
          },
          "vendpost": {
            "type": "string"
          },
          "addrcode": {
            "type": "string"
          }
        }
      },
      "vendorUpdate": {
        "required": [
          "addr1",
          "addr2",
          "addr3",
          "addr4",
          "addr5",
          "addr6",
          "createdBy",
          "createdDate",
          "name",
          "postcode",
          "reportRunDate",
          "rowid",
          "studentId",
          "updateCompletedDate",
          "updateRequestedDate",
          "updatedBy",
          "updatedDate",
          "vendid",
          "vendorUpdateId"
        ],
        "type": "object",
        "properties": {
          "vendorUpdateId": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "addr1": {
            "type": "string"
          },
          "addr2": {
            "type": "string"
          },
          "addr3": {
            "type": "string"
          },
          "addr4": {
            "type": "string"
          },
          "addr5": {
            "type": "string"
          },
          "postcode": {
            "type": "string"
          },
          "vendid": {
            "type": "string"
          },
          "updateRequestedDate": {
            "type": "string"
          },
          "updateCompletedDate": {
            "type": "string"
          },
          "studentId": {
            "type": "number"
          },
          "reportRunDate": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "addr6": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "verificationLog": {
        "required": [
          "emailedFlg",
          "institutionId",
          "recCreateDate",
          "recCreateUser",
          "recLastModDate",
          "recLastModUser",
          "rowid",
          "studentCount",
          "verificationLogId"
        ],
        "type": "object",
        "properties": {
          "verificationLogId": {
            "type": "number"
          },
          "institutionId": {
            "type": "number"
          },
          "emailedFlg": {
            "type": "string"
          },
          "studentCount": {
            "type": "number"
          },
          "recCreateDate": {
            "type": "string"
          },
          "recCreateUser": {
            "type": "string"
          },
          "recLastModDate": {
            "type": "string"
          },
          "recLastModUser": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "yea": {
        "required": [
          "birthDt",
          "course",
          "createdDate",
          "fname",
          "lname",
          "oldYtid",
          "schoolmn",
          "schoolyr",
          "updatedDate",
          "yeaAmnt",
          "ytid"
        ],
        "type": "object",
        "properties": {
          "fname": {
            "type": "string"
          },
          "lname": {
            "type": "string"
          },
          "birthDt": {
            "type": "string"
          },
          "ytid": {
            "type": "string"
          },
          "schoolyr": {
            "type": "number"
          },
          "schoolmn": {
            "type": "number"
          },
          "course": {
            "type": "string"
          },
          "yeaAmnt": {
            "type": "number"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "oldYtid": {
            "type": "string"
          }
        }
      },
      "yeaUpdate": {
        "required": [
          "birthDt",
          "course",
          "createdDate",
          "fname",
          "lname",
          "origYeaAmnt",
          "schoolmn",
          "schoolyr",
          "yeaAmnt",
          "ytid"
        ],
        "type": "object",
        "properties": {
          "fname": {
            "type": "string"
          },
          "lname": {
            "type": "string"
          },
          "birthDt": {
            "type": "string"
          },
          "ytid": {
            "type": "string"
          },
          "schoolyr": {
            "type": "number"
          },
          "schoolmn": {
            "type": "number"
          },
          "course": {
            "type": "string"
          },
          "origYeaAmnt": {
            "type": "number"
          },
          "yeaAmnt": {
            "type": "number"
          },
          "createdDate": {
            "type": "string"
          }
        }
      },
      "ygCost": {
        "required": [
          "academicYear",
          "allowedPercent",
          "createdBy",
          "createdDate",
          "effectiveDate",
          "expiryDate",
          "quarterBookAmt",
          "quarterLivingAmt",
          "quarterTuitionAmt",
          "rowid",
          "semesterBookAmt",
          "semesterLivingAmt",
          "semesterTuitionAmt",
          "updatedBy",
          "updatedDate",
          "weeklyAmount",
          "ygCostId"
        ],
        "type": "object",
        "properties": {
          "ygCostId": {
            "type": "number"
          },
          "semesterLivingAmt": {
            "type": "number"
          },
          "semesterTuitionAmt": {
            "type": "number"
          },
          "semesterBookAmt": {
            "type": "number"
          },
          "effectiveDate": {
            "type": "string"
          },
          "expiryDate": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "quarterLivingAmt": {
            "type": "number"
          },
          "quarterTuitionAmt": {
            "type": "number"
          },
          "quarterBookAmt": {
            "type": "number"
          },
          "allowedPercent": {
            "type": "number"
          },
          "academicYear": {
            "type": "string"
          },
          "weeklyAmount": {
            "type": "number"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "aboriginalStatus": {
        "required": [
          "aboriginalStatusId",
          "createdBy",
          "createdDate",
          "description",
          "isActiveFlg",
          "narsStatusId",
          "rowid",
          "sortOrder",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "aboriginalStatusId": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "isActiveFlg": {
            "type": "string"
          },
          "narsStatusId": {
            "type": "number"
          },
          "sortOrder": {
            "type": "number"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "ageDistribution": {
        "required": [
          "ageDistributionId",
          "createdBy",
          "createdDate",
          "endAge",
          "rowid",
          "startAge",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "ageDistributionId": {
            "type": "number"
          },
          "startAge": {
            "type": "number"
          },
          "endAge": {
            "type": "number"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "agency": {
        "required": [
          "agencyId",
          "createdBy",
          "createdDate",
          "description",
          "isActiveFlg",
          "rowid",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "agencyId": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "isActiveFlg": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "agencyAssistance": {
        "required": [
          "agencyComment",
          "agencyId",
          "amount",
          "booksFlag",
          "createdBy",
          "createdDate",
          "historyDetailId",
          "livingExpenseFlag",
          "otherPurpose",
          "rowid",
          "transportationFlag",
          "tuitionFlag",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "historyDetailId": {
            "type": "number"
          },
          "agencyId": {
            "type": "number"
          },
          "amount": {
            "type": "number"
          },
          "tuitionFlag": {
            "type": "number"
          },
          "livingExpenseFlag": {
            "type": "number"
          },
          "booksFlag": {
            "type": "number"
          },
          "transportationFlag": {
            "type": "number"
          },
          "otherPurpose": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "agencyComment": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "applicationType": {
        "required": [
          "applicationTypeId",
          "createdBy",
          "createdDate",
          "description",
          "isActiveFlg",
          "rowid",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "applicationTypeId": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "isActiveFlg": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "assessment": {
        "required": [
          "airTravelDisbursementPeriod",
          "airfareAmount",
          "allowedBooks",
          "allowedMonths",
          "allowedPercent",
          "allowedTuition",
          "assessedAmount",
          "assessedDate",
          "assessmentAdjAmount",
          "assessmentId",
          "assessmentTypeId",
          "assetTaxRate",
          "booksSuppliesCost",
          "changeReasonComment",
          "classesEndDate",
          "classesStartDate",
          "createdBy",
          "createdDate",
          "cslAssessedNeed",
          "cslClassification",
          "cslFullAmtFlag",
          "cslNonReasonId",
          "cslOverReasonId",
          "cslRequestAmount",
          "dayCareActual",
          "dayCareAllowable",
          "dependFoodAllowable",
          "dependTranAllowable",
          "dependentCount",
          "destinationCity",
          "disbursementsRequired",
          "discretionaryCost",
          "discretionaryCostActual",
          "effectiveRateDate",
          "entitlementDays",
          "familySize",
          "financialInvestments",
          "fundingQuestId",
          "homeCityId",
          "livingCosts",
          "maritalStatusId",
          "marriedAssets",
          "marriedPstudy",
          "marriedStudy",
          "otherIncome",
          "overAward",
          "overAwardAppliedFlg",
          "overAwardDisbursementPeriod",
          "pTransMonth",
          "parent1Income",
          "parent1TaxPaid",
          "parent2Income",
          "parent2TaxPaid",
          "parentContributionOverride",
          "parentContributionReview",
          "parentProvince",
          "parentPsDependCount",
          "period",
          "preLegAmount",
          "prestudyAccomCode",
          "prestudyBusFlag",
          "prestudyCslClassification",
          "prestudyDistance",
          "prestudyProvinceId",
          "programId",
          "pstudyDayCareActual",
          "pstudyDayCareAllow",
          "pstudyDependFoodAllow",
          "pstudyDependTranAllow",
          "pstudyEndDate",
          "pstudyExpectedContrib",
          "pstudyPTransMonth",
          "pstudyShelterMonth",
          "pstudyStartDate",
          "pstudyXTransTotal",
          "rTrans16wk",
          "relocationTotal",
          "returnUncashableCert",
          "rowid",
          "rrspSpouseGross",
          "rrspStudentGross",
          "secondResidenceRate",
          "shelterMonth",
          "spouseContribExempt",
          "spouseContribution",
          "spouseContributionOverride",
          "spouseContributionReview",
          "spouseExpectedContribution",
          "spouseExpectedIncome",
          "spouseGrossIncome",
          "spouseLn150Income",
          "spousePreviousContribution",
          "spouseProvinceId",
          "spousePstudyGross",
          "spousePstudyTaxRate",
          "spouseTaxRate",
          "studPstudyGross",
          "studPstudyTaxRate",
          "studentContribExempt",
          "studentContribution",
          "studentContributionOverride",
          "studentContributionReview",
          "studentExpectedContribution",
          "studentFamilySize",
          "studentGrossIncome",
          "studentLn150Income",
          "studentPreviousContribution",
          "studentTaxRate",
          "studyAccomCode",
          "studyAreaId",
          "studyBusFlag",
          "studyDistance",
          "studyLivingWSpouseFlag",
          "studyMonths",
          "studyProvinceId",
          "studyWeeks",
          "totalGrantAwarded",
          "travelAllowance",
          "tuitionEstimate",
          "uncappedCostsTotal",
          "uncappedPstudyTotal",
          "updatedBy",
          "updatedDate",
          "vehiclesGross",
          "weeklyAmount",
          "weeksAllowed",
          "xTransTotal",
          "yearsFundedEquivalent"
        ],
        "type": "object",
        "properties": {
          "assessmentId": {
            "type": "number"
          },
          "allowedBooks": {
            "type": "number"
          },
          "allowedMonths": {
            "type": "number"
          },
          "allowedPercent": {
            "type": "number"
          },
          "allowedTuition": {
            "type": "number"
          },
          "assessedAmount": {
            "type": "number"
          },
          "assessedDate": {
            "type": "string"
          },
          "changeReasonComment": {
            "type": "string"
          },
          "dependentCount": {
            "type": "number"
          },
          "effectiveRateDate": {
            "type": "string"
          },
          "homeCityId": {
            "type": "number"
          },
          "livingCosts": {
            "type": "number"
          },
          "travelAllowance": {
            "type": "number"
          },
          "weeklyAmount": {
            "type": "number"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "assessmentTypeId": {
            "type": "number"
          },
          "destinationCity": {
            "type": "number"
          },
          "fundingQuestId": {
            "type": "number"
          },
          "disbursementsRequired": {
            "type": "number"
          },
          "weeksAllowed": {
            "type": "number"
          },
          "secondResidenceRate": {
            "type": "number"
          },
          "classesEndDate": {
            "type": "string"
          },
          "prestudyAccomCode": {
            "type": "number"
          },
          "prestudyProvinceId": {
            "type": "number"
          },
          "classesStartDate": {
            "type": "string"
          },
          "airfareAmount": {
            "type": "number"
          },
          "airTravelDisbursementPeriod": {
            "type": "number"
          },
          "shelterMonth": {
            "type": "number"
          },
          "pTransMonth": {
            "type": "number"
          },
          "rTrans16wk": {
            "type": "number"
          },
          "dayCareAllowable": {
            "type": "number"
          },
          "dependFoodAllowable": {
            "type": "number"
          },
          "dependTranAllowable": {
            "type": "number"
          },
          "pstudyShelterMonth": {
            "type": "number"
          },
          "pstudyPTransMonth": {
            "type": "number"
          },
          "pstudyDayCareAllow": {
            "type": "number"
          },
          "pstudyDependFoodAllow": {
            "type": "number"
          },
          "pstudyDependTranAllow": {
            "type": "number"
          },
          "pstudyStartDate": {
            "type": "string"
          },
          "pstudyEndDate": {
            "type": "string"
          },
          "cslAssessedNeed": {
            "type": "number"
          },
          "studyProvinceId": {
            "type": "number"
          },
          "cslOverReasonId": {
            "type": "number"
          },
          "cslNonReasonId": {
            "type": "number"
          },
          "overAward": {
            "type": "number"
          },
          "studentTaxRate": {
            "type": "number"
          },
          "spouseTaxRate": {
            "type": "number"
          },
          "spousePstudyTaxRate": {
            "type": "number"
          },
          "studPstudyTaxRate": {
            "type": "number"
          },
          "parent1Income": {
            "type": "number"
          },
          "parent2Income": {
            "type": "number"
          },
          "parent1TaxPaid": {
            "type": "number"
          },
          "parent2TaxPaid": {
            "type": "number"
          },
          "booksSuppliesCost": {
            "type": "number"
          },
          "tuitionEstimate": {
            "type": "number"
          },
          "uncappedCostsTotal": {
            "type": "number"
          },
          "uncappedPstudyTotal": {
            "type": "number"
          },
          "dayCareActual": {
            "type": "number"
          },
          "studPstudyGross": {
            "type": "number"
          },
          "spousePstudyGross": {
            "type": "number"
          },
          "pstudyDayCareActual": {
            "type": "number"
          },
          "studentGrossIncome": {
            "type": "number"
          },
          "spouseGrossIncome": {
            "type": "number"
          },
          "vehiclesGross": {
            "type": "number"
          },
          "rrspStudentGross": {
            "type": "number"
          },
          "rrspSpouseGross": {
            "type": "number"
          },
          "otherIncome": {
            "type": "number"
          },
          "prestudyCslClassification": {
            "type": "number"
          },
          "maritalStatusId": {
            "type": "number"
          },
          "spouseProvinceId": {
            "type": "number"
          },
          "studyAccomCode": {
            "type": "number"
          },
          "cslClassification": {
            "type": "number"
          },
          "familySize": {
            "type": "number"
          },
          "parentPsDependCount": {
            "type": "number"
          },
          "parentProvince": {
            "type": "string"
          },
          "discretionaryCost": {
            "type": "number"
          },
          "discretionaryCostActual": {
            "type": "number"
          },
          "studyDistance": {
            "type": "number"
          },
          "prestudyDistance": {
            "type": "number"
          },
          "prestudyBusFlag": {
            "type": "number"
          },
          "studyBusFlag": {
            "type": "number"
          },
          "studyLivingWSpouseFlag": {
            "type": "number"
          },
          "cslFullAmtFlag": {
            "type": "number"
          },
          "financialInvestments": {
            "type": "number"
          },
          "studyAreaId": {
            "type": "number"
          },
          "programId": {
            "type": "number"
          },
          "period": {
            "type": "string"
          },
          "cslRequestAmount": {
            "type": "number"
          },
          "returnUncashableCert": {
            "type": "number"
          },
          "yearsFundedEquivalent": {
            "type": "number"
          },
          "studyWeeks": {
            "type": "number"
          },
          "studyMonths": {
            "type": "number"
          },
          "pstudyExpectedContrib": {
            "type": "number"
          },
          "spouseExpectedIncome": {
            "type": "number"
          },
          "assetTaxRate": {
            "type": "number"
          },
          "xTransTotal": {
            "type": "number"
          },
          "relocationTotal": {
            "type": "number"
          },
          "pstudyXTransTotal": {
            "type": "number"
          },
          "marriedPstudy": {
            "type": "number"
          },
          "marriedStudy": {
            "type": "number"
          },
          "marriedAssets": {
            "type": "number"
          },
          "entitlementDays": {
            "type": "number"
          },
          "parentContributionOverride": {
            "type": "number"
          },
          "totalGrantAwarded": {
            "type": "number"
          },
          "overAwardDisbursementPeriod": {
            "type": "number"
          },
          "overAwardAppliedFlg": {
            "type": "string"
          },
          "preLegAmount": {
            "type": "number"
          },
          "assessmentAdjAmount": {
            "type": "number"
          },
          "studentLn150Income": {
            "type": "number"
          },
          "studentContribution": {
            "type": "number"
          },
          "studentContribExempt": {
            "type": "string"
          },
          "spouseContribExempt": {
            "type": "string"
          },
          "spouseContribution": {
            "type": "number"
          },
          "spouseLn150Income": {
            "type": "number"
          },
          "studentContributionReview": {
            "type": "string"
          },
          "spouseContributionReview": {
            "type": "string"
          },
          "parentContributionReview": {
            "type": "string"
          },
          "studentFamilySize": {
            "type": "number"
          },
          "studentExpectedContribution": {
            "type": "number"
          },
          "studentPreviousContribution": {
            "type": "number"
          },
          "spouseExpectedContribution": {
            "type": "number"
          },
          "spousePreviousContribution": {
            "type": "number"
          },
          "studentContributionOverride": {
            "type": "number"
          },
          "spouseContributionOverride": {
            "type": "number"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "assessmentType": {
        "required": [
          "assessmentTypeId",
          "createdBy",
          "createdDate",
          "description",
          "isActiveFlg",
          "rowid",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "assessmentTypeId": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "isActiveFlg": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "batchGroup": {
        "required": [
          "batchGroupId",
          "batchGroupPrefix",
          "createdBy",
          "createdDate",
          "description",
          "rowid",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "batchGroupId": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "batchGroupPrefix": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "batchParameter": {
        "required": [
          "batchParameterId",
          "createdBy",
          "createdDate",
          "description",
          "rowid",
          "updatedBy",
          "updatedDate",
          "userDescription"
        ],
        "type": "object",
        "properties": {
          "batchParameterId": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "userDescription": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "category": {
        "required": [
          "categoryId",
          "createdBy",
          "createdDate",
          "description",
          "isActiveFlg",
          "rowid",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "categoryId": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "isActiveFlg": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "changeReason": {
        "required": [
          "changeReasonId",
          "createdBy",
          "createdDate",
          "description",
          "isActiveFlg",
          "rowid",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "changeReasonId": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "isActiveFlg": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "childCareCeiling": {
        "required": [
          "academicYear",
          "createdBy",
          "createdDate",
          "maxAmt",
          "provinceId",
          "rowid",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "academicYear": {
            "type": "string"
          },
          "provinceId": {
            "type": "number"
          },
          "maxAmt": {
            "type": "number"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "city": {
        "required": [
          "cityId",
          "createdBy",
          "createdDate",
          "description",
          "isActiveFlg",
          "rowid",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "cityId": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "isActiveFlg": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "communication": {
        "required": [
          "comments",
          "communicationDate",
          "communicationId",
          "communicationTypeId",
          "createdBy",
          "createdDate",
          "officerId",
          "requestTypeId",
          "rowid",
          "showAlertFlg",
          "studentId",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "communicationId": {
            "type": "number"
          },
          "communicationDate": {
            "type": "string"
          },
          "communicationTypeId": {
            "type": "number"
          },
          "comments": {
            "type": "string"
          },
          "officerId": {
            "type": "number"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "studentId": {
            "type": "number"
          },
          "requestTypeId": {
            "type": "number"
          },
          "showAlertFlg": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "communicationLog": {
        "required": [
          "communicationLogId",
          "emailedFlg",
          "msfaaId",
          "recCreateDate",
          "recCreateUser",
          "recLastModDate",
          "recLastModUser",
          "reminderSent",
          "rowid",
          "sentFromEmail",
          "sentToCc",
          "sentToEmail",
          "subject"
        ],
        "type": "object",
        "properties": {
          "communicationLogId": {
            "type": "number"
          },
          "sentFromEmail": {
            "type": "string"
          },
          "sentToEmail": {
            "type": "string"
          },
          "sentToCc": {
            "type": "string"
          },
          "subject": {
            "type": "string"
          },
          "msfaaId": {
            "type": "number"
          },
          "reminderSent": {
            "type": "number"
          },
          "emailedFlg": {
            "type": "string"
          },
          "recCreateDate": {
            "type": "string"
          },
          "recCreateUser": {
            "type": "string"
          },
          "recLastModDate": {
            "type": "string"
          },
          "recLastModUser": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "communicationType": {
        "required": [
          "communicationTypeId",
          "createdBy",
          "createdDate",
          "description",
          "isActiveFlg",
          "rowid",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "communicationTypeId": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "isActiveFlg": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "convertYtidToPen": {
        "required": [
          "birthDt",
          "fname",
          "lname",
          "pen",
          "ytid"
        ],
        "type": "object",
        "properties": {
          "ytid": {
            "type": "string"
          },
          "pen": {
            "type": "string"
          },
          "fname": {
            "type": "string"
          },
          "lname": {
            "type": "string"
          },
          "birthDt": {
            "type": "string"
          }
        }
      },
      "corrTypeBatchParam": {
        "required": [
          "batchParameterId",
          "correspondenceTypeId",
          "createdBy",
          "createdDate",
          "rowid",
          "source",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "correspondenceTypeId": {
            "type": "number"
          },
          "batchParameterId": {
            "type": "number"
          },
          "source": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "corresBatchParam": {
        "required": [
          "batchParameterId",
          "correspondenceId",
          "createdBy",
          "createdDate",
          "parameterValue",
          "rowid",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "correspondenceId": {
            "type": "number"
          },
          "batchParameterId": {
            "type": "number"
          },
          "parameterValue": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "correspondence": {
        "required": [
          "comments",
          "completedFlag",
          "correspondenceDate",
          "correspondenceId",
          "correspondenceTypeId",
          "createdBy",
          "createdDate",
          "officerId",
          "requestTypeId",
          "rowid",
          "sentDate",
          "studentId",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "correspondenceId": {
            "type": "number"
          },
          "comments": {
            "type": "string"
          },
          "correspondenceDate": {
            "type": "string"
          },
          "sentDate": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "officerId": {
            "type": "number"
          },
          "correspondenceTypeId": {
            "type": "number"
          },
          "studentId": {
            "type": "number"
          },
          "completedFlag": {
            "type": "number"
          },
          "requestTypeId": {
            "type": "number"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "correspondenceType": {
        "required": [
          "correspondenceTypeId",
          "createdBy",
          "createdDate",
          "description",
          "isActiveFlg",
          "rowid",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "correspondenceTypeId": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "isActiveFlg": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "country": {
        "required": [
          "countryId",
          "createdBy",
          "createdDate",
          "description",
          "isActiveFlg",
          "rowid",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "countryId": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "isActiveFlg": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "courseEnrolled": {
        "required": [
          "courseCode",
          "courseDescription",
          "courseEnrolledId",
          "createdBy",
          "createdDate",
          "historyDetailId",
          "instructionTypeId",
          "rowid",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "courseEnrolledId": {
            "type": "number"
          },
          "courseDescription": {
            "type": "string"
          },
          "instructionTypeId": {
            "type": "number"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "courseCode": {
            "type": "string"
          },
          "historyDetailId": {
            "type": "number"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "csgLookup": {
        "required": [
          "academicYear",
          "createdBy",
          "createdDate",
          "csg8MonthAmt",
          "csgDepMonthlyAmt",
          "csgPdYearlyAmt",
          "csgPdseYearlyAmt",
          "csgptDep12WeeklyAmt",
          "csgptDep3WeeklyAmt",
          "csgptDepMaxAmt",
          "csgptYearlyAmt",
          "rowid",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "academicYear": {
            "type": "string"
          },
          "csg8MonthAmt": {
            "type": "number"
          },
          "csgDepMonthlyAmt": {
            "type": "number"
          },
          "csgPdYearlyAmt": {
            "type": "number"
          },
          "csgPdseYearlyAmt": {
            "type": "number"
          },
          "csgptYearlyAmt": {
            "type": "number"
          },
          "csgptDepMaxAmt": {
            "type": "number"
          },
          "csgptDep12WeeklyAmt": {
            "type": "number"
          },
          "csgptDep3WeeklyAmt": {
            "type": "number"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "csgThreshold": {
        "required": [
          "academicYear",
          "createdBy",
          "createdDate",
          "csgFtdepPhaseOutRate",
          "csgPtdep2PhaseOutRate",
          "csgPtdep3PhaseOutRate",
          "csgptPhaseOutRate",
          "familySize",
          "incomeCutoff",
          "incomeThreshold",
          "lowIncomeThreshold",
          "middleIncomeThreshold",
          "phaseOutRate",
          "rowid",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "academicYear": {
            "type": "string"
          },
          "familySize": {
            "type": "number"
          },
          "incomeThreshold": {
            "type": "number"
          },
          "incomeCutoff": {
            "type": "number"
          },
          "phaseOutRate": {
            "type": "number"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "lowIncomeThreshold": {
            "type": "number"
          },
          "middleIncomeThreshold": {
            "type": "number"
          },
          "csgptPhaseOutRate": {
            "type": "number"
          },
          "csgPtdep2PhaseOutRate": {
            "type": "number"
          },
          "csgPtdep3PhaseOutRate": {
            "type": "number"
          },
          "csgFtdepPhaseOutRate": {
            "type": "number"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "cslCode": {
        "required": [
          "codeType",
          "createdBy",
          "createdDate",
          "cslCodeId",
          "definition",
          "isActiveFlg",
          "reasonCode",
          "rowid",
          "updatedBy",
          "updatedDate",
          "warningCode"
        ],
        "type": "object",
        "properties": {
          "cslCodeId": {
            "type": "number"
          },
          "warningCode": {
            "type": "string"
          },
          "reasonCode": {
            "type": "string"
          },
          "codeType": {
            "type": "string"
          },
          "definition": {
            "type": "string"
          },
          "isActiveFlg": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "cslCodeOld": {
        "required": [
          "codeType",
          "cslCode",
          "definition"
        ],
        "type": "object",
        "properties": {
          "cslCode": {
            "type": "string"
          },
          "codeType": {
            "type": "string"
          },
          "definition": {
            "type": "string"
          }
        }
      },
      "cslLookup": {
        "required": [
          "academicYear",
          "createdBy",
          "createdDate",
          "csg8MonthAmt",
          "csgPtYearlyAmt",
          "cslPtMaxAmount",
          "cslPtWkMiscAmt",
          "discretionaryCostsMax",
          "lowIncomeStudentContrib",
          "maxBooks",
          "maxRelocation",
          "maxReturnTransport",
          "maxStudentContrib",
          "maxWeeklyAllowable",
          "meritExemptAmt",
          "mileageRate",
          "rowid",
          "rrspYearlyDeduction",
          "spouseContribPct",
          "studentContribPct",
          "studentExemptAmt",
          "updatedBy",
          "updatedDate",
          "vehicleDeduction"
        ],
        "type": "object",
        "properties": {
          "academicYear": {
            "type": "string"
          },
          "maxReturnTransport": {
            "type": "number"
          },
          "maxWeeklyAllowable": {
            "type": "number"
          },
          "studentExemptAmt": {
            "type": "number"
          },
          "vehicleDeduction": {
            "type": "number"
          },
          "rrspYearlyDeduction": {
            "type": "number"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "maxRelocation": {
            "type": "number"
          },
          "mileageRate": {
            "type": "number"
          },
          "discretionaryCostsMax": {
            "type": "number"
          },
          "meritExemptAmt": {
            "type": "number"
          },
          "maxBooks": {
            "type": "number"
          },
          "studentContribPct": {
            "type": "number"
          },
          "spouseContribPct": {
            "type": "number"
          },
          "csg8MonthAmt": {
            "type": "number"
          },
          "csgPtYearlyAmt": {
            "type": "number"
          },
          "lowIncomeStudentContrib": {
            "type": "number"
          },
          "maxStudentContrib": {
            "type": "number"
          },
          "cslPtMaxAmount": {
            "type": "number"
          },
          "cslPtWkMiscAmt": {
            "type": "number"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "cslNarsHistory": {
        "required": [
          "aboriginalCat",
          "aboriginalCategory",
          "aboriginalStatusFlg",
          "academicYear",
          "academicYearStudy",
          "appStatus",
          "assessedNeed",
          "assessedResources",
          "assessmentCode",
          "assessmentDate",
          "assessmentId",
          "assessmentReviewFlg",
          "assistanceTotal",
          "birthDate",
          "cagPermDisabilityAmnt",
          "catCode",
          "childrenOver12Dis",
          "childrenOver12NotDis",
          "childrenTo11",
          "cmsAmount",
          "cmsDate",
          "coursePercentage",
          "createdBy",
          "createdDate",
          "creditCheckFlg",
          "creditCheckStatus",
          "csgDate",
          "csgDependentAmount",
          "csgDisabilityAmount",
          "csgDoctoralAmount",
          "csgFtdep",
          "csgLi",
          "csgMi",
          "csgPd",
          "csgPdse",
          "cslAuthFt",
          "cslAuthLoanAmnt",
          "cslAuthLoanDate",
          "cslAuthPt",
          "cslBeforeOveraward",
          "cslClassification",
          "cslNarsHistoryId",
          "cslRecoveredOveraward",
          "dateLeftHs",
          "disabledFlg",
          "disabledType",
          "earlyWithdrawalInd",
          "familySize",
          "fieldOfStudy",
          "financialInvestments",
          "gender",
          "historyDetailId",
          "institutionCode",
          "jointAssetFlg",
          "jointContribFlg",
          "loanType",
          "loanYear",
          "maritalStatus",
          "marriedAdjustment",
          "minorityFlg",
          "modifiedBy",
          "modifiedDate",
          "otherResources",
          "parent1Income",
          "parent1IncomeTaxable",
          "parent1IncomeTaxpaid",
          "parent1PostalCode",
          "parent1Sin",
          "parent2Income",
          "parent2IncomeTaxable",
          "parent2IncomeTaxpaid",
          "parent2PostalCode",
          "parent2Sin",
          "parentalAsset",
          "parentalAssetContrib",
          "parentalContribution",
          "postSecondaryChildren",
          "postalPrefix",
          "postalSuffix",
          "previousDisbursement",
          "programDuration",
          "programType",
          "provGrantAmnt",
          "provGrantDate",
          "provGrantUnmetAmnt",
          "pslAuthLoanAmnt",
          "pslAuthLoanDate",
          "pslBeforeOveraward",
          "pslRecoveredOveraward",
          "pstudyCostLiving",
          "pstudyCostLoan",
          "pstudyDepCostLiving",
          "pstudyHomeAway",
          "pstudyIncomeEmploy",
          "pstudyIncomeOther",
          "pstudyPtCostTuitn",
          "pstudyStudentIncome",
          "pstudyWeeks",
          "pstudyXTransTotal",
          "reassessIndicator",
          "requestNeed",
          "rowid",
          "sin",
          "singleIndStatReas",
          "socialAssistFlg",
          "spouseAsset",
          "spouseAssetContrib",
          "spouseCslFlg",
          "spouseDateLeftHs",
          "spouseGrossAnnualIncome",
          "spouseIncomeAnnual",
          "spousePstudyContrib",
          "spousePstudyIncome",
          "spouseRrsp",
          "spouseSin",
          "spouseStudentFlg",
          "spouseStudyContribution",
          "spouseStudyIncome",
          "spouseVehicle",
          "spouseYearsSinceHs",
          "studGrossAnnualIncome",
          "studentAsset",
          "studentAssetContrib",
          "studentId",
          "studentPstudyContribution",
          "studentResp",
          "studentRrsp",
          "studentStudyContribution",
          "studentVehicle",
          "studentYearsSinceHs",
          "studyCostBooks",
          "studyCostChildcareActl",
          "studyCostChildcareAllw",
          "studyCostComputers",
          "studyCostLiving",
          "studyCostOther",
          "studyCostOtherTrans",
          "studyCostRelocation",
          "studyCostReturnTrans",
          "studyCostTotal",
          "studyDirectedIncome",
          "studyEndDate",
          "studyHomeAway",
          "studyIncomeAlimony",
          "studyIncomeCpp",
          "studyIncomeCs",
          "studyIncomeEmploy",
          "studyIncomeGov",
          "studyIncomeGovEi",
          "studyIncomeGovGrant",
          "studyIncomeGovSoc",
          "studyIncomeGovTot",
          "studyIncomeMerit",
          "studyIncomeNontGov",
          "studyIncomeNontGovTot",
          "studyIncomeOther",
          "studyIncomeOtherTot",
          "studyIncomePriv",
          "studyIncomePrivMerit",
          "studyIncomeWc",
          "studyStartDate",
          "studyStudentIncome",
          "studyWeeks",
          "tgrantYrsRemaining",
          "transitionGrantAmt",
          "tuitionEstimate",
          "unmetNeed",
          "versionNum",
          "yearInProgram",
          "yearStudy"
        ],
        "type": "object",
        "properties": {
          "cslNarsHistoryId": {
            "type": "number"
          },
          "historyDetailId": {
            "type": "number"
          },
          "studentId": {
            "type": "number"
          },
          "assessmentId": {
            "type": "number"
          },
          "academicYear": {
            "type": "string"
          },
          "sin": {
            "type": "string"
          },
          "loanYear": {
            "type": "string"
          },
          "postalPrefix": {
            "type": "string"
          },
          "birthDate": {
            "type": "string"
          },
          "gender": {
            "type": "string"
          },
          "maritalStatus": {
            "type": "string"
          },
          "institutionCode": {
            "type": "string"
          },
          "fieldOfStudy": {
            "type": "string"
          },
          "yearStudy": {
            "type": "string"
          },
          "studyWeeks": {
            "type": "number"
          },
          "studyStartDate": {
            "type": "string"
          },
          "studyEndDate": {
            "type": "string"
          },
          "loanType": {
            "type": "string"
          },
          "coursePercentage": {
            "type": "number"
          },
          "creditCheckFlg": {
            "type": "string"
          },
          "creditCheckStatus": {
            "type": "string"
          },
          "disabledFlg": {
            "type": "string"
          },
          "disabledType": {
            "type": "string"
          },
          "minorityFlg": {
            "type": "string"
          },
          "aboriginalStatusFlg": {
            "type": "string"
          },
          "aboriginalCategory": {
            "type": "string"
          },
          "assessmentDate": {
            "type": "string"
          },
          "cslClassification": {
            "type": "number"
          },
          "familySize": {
            "type": "number"
          },
          "postSecondaryChildren": {
            "type": "number"
          },
          "spouseStudentFlg": {
            "type": "string"
          },
          "spouseCslFlg": {
            "type": "string"
          },
          "spouseSin": {
            "type": "string"
          },
          "childrenTo11": {
            "type": "number"
          },
          "childrenOver12NotDis": {
            "type": "number"
          },
          "childrenOver12Dis": {
            "type": "number"
          },
          "pstudyStudentIncome": {
            "type": "number"
          },
          "studyIncomeGov": {
            "type": "number"
          },
          "studyIncomeGovTot": {
            "type": "number"
          },
          "studyIncomePriv": {
            "type": "number"
          },
          "studyIncomeGovEi": {
            "type": "number"
          },
          "studyIncomeCpp": {
            "type": "number"
          },
          "studyIncomeWc": {
            "type": "number"
          },
          "studyIncomeGovSoc": {
            "type": "number"
          },
          "studyIncomeNontGov": {
            "type": "number"
          },
          "studyIncomeNontGovTot": {
            "type": "number"
          },
          "studyIncomeMerit": {
            "type": "number"
          },
          "studyIncomePrivMerit": {
            "type": "number"
          },
          "studyIncomeEmploy": {
            "type": "number"
          },
          "studyIncomeCs": {
            "type": "number"
          },
          "studyIncomeAlimony": {
            "type": "number"
          },
          "studyIncomeOther": {
            "type": "number"
          },
          "studyIncomeOtherTot": {
            "type": "number"
          },
          "studyStudentIncome": {
            "type": "number"
          },
          "parent1Income": {
            "type": "number"
          },
          "parent2Income": {
            "type": "number"
          },
          "studentRrsp": {
            "type": "number"
          },
          "studentVehicle": {
            "type": "number"
          },
          "studentAsset": {
            "type": "number"
          },
          "spouseRrsp": {
            "type": "number"
          },
          "spouseVehicle": {
            "type": "number"
          },
          "spouseAsset": {
            "type": "number"
          },
          "studentYearsSinceHs": {
            "type": "number"
          },
          "spouseYearsSinceHs": {
            "type": "number"
          },
          "studentStudyContribution": {
            "type": "number"
          },
          "studentPstudyContribution": {
            "type": "number"
          },
          "spouseStudyContribution": {
            "type": "number"
          },
          "parentalContribution": {
            "type": "number"
          },
          "assessedResources": {
            "type": "number"
          },
          "tuitionEstimate": {
            "type": "number"
          },
          "assessedNeed": {
            "type": "number"
          },
          "unmetNeed": {
            "type": "number"
          },
          "requestNeed": {
            "type": "number"
          },
          "cslBeforeOveraward": {
            "type": "number"
          },
          "pslBeforeOveraward": {
            "type": "number"
          },
          "cslRecoveredOveraward": {
            "type": "number"
          },
          "pslRecoveredOveraward": {
            "type": "number"
          },
          "cslAuthFt": {
            "type": "string"
          },
          "cslAuthPt": {
            "type": "string"
          },
          "cslAuthLoanAmnt": {
            "type": "number"
          },
          "cslAuthLoanDate": {
            "type": "string"
          },
          "pslAuthLoanAmnt": {
            "type": "number"
          },
          "pslAuthLoanDate": {
            "type": "string"
          },
          "assistanceTotal": {
            "type": "number"
          },
          "assessmentReviewFlg": {
            "type": "string"
          },
          "csgDoctoralAmount": {
            "type": "number"
          },
          "csgDisabilityAmount": {
            "type": "number"
          },
          "cagPermDisabilityAmnt": {
            "type": "number"
          },
          "csgDependentAmount": {
            "type": "number"
          },
          "csgDate": {
            "type": "string"
          },
          "cmsAmount": {
            "type": "number"
          },
          "cmsDate": {
            "type": "string"
          },
          "provGrantUnmetAmnt": {
            "type": "number"
          },
          "provGrantAmnt": {
            "type": "number"
          },
          "provGrantDate": {
            "type": "string"
          },
          "assessmentCode": {
            "type": "number"
          },
          "versionNum": {
            "type": "number"
          },
          "appStatus": {
            "type": "string"
          },
          "reassessIndicator": {
            "type": "string"
          },
          "catCode": {
            "type": "string"
          },
          "singleIndStatReas": {
            "type": "string"
          },
          "socialAssistFlg": {
            "type": "string"
          },
          "parent1Sin": {
            "type": "string"
          },
          "parent1PostalCode": {
            "type": "string"
          },
          "parent2Sin": {
            "type": "string"
          },
          "parent2PostalCode": {
            "type": "string"
          },
          "postalSuffix": {
            "type": "string"
          },
          "pstudyWeeks": {
            "type": "number"
          },
          "pstudyHomeAway": {
            "type": "string"
          },
          "studyHomeAway": {
            "type": "string"
          },
          "programType": {
            "type": "string"
          },
          "academicYearStudy": {
            "type": "number"
          },
          "yearInProgram": {
            "type": "number"
          },
          "programDuration": {
            "type": "number"
          },
          "earlyWithdrawalInd": {
            "type": "string"
          },
          "dateLeftHs": {
            "type": "string"
          },
          "spouseDateLeftHs": {
            "type": "string"
          },
          "pstudyIncomeOther": {
            "type": "number"
          },
          "pstudyIncomeEmploy": {
            "type": "number"
          },
          "spouseIncomeAnnual": {
            "type": "number"
          },
          "spousePstudyIncome": {
            "type": "number"
          },
          "spouseStudyIncome": {
            "type": "number"
          },
          "parent1IncomeTaxable": {
            "type": "number"
          },
          "parent1IncomeTaxpaid": {
            "type": "number"
          },
          "parent2IncomeTaxable": {
            "type": "number"
          },
          "parent2IncomeTaxpaid": {
            "type": "number"
          },
          "jointAssetFlg": {
            "type": "string"
          },
          "studentResp": {
            "type": "number"
          },
          "parentalAsset": {
            "type": "number"
          },
          "jointContribFlg": {
            "type": "string"
          },
          "spousePstudyContrib": {
            "type": "number"
          },
          "studentAssetContrib": {
            "type": "number"
          },
          "spouseAssetContrib": {
            "type": "number"
          },
          "parentalAssetContrib": {
            "type": "number"
          },
          "otherResources": {
            "type": "number"
          },
          "pstudyCostLiving": {
            "type": "number"
          },
          "pstudyCostLoan": {
            "type": "number"
          },
          "pstudyPtCostTuitn": {
            "type": "number"
          },
          "studyCostLiving": {
            "type": "number"
          },
          "studyCostBooks": {
            "type": "number"
          },
          "studyCostChildcareAllw": {
            "type": "number"
          },
          "studyCostChildcareActl": {
            "type": "number"
          },
          "studyCostReturnTrans": {
            "type": "number"
          },
          "studyCostOtherTrans": {
            "type": "number"
          },
          "studyCostRelocation": {
            "type": "number"
          },
          "studyCostOther": {
            "type": "number"
          },
          "studyCostTotal": {
            "type": "number"
          },
          "aboriginalCat": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "modifiedDate": {
            "type": "string"
          },
          "studGrossAnnualIncome": {
            "type": "number"
          },
          "spouseGrossAnnualIncome": {
            "type": "number"
          },
          "csgLi": {
            "type": "number"
          },
          "csgMi": {
            "type": "number"
          },
          "csgPd": {
            "type": "number"
          },
          "csgFtdep": {
            "type": "number"
          },
          "csgPdse": {
            "type": "number"
          },
          "transitionGrantAmt": {
            "type": "number"
          },
          "tgrantYrsRemaining": {
            "type": "number"
          },
          "pstudyDepCostLiving": {
            "type": "number"
          },
          "previousDisbursement": {
            "type": "number"
          },
          "studyIncomeGovGrant": {
            "type": "number"
          },
          "pstudyXTransTotal": {
            "type": "number"
          },
          "studyDirectedIncome": {
            "type": "number"
          },
          "financialInvestments": {
            "type": "number"
          },
          "marriedAdjustment": {
            "type": "number"
          },
          "studyCostComputers": {
            "type": "number"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "cslNarsHistory2010jul29": {
        "required": [
          "aboriginalCat",
          "aboriginalCategory",
          "aboriginalStatusFlg",
          "academicYear",
          "academicYearStudy",
          "appStatus",
          "assessedNeed",
          "assessedResources",
          "assessmentCode",
          "assessmentDate",
          "assessmentId",
          "assessmentReviewFlg",
          "assistanceTotal",
          "birthDate",
          "cagPermDisabilityAmnt",
          "catCode",
          "childrenOver12Dis",
          "childrenOver12NotDis",
          "childrenTo11",
          "cmsAmount",
          "cmsDate",
          "coursePercentage",
          "createdBy",
          "createdDate",
          "creditCheckFlg",
          "creditCheckStatus",
          "csgDate",
          "csgDependentAmount",
          "csgDisabilityAmount",
          "csgDoctoralAmount",
          "csgFtdep",
          "csgLi",
          "csgMi",
          "csgPd",
          "csgPdse",
          "cslAuthFt",
          "cslAuthLoanAmnt",
          "cslAuthLoanDate",
          "cslAuthPt",
          "cslBeforeOveraward",
          "cslClassification",
          "cslNarsHistoryId",
          "cslRecoveredOveraward",
          "dateLeftHs",
          "disabledFlg",
          "disabledType",
          "earlyWithdrawalInd",
          "familySize",
          "fieldOfStudy",
          "gender",
          "historyDetailId",
          "institutionCode",
          "jointAssetFlg",
          "jointContribFlg",
          "loanType",
          "loanYear",
          "maritalStatus",
          "minorityFlg",
          "modifiedBy",
          "modifiedDate",
          "otherResources",
          "parent1Income",
          "parent1IncomeTaxable",
          "parent1IncomeTaxpaid",
          "parent1PostalCode",
          "parent1Sin",
          "parent2Income",
          "parent2IncomeTaxable",
          "parent2IncomeTaxpaid",
          "parent2PostalCode",
          "parent2Sin",
          "parentalAsset",
          "parentalAssetContrib",
          "parentalContribution",
          "postSecondaryChildren",
          "postalPrefix",
          "postalSuffix",
          "previousDisbursement",
          "programDuration",
          "programType",
          "provGrantAmnt",
          "provGrantDate",
          "provGrantUnmetAmnt",
          "pslAuthLoanAmnt",
          "pslAuthLoanDate",
          "pslBeforeOveraward",
          "pslRecoveredOveraward",
          "pstudyCostLiving",
          "pstudyCostLoan",
          "pstudyDepCostLiving",
          "pstudyHomeAway",
          "pstudyIncomeEmploy",
          "pstudyIncomeOther",
          "pstudyPtCostTuitn",
          "pstudyStudentIncome",
          "pstudyWeeks",
          "reassessIndicator",
          "requestNeed",
          "sin",
          "singleIndStatReas",
          "socialAssistFlg",
          "spouseAsset",
          "spouseAssetContrib",
          "spouseCslFlg",
          "spouseDateLeftHs",
          "spouseGrossAnnualIncome",
          "spouseIncomeAnnual",
          "spousePstudyContrib",
          "spousePstudyIncome",
          "spouseRrsp",
          "spouseSin",
          "spouseStudentFlg",
          "spouseStudyContribution",
          "spouseStudyIncome",
          "spouseVehicle",
          "spouseYearsSinceHs",
          "studGrossAnnualIncome",
          "studentAsset",
          "studentAssetContrib",
          "studentId",
          "studentPstudyContribution",
          "studentResp",
          "studentRrsp",
          "studentStudyContribution",
          "studentVehicle",
          "studentYearsSinceHs",
          "studyCostBooks",
          "studyCostChildcareActl",
          "studyCostChildcareAllw",
          "studyCostLiving",
          "studyCostOther",
          "studyCostOtherTrans",
          "studyCostRelocation",
          "studyCostReturnTrans",
          "studyCostTotal",
          "studyEndDate",
          "studyHomeAway",
          "studyIncomeAlimony",
          "studyIncomeCpp",
          "studyIncomeCs",
          "studyIncomeEmploy",
          "studyIncomeGov",
          "studyIncomeGovEi",
          "studyIncomeGovSoc",
          "studyIncomeGovTot",
          "studyIncomeMerit",
          "studyIncomeNeed",
          "studyIncomeNontGov",
          "studyIncomeNontGovTot",
          "studyIncomeOther",
          "studyIncomeOtherTot",
          "studyIncomePriv",
          "studyIncomePrivMerit",
          "studyIncomeWc",
          "studyStartDate",
          "studyStudentIncome",
          "studyWeeks",
          "tgrantYrsRemaining",
          "transitionGrantAmt",
          "tuitionEstimate",
          "unmetNeed",
          "versionNum",
          "yearInProgram",
          "yearStudy"
        ],
        "type": "object",
        "properties": {
          "cslNarsHistoryId": {
            "type": "number"
          },
          "historyDetailId": {
            "type": "number"
          },
          "studentId": {
            "type": "number"
          },
          "assessmentId": {
            "type": "number"
          },
          "academicYear": {
            "type": "string"
          },
          "sin": {
            "type": "string"
          },
          "loanYear": {
            "type": "string"
          },
          "postalPrefix": {
            "type": "string"
          },
          "birthDate": {
            "type": "string"
          },
          "gender": {
            "type": "string"
          },
          "maritalStatus": {
            "type": "string"
          },
          "institutionCode": {
            "type": "string"
          },
          "fieldOfStudy": {
            "type": "string"
          },
          "yearStudy": {
            "type": "string"
          },
          "studyWeeks": {
            "type": "number"
          },
          "studyStartDate": {
            "type": "string"
          },
          "studyEndDate": {
            "type": "string"
          },
          "loanType": {
            "type": "string"
          },
          "coursePercentage": {
            "type": "number"
          },
          "creditCheckFlg": {
            "type": "string"
          },
          "creditCheckStatus": {
            "type": "string"
          },
          "disabledFlg": {
            "type": "string"
          },
          "disabledType": {
            "type": "string"
          },
          "minorityFlg": {
            "type": "string"
          },
          "aboriginalStatusFlg": {
            "type": "string"
          },
          "aboriginalCategory": {
            "type": "string"
          },
          "assessmentDate": {
            "type": "string"
          },
          "cslClassification": {
            "type": "number"
          },
          "familySize": {
            "type": "number"
          },
          "postSecondaryChildren": {
            "type": "number"
          },
          "spouseStudentFlg": {
            "type": "string"
          },
          "spouseCslFlg": {
            "type": "string"
          },
          "spouseSin": {
            "type": "string"
          },
          "childrenTo11": {
            "type": "number"
          },
          "childrenOver12NotDis": {
            "type": "number"
          },
          "childrenOver12Dis": {
            "type": "number"
          },
          "pstudyStudentIncome": {
            "type": "number"
          },
          "studyIncomeGov": {
            "type": "number"
          },
          "studyIncomeGovTot": {
            "type": "number"
          },
          "studyIncomePriv": {
            "type": "number"
          },
          "studyIncomeGovEi": {
            "type": "number"
          },
          "studyIncomeCpp": {
            "type": "number"
          },
          "studyIncomeWc": {
            "type": "number"
          },
          "studyIncomeGovSoc": {
            "type": "number"
          },
          "studyIncomeNontGov": {
            "type": "number"
          },
          "studyIncomeNontGovTot": {
            "type": "number"
          },
          "studyIncomeMerit": {
            "type": "number"
          },
          "studyIncomePrivMerit": {
            "type": "number"
          },
          "studyIncomeNeed": {
            "type": "number"
          },
          "studyIncomeEmploy": {
            "type": "number"
          },
          "studyIncomeCs": {
            "type": "number"
          },
          "studyIncomeAlimony": {
            "type": "number"
          },
          "studyIncomeOther": {
            "type": "number"
          },
          "studyIncomeOtherTot": {
            "type": "number"
          },
          "studyStudentIncome": {
            "type": "number"
          },
          "parent1Income": {
            "type": "number"
          },
          "parent2Income": {
            "type": "number"
          },
          "studentRrsp": {
            "type": "number"
          },
          "studentVehicle": {
            "type": "number"
          },
          "studentAsset": {
            "type": "number"
          },
          "spouseRrsp": {
            "type": "number"
          },
          "spouseVehicle": {
            "type": "number"
          },
          "spouseAsset": {
            "type": "number"
          },
          "studentYearsSinceHs": {
            "type": "number"
          },
          "spouseYearsSinceHs": {
            "type": "number"
          },
          "studentStudyContribution": {
            "type": "number"
          },
          "studentPstudyContribution": {
            "type": "number"
          },
          "spouseStudyContribution": {
            "type": "number"
          },
          "parentalContribution": {
            "type": "number"
          },
          "assessedResources": {
            "type": "number"
          },
          "tuitionEstimate": {
            "type": "number"
          },
          "assessedNeed": {
            "type": "number"
          },
          "unmetNeed": {
            "type": "number"
          },
          "requestNeed": {
            "type": "number"
          },
          "cslBeforeOveraward": {
            "type": "number"
          },
          "pslBeforeOveraward": {
            "type": "number"
          },
          "cslRecoveredOveraward": {
            "type": "number"
          },
          "pslRecoveredOveraward": {
            "type": "number"
          },
          "cslAuthFt": {
            "type": "string"
          },
          "cslAuthPt": {
            "type": "string"
          },
          "cslAuthLoanAmnt": {
            "type": "number"
          },
          "cslAuthLoanDate": {
            "type": "string"
          },
          "pslAuthLoanAmnt": {
            "type": "number"
          },
          "pslAuthLoanDate": {
            "type": "string"
          },
          "assistanceTotal": {
            "type": "number"
          },
          "assessmentReviewFlg": {
            "type": "string"
          },
          "csgDoctoralAmount": {
            "type": "number"
          },
          "csgDisabilityAmount": {
            "type": "number"
          },
          "cagPermDisabilityAmnt": {
            "type": "number"
          },
          "csgDependentAmount": {
            "type": "number"
          },
          "csgDate": {
            "type": "string"
          },
          "cmsAmount": {
            "type": "number"
          },
          "cmsDate": {
            "type": "string"
          },
          "provGrantUnmetAmnt": {
            "type": "number"
          },
          "provGrantAmnt": {
            "type": "number"
          },
          "provGrantDate": {
            "type": "string"
          },
          "assessmentCode": {
            "type": "number"
          },
          "versionNum": {
            "type": "number"
          },
          "appStatus": {
            "type": "string"
          },
          "reassessIndicator": {
            "type": "string"
          },
          "catCode": {
            "type": "string"
          },
          "singleIndStatReas": {
            "type": "string"
          },
          "socialAssistFlg": {
            "type": "string"
          },
          "parent1Sin": {
            "type": "string"
          },
          "parent1PostalCode": {
            "type": "string"
          },
          "parent2Sin": {
            "type": "string"
          },
          "parent2PostalCode": {
            "type": "string"
          },
          "postalSuffix": {
            "type": "string"
          },
          "pstudyWeeks": {
            "type": "number"
          },
          "pstudyHomeAway": {
            "type": "string"
          },
          "studyHomeAway": {
            "type": "string"
          },
          "programType": {
            "type": "string"
          },
          "academicYearStudy": {
            "type": "number"
          },
          "yearInProgram": {
            "type": "number"
          },
          "programDuration": {
            "type": "number"
          },
          "earlyWithdrawalInd": {
            "type": "string"
          },
          "dateLeftHs": {
            "type": "string"
          },
          "spouseDateLeftHs": {
            "type": "string"
          },
          "pstudyIncomeOther": {
            "type": "number"
          },
          "pstudyIncomeEmploy": {
            "type": "number"
          },
          "spouseIncomeAnnual": {
            "type": "number"
          },
          "spousePstudyIncome": {
            "type": "number"
          },
          "spouseStudyIncome": {
            "type": "number"
          },
          "parent1IncomeTaxable": {
            "type": "number"
          },
          "parent1IncomeTaxpaid": {
            "type": "number"
          },
          "parent2IncomeTaxable": {
            "type": "number"
          },
          "parent2IncomeTaxpaid": {
            "type": "number"
          },
          "jointAssetFlg": {
            "type": "string"
          },
          "studentResp": {
            "type": "number"
          },
          "parentalAsset": {
            "type": "number"
          },
          "jointContribFlg": {
            "type": "string"
          },
          "spousePstudyContrib": {
            "type": "number"
          },
          "studentAssetContrib": {
            "type": "number"
          },
          "spouseAssetContrib": {
            "type": "number"
          },
          "parentalAssetContrib": {
            "type": "number"
          },
          "otherResources": {
            "type": "number"
          },
          "pstudyCostLiving": {
            "type": "number"
          },
          "pstudyCostLoan": {
            "type": "number"
          },
          "pstudyPtCostTuitn": {
            "type": "number"
          },
          "studyCostLiving": {
            "type": "number"
          },
          "studyCostBooks": {
            "type": "number"
          },
          "studyCostChildcareAllw": {
            "type": "number"
          },
          "studyCostChildcareActl": {
            "type": "number"
          },
          "studyCostReturnTrans": {
            "type": "number"
          },
          "studyCostOtherTrans": {
            "type": "number"
          },
          "studyCostRelocation": {
            "type": "number"
          },
          "studyCostOther": {
            "type": "number"
          },
          "studyCostTotal": {
            "type": "number"
          },
          "aboriginalCat": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "modifiedDate": {
            "type": "string"
          },
          "studGrossAnnualIncome": {
            "type": "number"
          },
          "spouseGrossAnnualIncome": {
            "type": "number"
          },
          "csgLi": {
            "type": "number"
          },
          "csgMi": {
            "type": "number"
          },
          "csgPd": {
            "type": "number"
          },
          "csgFtdep": {
            "type": "number"
          },
          "csgPdse": {
            "type": "number"
          },
          "transitionGrantAmt": {
            "type": "number"
          },
          "tgrantYrsRemaining": {
            "type": "number"
          },
          "pstudyDepCostLiving": {
            "type": "number"
          },
          "previousDisbursement": {
            "type": "number"
          }
        }
      },
      "cslNarsHistory2010may": {
        "required": [
          "aboriginalCat",
          "aboriginalCategory",
          "aboriginalStatusFlg",
          "academicYear",
          "academicYearStudy",
          "appStatus",
          "assessedNeed",
          "assessedResources",
          "assessmentCode",
          "assessmentDate",
          "assessmentId",
          "assessmentReviewFlg",
          "assistanceTotal",
          "birthDate",
          "cagPermDisabilityAmnt",
          "catCode",
          "childrenOver12Dis",
          "childrenOver12NotDis",
          "childrenTo11",
          "cmsAmount",
          "cmsDate",
          "coursePercentage",
          "createdBy",
          "createdDate",
          "creditCheckFlg",
          "creditCheckStatus",
          "csgDate",
          "csgDependentAmount",
          "csgDisabilityAmount",
          "csgDoctoralAmount",
          "csgFtdep",
          "csgLi",
          "csgMi",
          "csgPd",
          "csgPdse",
          "cslAuthFt",
          "cslAuthLoanAmnt",
          "cslAuthLoanDate",
          "cslAuthPt",
          "cslBeforeOveraward",
          "cslClassification",
          "cslNarsHistoryId",
          "cslRecoveredOveraward",
          "dateLeftHs",
          "disabledFlg",
          "disabledType",
          "earlyWithdrawalInd",
          "familySize",
          "fieldOfStudy",
          "gender",
          "historyDetailId",
          "institutionCode",
          "jointAssetFlg",
          "jointContribFlg",
          "loanType",
          "loanYear",
          "maritalStatus",
          "minorityFlg",
          "modifiedBy",
          "modifiedDate",
          "otherResources",
          "parent1Income",
          "parent1IncomeTaxable",
          "parent1IncomeTaxpaid",
          "parent1PostalCode",
          "parent1Sin",
          "parent2Income",
          "parent2IncomeTaxable",
          "parent2IncomeTaxpaid",
          "parent2PostalCode",
          "parent2Sin",
          "parentalAsset",
          "parentalAssetContrib",
          "parentalContribution",
          "postSecondaryChildren",
          "postalPrefix",
          "postalSuffix",
          "programDuration",
          "programType",
          "provGrantAmnt",
          "provGrantDate",
          "provGrantUnmetAmnt",
          "pslAuthLoanAmnt",
          "pslAuthLoanDate",
          "pslBeforeOveraward",
          "pslRecoveredOveraward",
          "pstudyCostLiving",
          "pstudyCostLoan",
          "pstudyDepCostLiving",
          "pstudyHomeAway",
          "pstudyIncomeEmploy",
          "pstudyIncomeOther",
          "pstudyPtCostTuitn",
          "pstudyStudentIncome",
          "pstudyWeeks",
          "reassessIndicator",
          "requestNeed",
          "sin",
          "singleIndStatReas",
          "socialAssistFlg",
          "spouseAsset",
          "spouseAssetContrib",
          "spouseCslFlg",
          "spouseDateLeftHs",
          "spouseGrossAnnualIncome",
          "spouseIncomeAnnual",
          "spousePstudyContrib",
          "spousePstudyIncome",
          "spouseRrsp",
          "spouseSin",
          "spouseStudentFlg",
          "spouseStudyContribution",
          "spouseStudyIncome",
          "spouseVehicle",
          "spouseYearsSinceHs",
          "studGrossAnnualIncome",
          "studentAsset",
          "studentAssetContrib",
          "studentId",
          "studentPstudyContribution",
          "studentResp",
          "studentRrsp",
          "studentStudyContribution",
          "studentVehicle",
          "studentYearsSinceHs",
          "studyCostBooks",
          "studyCostChildcareActl",
          "studyCostChildcareAllw",
          "studyCostLiving",
          "studyCostOther",
          "studyCostOtherTrans",
          "studyCostRelocation",
          "studyCostReturnTrans",
          "studyCostTotal",
          "studyEndDate",
          "studyHomeAway",
          "studyIncomeAlimony",
          "studyIncomeCpp",
          "studyIncomeCs",
          "studyIncomeEmploy",
          "studyIncomeGov",
          "studyIncomeGovEi",
          "studyIncomeGovSoc",
          "studyIncomeGovTot",
          "studyIncomeMerit",
          "studyIncomeNeed",
          "studyIncomeNontGov",
          "studyIncomeNontGovTot",
          "studyIncomeOther",
          "studyIncomeOtherTot",
          "studyIncomePriv",
          "studyIncomePrivMerit",
          "studyIncomeWc",
          "studyStartDate",
          "studyStudentIncome",
          "studyWeeks",
          "tgrantYrsRemaining",
          "transitionGrantAmt",
          "tuitionEstimate",
          "unmetNeed",
          "versionNum",
          "yearInProgram",
          "yearStudy"
        ],
        "type": "object",
        "properties": {
          "cslNarsHistoryId": {
            "type": "number"
          },
          "historyDetailId": {
            "type": "number"
          },
          "studentId": {
            "type": "number"
          },
          "assessmentId": {
            "type": "number"
          },
          "academicYear": {
            "type": "string"
          },
          "sin": {
            "type": "string"
          },
          "loanYear": {
            "type": "string"
          },
          "postalPrefix": {
            "type": "string"
          },
          "birthDate": {
            "type": "string"
          },
          "gender": {
            "type": "string"
          },
          "maritalStatus": {
            "type": "string"
          },
          "institutionCode": {
            "type": "string"
          },
          "fieldOfStudy": {
            "type": "string"
          },
          "yearStudy": {
            "type": "string"
          },
          "studyWeeks": {
            "type": "number"
          },
          "studyStartDate": {
            "type": "string"
          },
          "studyEndDate": {
            "type": "string"
          },
          "loanType": {
            "type": "string"
          },
          "coursePercentage": {
            "type": "number"
          },
          "creditCheckFlg": {
            "type": "string"
          },
          "creditCheckStatus": {
            "type": "string"
          },
          "disabledFlg": {
            "type": "string"
          },
          "disabledType": {
            "type": "string"
          },
          "minorityFlg": {
            "type": "string"
          },
          "aboriginalStatusFlg": {
            "type": "string"
          },
          "aboriginalCategory": {
            "type": "string"
          },
          "assessmentDate": {
            "type": "string"
          },
          "cslClassification": {
            "type": "number"
          },
          "familySize": {
            "type": "number"
          },
          "postSecondaryChildren": {
            "type": "number"
          },
          "spouseStudentFlg": {
            "type": "string"
          },
          "spouseCslFlg": {
            "type": "string"
          },
          "spouseSin": {
            "type": "string"
          },
          "childrenTo11": {
            "type": "number"
          },
          "childrenOver12NotDis": {
            "type": "number"
          },
          "childrenOver12Dis": {
            "type": "number"
          },
          "pstudyStudentIncome": {
            "type": "number"
          },
          "studyIncomeGov": {
            "type": "number"
          },
          "studyIncomeGovTot": {
            "type": "number"
          },
          "studyIncomePriv": {
            "type": "number"
          },
          "studyIncomeGovEi": {
            "type": "number"
          },
          "studyIncomeCpp": {
            "type": "number"
          },
          "studyIncomeWc": {
            "type": "number"
          },
          "studyIncomeGovSoc": {
            "type": "number"
          },
          "studyIncomeNontGov": {
            "type": "number"
          },
          "studyIncomeNontGovTot": {
            "type": "number"
          },
          "studyIncomeMerit": {
            "type": "number"
          },
          "studyIncomePrivMerit": {
            "type": "number"
          },
          "studyIncomeNeed": {
            "type": "number"
          },
          "studyIncomeEmploy": {
            "type": "number"
          },
          "studyIncomeCs": {
            "type": "number"
          },
          "studyIncomeAlimony": {
            "type": "number"
          },
          "studyIncomeOther": {
            "type": "number"
          },
          "studyIncomeOtherTot": {
            "type": "number"
          },
          "studyStudentIncome": {
            "type": "number"
          },
          "parent1Income": {
            "type": "number"
          },
          "parent2Income": {
            "type": "number"
          },
          "studentRrsp": {
            "type": "number"
          },
          "studentVehicle": {
            "type": "number"
          },
          "studentAsset": {
            "type": "number"
          },
          "spouseRrsp": {
            "type": "number"
          },
          "spouseVehicle": {
            "type": "number"
          },
          "spouseAsset": {
            "type": "number"
          },
          "studentYearsSinceHs": {
            "type": "number"
          },
          "spouseYearsSinceHs": {
            "type": "number"
          },
          "studentStudyContribution": {
            "type": "number"
          },
          "studentPstudyContribution": {
            "type": "number"
          },
          "spouseStudyContribution": {
            "type": "number"
          },
          "parentalContribution": {
            "type": "number"
          },
          "assessedResources": {
            "type": "number"
          },
          "tuitionEstimate": {
            "type": "number"
          },
          "assessedNeed": {
            "type": "number"
          },
          "unmetNeed": {
            "type": "number"
          },
          "requestNeed": {
            "type": "number"
          },
          "cslBeforeOveraward": {
            "type": "number"
          },
          "pslBeforeOveraward": {
            "type": "number"
          },
          "cslRecoveredOveraward": {
            "type": "number"
          },
          "pslRecoveredOveraward": {
            "type": "number"
          },
          "cslAuthFt": {
            "type": "string"
          },
          "cslAuthPt": {
            "type": "string"
          },
          "cslAuthLoanAmnt": {
            "type": "number"
          },
          "cslAuthLoanDate": {
            "type": "string"
          },
          "pslAuthLoanAmnt": {
            "type": "number"
          },
          "pslAuthLoanDate": {
            "type": "string"
          },
          "assistanceTotal": {
            "type": "number"
          },
          "assessmentReviewFlg": {
            "type": "string"
          },
          "csgDoctoralAmount": {
            "type": "number"
          },
          "csgDisabilityAmount": {
            "type": "number"
          },
          "cagPermDisabilityAmnt": {
            "type": "number"
          },
          "csgDependentAmount": {
            "type": "number"
          },
          "csgDate": {
            "type": "string"
          },
          "cmsAmount": {
            "type": "number"
          },
          "cmsDate": {
            "type": "string"
          },
          "provGrantUnmetAmnt": {
            "type": "number"
          },
          "provGrantAmnt": {
            "type": "number"
          },
          "provGrantDate": {
            "type": "string"
          },
          "assessmentCode": {
            "type": "number"
          },
          "versionNum": {
            "type": "number"
          },
          "appStatus": {
            "type": "string"
          },
          "reassessIndicator": {
            "type": "string"
          },
          "catCode": {
            "type": "string"
          },
          "singleIndStatReas": {
            "type": "string"
          },
          "socialAssistFlg": {
            "type": "string"
          },
          "parent1Sin": {
            "type": "string"
          },
          "parent1PostalCode": {
            "type": "string"
          },
          "parent2Sin": {
            "type": "string"
          },
          "parent2PostalCode": {
            "type": "string"
          },
          "postalSuffix": {
            "type": "string"
          },
          "pstudyWeeks": {
            "type": "number"
          },
          "pstudyHomeAway": {
            "type": "string"
          },
          "studyHomeAway": {
            "type": "string"
          },
          "programType": {
            "type": "string"
          },
          "academicYearStudy": {
            "type": "number"
          },
          "yearInProgram": {
            "type": "number"
          },
          "programDuration": {
            "type": "number"
          },
          "earlyWithdrawalInd": {
            "type": "string"
          },
          "dateLeftHs": {
            "type": "string"
          },
          "spouseDateLeftHs": {
            "type": "string"
          },
          "pstudyIncomeOther": {
            "type": "number"
          },
          "pstudyIncomeEmploy": {
            "type": "number"
          },
          "spouseIncomeAnnual": {
            "type": "number"
          },
          "spousePstudyIncome": {
            "type": "number"
          },
          "spouseStudyIncome": {
            "type": "number"
          },
          "parent1IncomeTaxable": {
            "type": "number"
          },
          "parent1IncomeTaxpaid": {
            "type": "number"
          },
          "parent2IncomeTaxable": {
            "type": "number"
          },
          "parent2IncomeTaxpaid": {
            "type": "number"
          },
          "jointAssetFlg": {
            "type": "string"
          },
          "studentResp": {
            "type": "number"
          },
          "parentalAsset": {
            "type": "number"
          },
          "jointContribFlg": {
            "type": "string"
          },
          "spousePstudyContrib": {
            "type": "number"
          },
          "studentAssetContrib": {
            "type": "number"
          },
          "spouseAssetContrib": {
            "type": "number"
          },
          "parentalAssetContrib": {
            "type": "number"
          },
          "otherResources": {
            "type": "number"
          },
          "pstudyCostLiving": {
            "type": "number"
          },
          "pstudyCostLoan": {
            "type": "number"
          },
          "pstudyPtCostTuitn": {
            "type": "number"
          },
          "studyCostLiving": {
            "type": "number"
          },
          "studyCostBooks": {
            "type": "number"
          },
          "studyCostChildcareAllw": {
            "type": "number"
          },
          "studyCostChildcareActl": {
            "type": "number"
          },
          "studyCostReturnTrans": {
            "type": "number"
          },
          "studyCostOtherTrans": {
            "type": "number"
          },
          "studyCostRelocation": {
            "type": "number"
          },
          "studyCostOther": {
            "type": "number"
          },
          "studyCostTotal": {
            "type": "number"
          },
          "aboriginalCat": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "modifiedDate": {
            "type": "string"
          },
          "studGrossAnnualIncome": {
            "type": "number"
          },
          "spouseGrossAnnualIncome": {
            "type": "number"
          },
          "csgLi": {
            "type": "number"
          },
          "csgMi": {
            "type": "number"
          },
          "csgPd": {
            "type": "number"
          },
          "csgFtdep": {
            "type": "number"
          },
          "csgPdse": {
            "type": "number"
          },
          "transitionGrantAmt": {
            "type": "number"
          },
          "tgrantYrsRemaining": {
            "type": "number"
          },
          "pstudyDepCostLiving": {
            "type": "number"
          }
        }
      },
      "cslNarsHistory2011jan27": {
        "required": [
          "aboriginalCat",
          "aboriginalCategory",
          "aboriginalStatusFlg",
          "academicYear",
          "academicYearStudy",
          "appStatus",
          "assessedNeed",
          "assessedResources",
          "assessmentCode",
          "assessmentDate",
          "assessmentId",
          "assessmentReviewFlg",
          "assistanceTotal",
          "birthDate",
          "cagPermDisabilityAmnt",
          "catCode",
          "childrenOver12Dis",
          "childrenOver12NotDis",
          "childrenTo11",
          "cmsAmount",
          "cmsDate",
          "coursePercentage",
          "createdBy",
          "createdDate",
          "creditCheckFlg",
          "creditCheckStatus",
          "csgDate",
          "csgDependentAmount",
          "csgDisabilityAmount",
          "csgDoctoralAmount",
          "csgFtdep",
          "csgLi",
          "csgMi",
          "csgPd",
          "csgPdse",
          "cslAuthFt",
          "cslAuthLoanAmnt",
          "cslAuthLoanDate",
          "cslAuthPt",
          "cslBeforeOveraward",
          "cslClassification",
          "cslNarsHistoryId",
          "cslRecoveredOveraward",
          "dateLeftHs",
          "disabledFlg",
          "disabledType",
          "earlyWithdrawalInd",
          "familySize",
          "fieldOfStudy",
          "gender",
          "historyDetailId",
          "institutionCode",
          "jointAssetFlg",
          "jointContribFlg",
          "loanType",
          "loanYear",
          "maritalStatus",
          "minorityFlg",
          "modifiedBy",
          "modifiedDate",
          "otherResources",
          "parent1Income",
          "parent1IncomeTaxable",
          "parent1IncomeTaxpaid",
          "parent1PostalCode",
          "parent1Sin",
          "parent2Income",
          "parent2IncomeTaxable",
          "parent2IncomeTaxpaid",
          "parent2PostalCode",
          "parent2Sin",
          "parentalAsset",
          "parentalAssetContrib",
          "parentalContribution",
          "postSecondaryChildren",
          "postalPrefix",
          "postalSuffix",
          "previousDisbursement",
          "programDuration",
          "programType",
          "provGrantAmnt",
          "provGrantDate",
          "provGrantUnmetAmnt",
          "pslAuthLoanAmnt",
          "pslAuthLoanDate",
          "pslBeforeOveraward",
          "pslRecoveredOveraward",
          "pstudyCostLiving",
          "pstudyCostLoan",
          "pstudyDepCostLiving",
          "pstudyHomeAway",
          "pstudyIncomeEmploy",
          "pstudyIncomeOther",
          "pstudyPtCostTuitn",
          "pstudyStudentIncome",
          "pstudyWeeks",
          "reassessIndicator",
          "requestNeed",
          "sin",
          "singleIndStatReas",
          "socialAssistFlg",
          "spouseAsset",
          "spouseAssetContrib",
          "spouseCslFlg",
          "spouseDateLeftHs",
          "spouseGrossAnnualIncome",
          "spouseIncomeAnnual",
          "spousePstudyContrib",
          "spousePstudyIncome",
          "spouseRrsp",
          "spouseSin",
          "spouseStudentFlg",
          "spouseStudyContribution",
          "spouseStudyIncome",
          "spouseVehicle",
          "spouseYearsSinceHs",
          "studGrossAnnualIncome",
          "studentAsset",
          "studentAssetContrib",
          "studentId",
          "studentPstudyContribution",
          "studentResp",
          "studentRrsp",
          "studentStudyContribution",
          "studentVehicle",
          "studentYearsSinceHs",
          "studyCostBooks",
          "studyCostChildcareActl",
          "studyCostChildcareAllw",
          "studyCostLiving",
          "studyCostOther",
          "studyCostOtherTrans",
          "studyCostRelocation",
          "studyCostReturnTrans",
          "studyCostTotal",
          "studyEndDate",
          "studyHomeAway",
          "studyIncomeAlimony",
          "studyIncomeCpp",
          "studyIncomeCs",
          "studyIncomeEmploy",
          "studyIncomeGov",
          "studyIncomeGovEi",
          "studyIncomeGovSoc",
          "studyIncomeGovTot",
          "studyIncomeMerit",
          "studyIncomeNeed",
          "studyIncomeNontGov",
          "studyIncomeNontGovTot",
          "studyIncomeOther",
          "studyIncomeOtherTot",
          "studyIncomePriv",
          "studyIncomePrivMerit",
          "studyIncomeWc",
          "studyStartDate",
          "studyStudentIncome",
          "studyWeeks",
          "tgrantYrsRemaining",
          "transitionGrantAmt",
          "tuitionEstimate",
          "unmetNeed",
          "versionNum",
          "yearInProgram",
          "yearStudy"
        ],
        "type": "object",
        "properties": {
          "cslNarsHistoryId": {
            "type": "number"
          },
          "historyDetailId": {
            "type": "number"
          },
          "studentId": {
            "type": "number"
          },
          "assessmentId": {
            "type": "number"
          },
          "academicYear": {
            "type": "string"
          },
          "sin": {
            "type": "string"
          },
          "loanYear": {
            "type": "string"
          },
          "postalPrefix": {
            "type": "string"
          },
          "birthDate": {
            "type": "string"
          },
          "gender": {
            "type": "string"
          },
          "maritalStatus": {
            "type": "string"
          },
          "institutionCode": {
            "type": "string"
          },
          "fieldOfStudy": {
            "type": "string"
          },
          "yearStudy": {
            "type": "string"
          },
          "studyWeeks": {
            "type": "number"
          },
          "studyStartDate": {
            "type": "string"
          },
          "studyEndDate": {
            "type": "string"
          },
          "loanType": {
            "type": "string"
          },
          "coursePercentage": {
            "type": "number"
          },
          "creditCheckFlg": {
            "type": "string"
          },
          "creditCheckStatus": {
            "type": "string"
          },
          "disabledFlg": {
            "type": "string"
          },
          "disabledType": {
            "type": "string"
          },
          "minorityFlg": {
            "type": "string"
          },
          "aboriginalStatusFlg": {
            "type": "string"
          },
          "aboriginalCategory": {
            "type": "string"
          },
          "assessmentDate": {
            "type": "string"
          },
          "cslClassification": {
            "type": "number"
          },
          "familySize": {
            "type": "number"
          },
          "postSecondaryChildren": {
            "type": "number"
          },
          "spouseStudentFlg": {
            "type": "string"
          },
          "spouseCslFlg": {
            "type": "string"
          },
          "spouseSin": {
            "type": "string"
          },
          "childrenTo11": {
            "type": "number"
          },
          "childrenOver12NotDis": {
            "type": "number"
          },
          "childrenOver12Dis": {
            "type": "number"
          },
          "pstudyStudentIncome": {
            "type": "number"
          },
          "studyIncomeGov": {
            "type": "number"
          },
          "studyIncomeGovTot": {
            "type": "number"
          },
          "studyIncomePriv": {
            "type": "number"
          },
          "studyIncomeGovEi": {
            "type": "number"
          },
          "studyIncomeCpp": {
            "type": "number"
          },
          "studyIncomeWc": {
            "type": "number"
          },
          "studyIncomeGovSoc": {
            "type": "number"
          },
          "studyIncomeNontGov": {
            "type": "number"
          },
          "studyIncomeNontGovTot": {
            "type": "number"
          },
          "studyIncomeMerit": {
            "type": "number"
          },
          "studyIncomePrivMerit": {
            "type": "number"
          },
          "studyIncomeNeed": {
            "type": "number"
          },
          "studyIncomeEmploy": {
            "type": "number"
          },
          "studyIncomeCs": {
            "type": "number"
          },
          "studyIncomeAlimony": {
            "type": "number"
          },
          "studyIncomeOther": {
            "type": "number"
          },
          "studyIncomeOtherTot": {
            "type": "number"
          },
          "studyStudentIncome": {
            "type": "number"
          },
          "parent1Income": {
            "type": "number"
          },
          "parent2Income": {
            "type": "number"
          },
          "studentRrsp": {
            "type": "number"
          },
          "studentVehicle": {
            "type": "number"
          },
          "studentAsset": {
            "type": "number"
          },
          "spouseRrsp": {
            "type": "number"
          },
          "spouseVehicle": {
            "type": "number"
          },
          "spouseAsset": {
            "type": "number"
          },
          "studentYearsSinceHs": {
            "type": "number"
          },
          "spouseYearsSinceHs": {
            "type": "number"
          },
          "studentStudyContribution": {
            "type": "number"
          },
          "studentPstudyContribution": {
            "type": "number"
          },
          "spouseStudyContribution": {
            "type": "number"
          },
          "parentalContribution": {
            "type": "number"
          },
          "assessedResources": {
            "type": "number"
          },
          "tuitionEstimate": {
            "type": "number"
          },
          "assessedNeed": {
            "type": "number"
          },
          "unmetNeed": {
            "type": "number"
          },
          "requestNeed": {
            "type": "number"
          },
          "cslBeforeOveraward": {
            "type": "number"
          },
          "pslBeforeOveraward": {
            "type": "number"
          },
          "cslRecoveredOveraward": {
            "type": "number"
          },
          "pslRecoveredOveraward": {
            "type": "number"
          },
          "cslAuthFt": {
            "type": "string"
          },
          "cslAuthPt": {
            "type": "string"
          },
          "cslAuthLoanAmnt": {
            "type": "number"
          },
          "cslAuthLoanDate": {
            "type": "string"
          },
          "pslAuthLoanAmnt": {
            "type": "number"
          },
          "pslAuthLoanDate": {
            "type": "string"
          },
          "assistanceTotal": {
            "type": "number"
          },
          "assessmentReviewFlg": {
            "type": "string"
          },
          "csgDoctoralAmount": {
            "type": "number"
          },
          "csgDisabilityAmount": {
            "type": "number"
          },
          "cagPermDisabilityAmnt": {
            "type": "number"
          },
          "csgDependentAmount": {
            "type": "number"
          },
          "csgDate": {
            "type": "string"
          },
          "cmsAmount": {
            "type": "number"
          },
          "cmsDate": {
            "type": "string"
          },
          "provGrantUnmetAmnt": {
            "type": "number"
          },
          "provGrantAmnt": {
            "type": "number"
          },
          "provGrantDate": {
            "type": "string"
          },
          "assessmentCode": {
            "type": "number"
          },
          "versionNum": {
            "type": "number"
          },
          "appStatus": {
            "type": "string"
          },
          "reassessIndicator": {
            "type": "string"
          },
          "catCode": {
            "type": "string"
          },
          "singleIndStatReas": {
            "type": "string"
          },
          "socialAssistFlg": {
            "type": "string"
          },
          "parent1Sin": {
            "type": "string"
          },
          "parent1PostalCode": {
            "type": "string"
          },
          "parent2Sin": {
            "type": "string"
          },
          "parent2PostalCode": {
            "type": "string"
          },
          "postalSuffix": {
            "type": "string"
          },
          "pstudyWeeks": {
            "type": "number"
          },
          "pstudyHomeAway": {
            "type": "string"
          },
          "studyHomeAway": {
            "type": "string"
          },
          "programType": {
            "type": "string"
          },
          "academicYearStudy": {
            "type": "number"
          },
          "yearInProgram": {
            "type": "number"
          },
          "programDuration": {
            "type": "number"
          },
          "earlyWithdrawalInd": {
            "type": "string"
          },
          "dateLeftHs": {
            "type": "string"
          },
          "spouseDateLeftHs": {
            "type": "string"
          },
          "pstudyIncomeOther": {
            "type": "number"
          },
          "pstudyIncomeEmploy": {
            "type": "number"
          },
          "spouseIncomeAnnual": {
            "type": "number"
          },
          "spousePstudyIncome": {
            "type": "number"
          },
          "spouseStudyIncome": {
            "type": "number"
          },
          "parent1IncomeTaxable": {
            "type": "number"
          },
          "parent1IncomeTaxpaid": {
            "type": "number"
          },
          "parent2IncomeTaxable": {
            "type": "number"
          },
          "parent2IncomeTaxpaid": {
            "type": "number"
          },
          "jointAssetFlg": {
            "type": "string"
          },
          "studentResp": {
            "type": "number"
          },
          "parentalAsset": {
            "type": "number"
          },
          "jointContribFlg": {
            "type": "string"
          },
          "spousePstudyContrib": {
            "type": "number"
          },
          "studentAssetContrib": {
            "type": "number"
          },
          "spouseAssetContrib": {
            "type": "number"
          },
          "parentalAssetContrib": {
            "type": "number"
          },
          "otherResources": {
            "type": "number"
          },
          "pstudyCostLiving": {
            "type": "number"
          },
          "pstudyCostLoan": {
            "type": "number"
          },
          "pstudyPtCostTuitn": {
            "type": "number"
          },
          "studyCostLiving": {
            "type": "number"
          },
          "studyCostBooks": {
            "type": "number"
          },
          "studyCostChildcareAllw": {
            "type": "number"
          },
          "studyCostChildcareActl": {
            "type": "number"
          },
          "studyCostReturnTrans": {
            "type": "number"
          },
          "studyCostOtherTrans": {
            "type": "number"
          },
          "studyCostRelocation": {
            "type": "number"
          },
          "studyCostOther": {
            "type": "number"
          },
          "studyCostTotal": {
            "type": "number"
          },
          "aboriginalCat": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "modifiedDate": {
            "type": "string"
          },
          "studGrossAnnualIncome": {
            "type": "number"
          },
          "spouseGrossAnnualIncome": {
            "type": "number"
          },
          "csgLi": {
            "type": "number"
          },
          "csgMi": {
            "type": "number"
          },
          "csgPd": {
            "type": "number"
          },
          "csgFtdep": {
            "type": "number"
          },
          "csgPdse": {
            "type": "number"
          },
          "transitionGrantAmt": {
            "type": "number"
          },
          "tgrantYrsRemaining": {
            "type": "number"
          },
          "pstudyDepCostLiving": {
            "type": "number"
          },
          "previousDisbursement": {
            "type": "number"
          }
        }
      },
      "cslNslscAddress": {
        "required": [
          "addressLine1",
          "addressLine2",
          "cityId",
          "createdBy",
          "createdDate",
          "cslNslscAddressId",
          "effectiveDate",
          "expiryDate",
          "institutionTypeId",
          "name",
          "phoneNumber",
          "postalCode",
          "provinceId",
          "rowid",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "cslNslscAddressId": {
            "type": "number"
          },
          "institutionTypeId": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "addressLine1": {
            "type": "string"
          },
          "addressLine2": {
            "type": "string"
          },
          "cityId": {
            "type": "number"
          },
          "provinceId": {
            "type": "number"
          },
          "postalCode": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "effectiveDate": {
            "type": "string"
          },
          "expiryDate": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "cslReason": {
        "required": [
          "createdBy",
          "createdDate",
          "cslReason",
          "cslReasonId",
          "cslReasonName",
          "cslReasonType",
          "rowid",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "cslReasonId": {
            "type": "number"
          },
          "cslReasonType": {
            "type": "string"
          },
          "cslReason": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "cslReasonName": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "cslRestricted": {
        "required": [
          "amountDisbursed",
          "birthDate",
          "calscRestrict1",
          "calscRestrict2",
          "calscRestrict3",
          "cslRestrictedId",
          "fiRestrict1",
          "firstName",
          "lastName",
          "nslscRestrict1",
          "nslscRestrict2",
          "nslscRestrict3",
          "overAward",
          "restrictionReasonId",
          "restrictionWarnId",
          "weeksAccumulated"
        ],
        "type": "object",
        "properties": {
          "cslRestrictedId": {
            "type": "number"
          },
          "amountDisbursed": {
            "type": "number"
          },
          "birthDate": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "overAward": {
            "type": "number"
          },
          "restrictionReasonId": {
            "type": "string"
          },
          "restrictionWarnId": {
            "type": "string"
          },
          "weeksAccumulated": {
            "type": "number"
          },
          "nslscRestrict1": {
            "type": "string"
          },
          "nslscRestrict2": {
            "type": "string"
          },
          "nslscRestrict3": {
            "type": "string"
          },
          "calscRestrict1": {
            "type": "string"
          },
          "calscRestrict2": {
            "type": "string"
          },
          "calscRestrict3": {
            "type": "string"
          },
          "fiRestrict1": {
            "type": "string"
          }
        }
      },
      "cslRestrictedBackup": {
        "required": [
          "amountDisbursed",
          "birthDate",
          "cslRestrictedId",
          "firstName",
          "lastName",
          "overAward",
          "restrictionReasonId",
          "restrictionWarnId",
          "weeksAccumulated"
        ],
        "type": "object",
        "properties": {
          "cslRestrictedId": {
            "type": "number"
          },
          "amountDisbursed": {
            "type": "number"
          },
          "birthDate": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "overAward": {
            "type": "number"
          },
          "restrictionReasonId": {
            "type": "string"
          },
          "restrictionWarnId": {
            "type": "string"
          },
          "weeksAccumulated": {
            "type": "number"
          }
        }
      },
      "dataCorrection": {
        "required": [
          "childTable",
          "currentId",
          "dataCorrectionId",
          "fieldName",
          "parentTable",
          "removeParentInd",
          "replacementId",
          "rowid"
        ],
        "type": "object",
        "properties": {
          "dataCorrectionId": {
            "type": "number"
          },
          "parentTable": {
            "type": "string"
          },
          "childTable": {
            "type": "string"
          },
          "currentId": {
            "type": "number"
          },
          "replacementId": {
            "type": "number"
          },
          "fieldName": {
            "type": "string"
          },
          "removeParentInd": {
            "type": "number"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "dependent": {
        "required": [
          "birthDate",
          "comments",
          "conversionFlg",
          "createdBy",
          "createdDate",
          "dependentId",
          "disabilityFlg",
          "firstName",
          "isInProgressFlg",
          "lastName",
          "relationshipId",
          "rowid",
          "studentId",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "dependentId": {
            "type": "number"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "comments": {
            "type": "string"
          },
          "relationshipId": {
            "type": "number"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "studentId": {
            "type": "number"
          },
          "isInProgressFlg": {
            "type": "string"
          },
          "birthDate": {
            "type": "string"
          },
          "conversionFlg": {
            "type": "string"
          },
          "disabilityFlg": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "dependentEligibility": {
        "required": [
          "createdBy",
          "createdDate",
          "csgEligible",
          "cslEligible",
          "dependentEligibilityId",
          "dependentId",
          "eligible",
          "historyDetailId",
          "isInProgressFlg",
          "postSecondary",
          "residesWith",
          "rowid",
          "sharesCustody",
          "sharesCustodyDetails",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "dependentEligibilityId": {
            "type": "number"
          },
          "dependentId": {
            "type": "number"
          },
          "historyDetailId": {
            "type": "number"
          },
          "eligible": {
            "type": "number"
          },
          "postSecondary": {
            "type": "number"
          },
          "residesWith": {
            "type": "number"
          },
          "sharesCustody": {
            "type": "number"
          },
          "sharesCustodyDetails": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "cslEligible": {
            "type": "number"
          },
          "isInProgressFlg": {
            "type": "string"
          },
          "csgEligible": {
            "type": "number"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "disabServiceType": {
        "required": [
          "createdBy",
          "createdDate",
          "description",
          "disabServiceTypeId",
          "isActiveFlg",
          "rowid",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "disabServiceTypeId": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "isActiveFlg": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "disability": {
        "required": [
          "createdBy",
          "createdDate",
          "description",
          "disabilityId",
          "disabilityTypeId",
          "historyDetailId",
          "rowid",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "disabilityId": {
            "type": "number"
          },
          "disabilityTypeId": {
            "type": "number"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "historyDetailId": {
            "type": "number"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "disabilityRequirement": {
        "required": [
          "createdBy",
          "createdDate",
          "disabServiceTypeId",
          "disabilityRequirementId",
          "historyDetailId",
          "rowid",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "disabilityRequirementId": {
            "type": "number"
          },
          "historyDetailId": {
            "type": "number"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "disabServiceTypeId": {
            "type": "number"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "disabilityType": {
        "required": [
          "createdBy",
          "createdDate",
          "cslCode",
          "description",
          "disabilityTypeId",
          "isActiveFlg",
          "rowid",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "disabilityTypeId": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "isActiveFlg": {
            "type": "string"
          },
          "cslCode": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "disbursement": {
        "required": [
          "assessmentId",
          "changeReasonId",
          "createdBy",
          "createdDate",
          "cslCertSeqNumber",
          "disbursedAmount",
          "disbursementId",
          "disbursementTypeId",
          "dueDate",
          "ecertPortalStatusId",
          "ecertResponseDate",
          "ecertSentDate",
          "ecertStatus",
          "financialBatchId",
          "financialBatchIdYear",
          "financialBatchRunDate",
          "financialBatchSerialNo",
          "fundingRequestId",
          "issueDate",
          "paidAmount",
          "rowid",
          "taxYear",
          "transactionNumber",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "disbursementId": {
            "type": "number"
          },
          "disbursementTypeId": {
            "type": "number"
          },
          "assessmentId": {
            "type": "number"
          },
          "fundingRequestId": {
            "type": "number"
          },
          "disbursedAmount": {
            "type": "number"
          },
          "dueDate": {
            "type": "string"
          },
          "taxYear": {
            "type": "number"
          },
          "issueDate": {
            "type": "string"
          },
          "paidAmount": {
            "type": "number"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "changeReasonId": {
            "type": "number"
          },
          "financialBatchId": {
            "type": "number"
          },
          "financialBatchIdYear": {
            "type": "number"
          },
          "financialBatchRunDate": {
            "type": "string"
          },
          "financialBatchSerialNo": {
            "type": "number"
          },
          "transactionNumber": {
            "type": "string"
          },
          "cslCertSeqNumber": {
            "type": "number"
          },
          "ecertSentDate": {
            "type": "string"
          },
          "ecertResponseDate": {
            "type": "string"
          },
          "ecertStatus": {
            "type": "string"
          },
          "ecertPortalStatusId": {
            "type": "number"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "disbursementType": {
        "required": [
          "createdBy",
          "createdDate",
          "description",
          "disbursementTypeId",
          "isActiveFlg",
          "rowid",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "disbursementTypeId": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "isActiveFlg": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "ecertImport": {
        "required": [
          "certificateNumber",
          "disbursementId",
          "ecertSentDate",
          "errorMessage",
          "isResendFlg",
          "responseDate",
          "sequenceNumber",
          "sin"
        ],
        "type": "object",
        "properties": {
          "sequenceNumber": {
            "type": "string"
          },
          "sin": {
            "type": "string"
          },
          "certificateNumber": {
            "type": "string"
          },
          "ecertSentDate": {
            "type": "string"
          },
          "responseDate": {
            "type": "string"
          },
          "isResendFlg": {
            "type": "string"
          },
          "errorMessage": {
            "type": "string"
          },
          "disbursementId": {
            "type": "number"
          }
        }
      },
      "education": {
        "required": [
          "createdBy",
          "createdDate",
          "educationId",
          "fromMonth",
          "fromYear",
          "institutionId",
          "isInProgressFlg",
          "rowid",
          "studentId",
          "studyAreaId",
          "toMonth",
          "toYear",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "educationId": {
            "type": "number"
          },
          "institutionId": {
            "type": "number"
          },
          "studyAreaId": {
            "type": "number"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "studentId": {
            "type": "number"
          },
          "fromMonth": {
            "type": "number"
          },
          "toMonth": {
            "type": "number"
          },
          "fromYear": {
            "type": "number"
          },
          "toYear": {
            "type": "number"
          },
          "isInProgressFlg": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "educationLevel": {
        "required": [
          "createdBy",
          "createdDate",
          "description",
          "educationLevelId",
          "isActiveFlg",
          "rank",
          "rowid",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "educationLevelId": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "rank": {
            "type": "number"
          },
          "isActiveFlg": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "entitlementError": {
        "required": [
          "disbursementId",
          "entitlementErrorId",
          "errorCode",
          "isResendFlg",
          "recCreateDate",
          "recCreateUser",
          "recLastModDate",
          "recLastModUser",
          "rowid"
        ],
        "type": "object",
        "properties": {
          "entitlementErrorId": {
            "type": "number"
          },
          "disbursementId": {
            "type": "number"
          },
          "errorCode": {
            "type": "string"
          },
          "isResendFlg": {
            "type": "string"
          },
          "recCreateDate": {
            "type": "string"
          },
          "recCreateUser": {
            "type": "string"
          },
          "recLastModDate": {
            "type": "string"
          },
          "recLastModUser": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "entitlementErrorCodes": {
        "required": [
          "confirmedUnconfirmed",
          "errorCode",
          "errorDesc",
          "isInFeedbackFlg",
          "isResendFlg"
        ],
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "string"
          },
          "errorDesc": {
            "type": "string"
          },
          "confirmedUnconfirmed": {
            "type": "string"
          },
          "isInFeedbackFlg": {
            "type": "string"
          },
          "isResendFlg": {
            "type": "string"
          }
        }
      },
      "expense": {
        "required": [
          "amount",
          "categoryId",
          "createdBy",
          "createdDate",
          "description",
          "expenseId",
          "historyDetailId",
          "periodId",
          "rowid",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "expenseId": {
            "type": "number"
          },
          "categoryId": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "periodId": {
            "type": "number"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "amount": {
            "type": "number"
          },
          "historyDetailId": {
            "type": "number"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "expenseCategory": {
        "required": [
          "createdBy",
          "createdDate",
          "description",
          "expenseCategoryId",
          "frequency",
          "isActiveFlg",
          "reportExpenseCategoryId",
          "rowid",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "expenseCategoryId": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "frequency": {
            "type": "string"
          },
          "reportExpenseCategoryId": {
            "type": "number"
          },
          "isActiveFlg": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "externalYea": {
        "required": [
          "birthDt",
          "course",
          "fname",
          "lname",
          "schoolmn",
          "schoolyr",
          "yeaAmnt",
          "ytid"
        ],
        "type": "object",
        "properties": {
          "fname": {
            "type": "string"
          },
          "lname": {
            "type": "string"
          },
          "birthDt": {
            "type": "string"
          },
          "ytid": {
            "type": "string"
          },
          "schoolyr": {
            "type": "number"
          },
          "schoolmn": {
            "type": "number"
          },
          "course": {
            "type": "string"
          },
          "yeaAmnt": {
            "type": "number"
          }
        }
      },
      "fieldProgram": {
        "required": [
          "createdBy",
          "createdDate",
          "fieldProgramCode",
          "programId",
          "rowid",
          "studyFieldId",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "studyFieldId": {
            "type": "number"
          },
          "programId": {
            "type": "number"
          },
          "fieldProgramCode": {
            "type": "number"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "firstNation": {
        "required": [
          "cityId",
          "createdBy",
          "createdDate",
          "firstNationDesc",
          "firstNationId",
          "isActiveFlg",
          "rowid",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "firstNationId": {
            "type": "number"
          },
          "firstNationDesc": {
            "type": "string"
          },
          "isActiveFlg": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "cityId": {
            "type": "number"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "fundingGroup": {
        "required": [
          "createdBy",
          "createdDate",
          "description",
          "fundingGroupId",
          "isActiveFlg",
          "rowid",
          "sortOrder",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "fundingGroupId": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "sortOrder": {
            "type": "number"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "isActiveFlg": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "fundingRequest": {
        "required": [
          "comments",
          "createdBy",
          "createdDate",
          "csgOnlyFlg",
          "cslFullAmtFlag",
          "cslRequestAmount",
          "customStatus",
          "fundingRequestId",
          "historyDetailId",
          "receivedDate",
          "requestTypeId",
          "rowid",
          "statusDate",
          "statusId",
          "statusReasonId",
          "updatedBy",
          "updatedDate",
          "yeaRequestAmount",
          "yeaRequestTypeFlag"
        ],
        "type": "object",
        "properties": {
          "fundingRequestId": {
            "type": "number"
          },
          "requestTypeId": {
            "type": "number"
          },
          "comments": {
            "type": "string"
          },
          "customStatus": {
            "type": "string"
          },
          "statusId": {
            "type": "number"
          },
          "receivedDate": {
            "type": "string"
          },
          "statusDate": {
            "type": "string"
          },
          "statusReasonId": {
            "type": "number"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "historyDetailId": {
            "type": "number"
          },
          "yeaRequestAmount": {
            "type": "number"
          },
          "yeaRequestTypeFlag": {
            "type": "number"
          },
          "cslRequestAmount": {
            "type": "number"
          },
          "cslFullAmtFlag": {
            "type": "number"
          },
          "csgOnlyFlg": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "hidePartTimeReason": {
        "required": [
          "createdBy",
          "createdDate",
          "historyDetailId",
          "partTimeReasonId",
          "rowid",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "historyDetailId": {
            "type": "number"
          },
          "partTimeReasonId": {
            "type": "number"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "highSchool": {
        "required": [
          "cityId",
          "countryId",
          "createdBy",
          "createdDate",
          "highSchoolId",
          "isActiveFlg",
          "name",
          "provinceId",
          "rowid",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "highSchoolId": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "cityId": {
            "type": "number"
          },
          "provinceId": {
            "type": "number"
          },
          "countryId": {
            "type": "number"
          },
          "createdDate": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "isActiveFlg": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "historyDetail": {
        "required": [
          "aboriginalStatusId",
          "academicPercent",
          "academicYear",
          "appliedOtherFundingFlg",
          "booksSuppliesCost",
          "categoryId",
          "chequesToInstitutionFlag",
          "citizenshipStatus",
          "classHoursPerWeek",
          "classesEndDate",
          "classesStartDate",
          "coopEndMonth",
          "coopEndYear",
          "coopPaidFlag",
          "coopStartMonth",
          "coopStartYear",
          "correspondenceFlag",
          "coursesPerWeek",
          "createdBy",
          "createdDate",
          "creditChkAppCompDate",
          "creditChkAppCompFlag",
          "creditChkAppealDate",
          "creditChkCompDate",
          "creditChkFaxSentDate",
          "creditChkPassedDate",
          "creditChkPassedFlag",
          "creditChkReqdDate",
          "cslClassification",
          "cslClearanceDate",
          "cslPreviousProvinceId",
          "cslRestrictionComment",
          "cslRestrictionReasonId",
          "cslRestrictionWarnId",
          "disabledEquipment",
          "disabledFlag",
          "excludeFromCount",
          "firstNationId",
          "historyDetailId",
          "inProgressPage",
          "institutionId",
          "maritalStatusId",
          "minorityFlag",
          "movingFlag",
          "onlineStartDate",
          "onlineSubmitDate",
          "outstandingCslptAmt",
          "parent1CitizenshipCode",
          "parent1FirstName",
          "parent1Income",
          "parent1LastName",
          "parent1NetIncome",
          "parent1RelationshipId",
          "parent1Sin",
          "parent1TaxPaid",
          "parent2FirstName",
          "parent2Income",
          "parent2LastName",
          "parent2NetIncome",
          "parent2RelationshipId",
          "parent2Sin",
          "parent2TaxPaid",
          "parentResidenceComment",
          "partOfFtFlag",
          "percentOfFullTime",
          "permDisabledFlag",
          "prestudyAccomCode",
          "prestudyBoardAmount",
          "prestudyBusFlag",
          "prestudyCityId",
          "prestudyCslClassification",
          "prestudyDistance",
          "prestudyEmployStatusId",
          "prestudyEmployedFromDate",
          "prestudyEmployedToDate",
          "prestudyEmployerCityId",
          "prestudyEmployerName",
          "prestudyEmployerProvinceId",
          "prestudyEndDate",
          "prestudyOwnHomeFlag",
          "prestudyProvinceId",
          "prestudyStartDate",
          "previousCsgDisabilityAmount",
          "previousCsgFemDocAmount",
          "previousCsgPtAmt",
          "previousCslftFlag",
          "previousCslptFlag",
          "programDivision",
          "programDivisionExplan",
          "programId",
          "programYear",
          "programYearTotal",
          "remTransitionGrantYrs",
          "rowid",
          "spouseFirstName",
          "spouseHsEndMonth",
          "spouseHsEndYear",
          "spouseInitials",
          "spouseLastName",
          "spouseLn150Income",
          "spousePrestudyEmpStatusId",
          "spousePstudyIncomeComment",
          "spousePstudySchoolFrom",
          "spousePstudySchoolTo",
          "spouseSin",
          "spouseStudyBusFlag",
          "spouseStudyCslFlag",
          "spouseStudyDistance",
          "spouseStudyEmpStatusId",
          "spouseStudyIncomeComment",
          "spouseStudySchoolFrom",
          "spouseStudySchoolTo",
          "statInfoComment",
          "studentId",
          "studentLn150Income",
          "studentNumber",
          "studyAccomCode",
          "studyAreaId",
          "studyBoardAmount",
          "studyBusFlag",
          "studyCityId",
          "studyDistance",
          "studyLivingWSpouseFlag",
          "studyOwnHomeFlag",
          "studyProvinceId",
          "studyWeeksCount",
          "taxesFiled1ProvinceId",
          "taxesFiled2ProvinceId",
          "taxesFiledYear1",
          "taxesFiledYear2",
          "taxesNotFiledYr1Flg",
          "taxesNotFiledYr2Flg",
          "tuitionEstimate",
          "twoResidenceFlag",
          "updatedBy",
          "updatedDate",
          "yeaTotReceiptAmount"
        ],
        "type": "object",
        "properties": {
          "historyDetailId": {
            "type": "number"
          },
          "studentId": {
            "type": "number"
          },
          "parent1FirstName": {
            "type": "string"
          },
          "parent1LastName": {
            "type": "string"
          },
          "parent1Income": {
            "type": "number"
          },
          "parent1TaxPaid": {
            "type": "number"
          },
          "parent1RelationshipId": {
            "type": "number"
          },
          "parent2FirstName": {
            "type": "string"
          },
          "parent2LastName": {
            "type": "string"
          },
          "parent2Income": {
            "type": "number"
          },
          "parent2TaxPaid": {
            "type": "number"
          },
          "parent2RelationshipId": {
            "type": "number"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "institutionId": {
            "type": "number"
          },
          "studyAreaId": {
            "type": "number"
          },
          "programId": {
            "type": "number"
          },
          "classesStartDate": {
            "type": "string"
          },
          "classesEndDate": {
            "type": "string"
          },
          "correspondenceFlag": {
            "type": "number"
          },
          "coopPaidFlag": {
            "type": "number"
          },
          "aboriginalStatusId": {
            "type": "number"
          },
          "maritalStatusId": {
            "type": "number"
          },
          "citizenshipStatus": {
            "type": "number"
          },
          "disabledFlag": {
            "type": "number"
          },
          "minorityFlag": {
            "type": "number"
          },
          "studentNumber": {
            "type": "string"
          },
          "academicYear": {
            "type": "string"
          },
          "programYearTotal": {
            "type": "number"
          },
          "programYear": {
            "type": "number"
          },
          "twoResidenceFlag": {
            "type": "number"
          },
          "movingFlag": {
            "type": "number"
          },
          "cslClassification": {
            "type": "number"
          },
          "cslPreviousProvinceId": {
            "type": "number"
          },
          "programDivisionExplan": {
            "type": "string"
          },
          "prestudyAccomCode": {
            "type": "number"
          },
          "prestudyOwnHomeFlag": {
            "type": "number"
          },
          "prestudyBoardAmount": {
            "type": "number"
          },
          "prestudyCityId": {
            "type": "number"
          },
          "prestudyProvinceId": {
            "type": "number"
          },
          "prestudyBusFlag": {
            "type": "number"
          },
          "prestudyDistance": {
            "type": "number"
          },
          "prestudyEmployStatusId": {
            "type": "number"
          },
          "prestudyEmployerName": {
            "type": "string"
          },
          "prestudyEmployerCityId": {
            "type": "number"
          },
          "prestudyEmployerProvinceId": {
            "type": "number"
          },
          "prestudyEmployedFromDate": {
            "type": "string"
          },
          "prestudyEmployedToDate": {
            "type": "string"
          },
          "studyAccomCode": {
            "type": "number"
          },
          "studyOwnHomeFlag": {
            "type": "number"
          },
          "studyBoardAmount": {
            "type": "number"
          },
          "studyCityId": {
            "type": "number"
          },
          "studyProvinceId": {
            "type": "number"
          },
          "studyBusFlag": {
            "type": "number"
          },
          "studyDistance": {
            "type": "number"
          },
          "booksSuppliesCost": {
            "type": "number"
          },
          "outstandingCslptAmt": {
            "type": "number"
          },
          "previousCsgPtAmt": {
            "type": "number"
          },
          "statInfoComment": {
            "type": "string"
          },
          "percentOfFullTime": {
            "type": "number"
          },
          "partOfFtFlag": {
            "type": "number"
          },
          "studyWeeksCount": {
            "type": "number"
          },
          "classHoursPerWeek": {
            "type": "number"
          },
          "parentResidenceComment": {
            "type": "string"
          },
          "studyLivingWSpouseFlag": {
            "type": "number"
          },
          "tuitionEstimate": {
            "type": "number"
          },
          "programDivision": {
            "type": "number"
          },
          "previousCslftFlag": {
            "type": "number"
          },
          "previousCslptFlag": {
            "type": "number"
          },
          "parent1CitizenshipCode": {
            "type": "number"
          },
          "spousePrestudyEmpStatusId": {
            "type": "number"
          },
          "spouseStudyEmpStatusId": {
            "type": "number"
          },
          "spouseStudySchoolFrom": {
            "type": "string"
          },
          "spouseStudySchoolTo": {
            "type": "string"
          },
          "spousePstudySchoolTo": {
            "type": "string"
          },
          "spousePstudySchoolFrom": {
            "type": "string"
          },
          "spouseStudyCslFlag": {
            "type": "number"
          },
          "spouseStudyBusFlag": {
            "type": "number"
          },
          "spouseStudyDistance": {
            "type": "number"
          },
          "spouseLastName": {
            "type": "string"
          },
          "spouseFirstName": {
            "type": "string"
          },
          "spouseInitials": {
            "type": "string"
          },
          "coopStartYear": {
            "type": "number"
          },
          "coopStartMonth": {
            "type": "number"
          },
          "coopEndYear": {
            "type": "number"
          },
          "coopEndMonth": {
            "type": "number"
          },
          "spousePstudyIncomeComment": {
            "type": "string"
          },
          "spouseStudyIncomeComment": {
            "type": "string"
          },
          "spouseSin": {
            "type": "number"
          },
          "excludeFromCount": {
            "type": "number"
          },
          "permDisabledFlag": {
            "type": "number"
          },
          "disabledEquipment": {
            "type": "string"
          },
          "previousCsgDisabilityAmount": {
            "type": "number"
          },
          "previousCsgFemDocAmount": {
            "type": "number"
          },
          "spouseHsEndYear": {
            "type": "number"
          },
          "spouseHsEndMonth": {
            "type": "number"
          },
          "creditChkReqdDate": {
            "type": "string"
          },
          "creditChkFaxSentDate": {
            "type": "string"
          },
          "creditChkPassedDate": {
            "type": "string"
          },
          "creditChkPassedFlag": {
            "type": "number"
          },
          "creditChkAppealDate": {
            "type": "string"
          },
          "creditChkAppCompDate": {
            "type": "string"
          },
          "creditChkAppCompFlag": {
            "type": "number"
          },
          "creditChkCompDate": {
            "type": "string"
          },
          "chequesToInstitutionFlag": {
            "type": "number"
          },
          "cslClearanceDate": {
            "type": "string"
          },
          "prestudyCslClassification": {
            "type": "number"
          },
          "categoryId": {
            "type": "number"
          },
          "yeaTotReceiptAmount": {
            "type": "number"
          },
          "academicPercent": {
            "type": "number"
          },
          "cslRestrictionComment": {
            "type": "string"
          },
          "inProgressPage": {
            "type": "number"
          },
          "onlineStartDate": {
            "type": "string"
          },
          "onlineSubmitDate": {
            "type": "string"
          },
          "parent1Sin": {
            "type": "number"
          },
          "parent2Sin": {
            "type": "number"
          },
          "parent1NetIncome": {
            "type": "number"
          },
          "parent2NetIncome": {
            "type": "number"
          },
          "studentLn150Income": {
            "type": "number"
          },
          "spouseLn150Income": {
            "type": "number"
          },
          "remTransitionGrantYrs": {
            "type": "number"
          },
          "taxesFiledYear1": {
            "type": "number"
          },
          "taxesFiledYear2": {
            "type": "number"
          },
          "taxesFiled1ProvinceId": {
            "type": "number"
          },
          "taxesFiled2ProvinceId": {
            "type": "number"
          },
          "taxesNotFiledYr1Flg": {
            "type": "string"
          },
          "taxesNotFiledYr2Flg": {
            "type": "string"
          },
          "appliedOtherFundingFlg": {
            "type": "string"
          },
          "cslRestrictionWarnId": {
            "type": "number"
          },
          "cslRestrictionReasonId": {
            "type": "number"
          },
          "coursesPerWeek": {
            "type": "number"
          },
          "firstNationId": {
            "type": "number"
          },
          "prestudyStartDate": {
            "type": "string"
          },
          "prestudyEndDate": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "income": {
        "required": [
          "amount",
          "cityId",
          "createdBy",
          "createdDate",
          "description",
          "earnedBy",
          "fromDate",
          "fullTimeFlag",
          "historyDetailId",
          "hoursPerWeek",
          "incomeId",
          "incomeTypeId",
          "periodId",
          "provinceId",
          "rowid",
          "toDate",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "incomeId": {
            "type": "number"
          },
          "amount": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "earnedBy": {
            "type": "number"
          },
          "periodId": {
            "type": "number"
          },
          "incomeTypeId": {
            "type": "number"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "historyDetailId": {
            "type": "number"
          },
          "fullTimeFlag": {
            "type": "number"
          },
          "hoursPerWeek": {
            "type": "number"
          },
          "fromDate": {
            "type": "string"
          },
          "toDate": {
            "type": "string"
          },
          "cityId": {
            "type": "number"
          },
          "provinceId": {
            "type": "number"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "incomeType": {
        "required": [
          "assetFlag",
          "createdBy",
          "createdDate",
          "description",
          "incomeTypeId",
          "isActiveFlg",
          "rowid",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "incomeTypeId": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "assetFlag": {
            "type": "number"
          },
          "isActiveFlg": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "infoCategory": {
        "required": [
          "canvasName",
          "categoryName",
          "createdBy",
          "createdDate",
          "firstItem",
          "infoCategoryId",
          "rowid",
          "sortOrder",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "infoCategoryId": {
            "type": "number"
          },
          "canvasName": {
            "type": "string"
          },
          "categoryName": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "sortOrder": {
            "type": "number"
          },
          "firstItem": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "institution": {
        "required": [
          "address",
          "careOf",
          "cityId",
          "classesEndDate",
          "classesStartDate",
          "contactEmail",
          "contactFax",
          "contactFirstName",
          "contactLastName",
          "contactPhone",
          "countryId",
          "createdBy",
          "createdDate",
          "institutionCode",
          "institutionId",
          "institutionLevelId",
          "isActiveFlg",
          "name",
          "notes",
          "postalCode",
          "prefixFlag",
          "provinceId",
          "rowid",
          "shortName",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "institutionId": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "cityId": {
            "type": "number"
          },
          "provinceId": {
            "type": "number"
          },
          "postalCode": {
            "type": "string"
          },
          "countryId": {
            "type": "number"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "institutionCode": {
            "type": "string"
          },
          "contactFirstName": {
            "type": "string"
          },
          "contactLastName": {
            "type": "string"
          },
          "contactPhone": {
            "type": "string"
          },
          "contactFax": {
            "type": "string"
          },
          "shortName": {
            "type": "string"
          },
          "careOf": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "contactEmail": {
            "type": "string"
          },
          "prefixFlag": {
            "type": "number"
          },
          "institutionLevelId": {
            "type": "number"
          },
          "isActiveFlg": {
            "type": "string"
          },
          "classesStartDate": {
            "type": "string"
          },
          "classesEndDate": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "institutionLevel": {
        "required": [
          "createdBy",
          "createdDate",
          "description",
          "institutionLevelId",
          "isActiveFlg",
          "rowid",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "institutionLevelId": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "isActiveFlg": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "institutionRequestType": {
        "required": [
          "createdBy",
          "createdDate",
          "institutionId",
          "requestTypeId",
          "rowid",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "institutionId": {
            "type": "number"
          },
          "requestTypeId": {
            "type": "number"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "institutionType": {
        "required": [
          "createdBy",
          "createdDate",
          "description",
          "institutionTypeId",
          "isActiveFlg",
          "rowid",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "institutionTypeId": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "isActiveFlg": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "instructionType": {
        "required": [
          "createdBy",
          "createdDate",
          "description",
          "instructionTypeId",
          "isActiveFlg",
          "rowid",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "instructionTypeId": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "isActiveFlg": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "investment": {
        "required": [
          "createdBy",
          "createdDate",
          "historyDetailId",
          "investmentId",
          "investmentTypeId",
          "isJointFlg",
          "marketValue",
          "ownershipId",
          "rowid",
          "rrspFlag",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "investmentId": {
            "type": "number"
          },
          "marketValue": {
            "type": "number"
          },
          "investmentTypeId": {
            "type": "number"
          },
          "ownershipId": {
            "type": "number"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "historyDetailId": {
            "type": "number"
          },
          "rrspFlag": {
            "type": "number"
          },
          "isJointFlg": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "investmentType": {
        "required": [
          "createdBy",
          "createdDate",
          "description",
          "investmentTypeId",
          "isActiveFlg",
          "rowid",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "investmentTypeId": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "isActiveFlg": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "language": {
        "required": [
          "createdBy",
          "createdDate",
          "description",
          "isActiveFlg",
          "languageId",
          "rowid",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "languageId": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "isActiveFlg": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "lookupTable": {
        "required": [
          "createdBy",
          "createdDate",
          "rowid",
          "sortOrder",
          "tableDescription",
          "tableName",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "tableName": {
            "type": "string"
          },
          "tableDescription": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "sortOrder": {
            "type": "number"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "maritalStatus": {
        "required": [
          "createdBy",
          "createdDate",
          "description",
          "isActiveFlg",
          "maritalStatusId",
          "rowid",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "maritalStatusId": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "isActiveFlg": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "menuState": {
        "required": [
          "canvasName",
          "createAllowedFlag",
          "createdBy",
          "createdDate",
          "dataBlockName",
          "deleteAllowedFlag",
          "formName",
          "menuStateId",
          "rowid",
          "scrollAllowedFlag",
          "tabName",
          "updateAllowedFlag",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "menuStateId": {
            "type": "number"
          },
          "formName": {
            "type": "string"
          },
          "canvasName": {
            "type": "string"
          },
          "tabName": {
            "type": "string"
          },
          "dataBlockName": {
            "type": "string"
          },
          "updateAllowedFlag": {
            "type": "number"
          },
          "createAllowedFlag": {
            "type": "number"
          },
          "deleteAllowedFlag": {
            "type": "number"
          },
          "scrollAllowedFlag": {
            "type": "number"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "message": {
        "required": [
          "actiontextId",
          "blockname",
          "causetextId",
          "createdBy",
          "createdDate",
          "itemname",
          "mesgId",
          "mesgtext",
          "mesgtypcode",
          "modulename",
          "modulerelease",
          "moduleversion",
          "rowid",
          "textshowcode",
          "updatedBy",
          "updatedDate",
          "windowname"
        ],
        "type": "object",
        "properties": {
          "mesgId": {
            "type": "number"
          },
          "mesgtypcode": {
            "type": "string"
          },
          "mesgtext": {
            "type": "string"
          },
          "causetextId": {
            "type": "number"
          },
          "actiontextId": {
            "type": "number"
          },
          "textshowcode": {
            "type": "string"
          },
          "modulename": {
            "type": "string"
          },
          "moduleversion": {
            "type": "string"
          },
          "modulerelease": {
            "type": "string"
          },
          "blockname": {
            "type": "string"
          },
          "itemname": {
            "type": "string"
          },
          "windowname": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "currentDependentEligibility": {
        "required": [
          "csgEligible",
          "cslEligible",
          "dependentEligibilityId",
          "dependentId",
          "eligible",
          "historyDetailId",
          "postSecondary",
          "residesWith",
          "sharesCustody",
          "sharesCustodyDetails"
        ],
        "type": "object",
        "properties": {
          "historyDetailId": {
            "type": "number"
          },
          "dependentId": {
            "type": "number"
          },
          "dependentEligibilityId": {
            "type": "number"
          },
          "residesWith": {
            "type": "number"
          },
          "sharesCustody": {
            "type": "number"
          },
          "postSecondary": {
            "type": "number"
          },
          "eligible": {
            "type": "number"
          },
          "cslEligible": {
            "type": "number"
          },
          "csgEligible": {
            "type": "number"
          },
          "sharesCustodyDetails": {
            "type": "string"
          }
        }
      },
      "msfaa": {
        "required": [
          "cancelDate",
          "cancelReason",
          "historyDetailId",
          "lastReminderSent",
          "msfaaId",
          "msfaaStatus",
          "ptOrFt",
          "recCreateDate",
          "recCreateUser",
          "recLastModDate",
          "recLastModUser",
          "receivedDate",
          "rowid",
          "sentDate",
          "sentSeqNumber",
          "signedDate",
          "studentId"
        ],
        "type": "object",
        "properties": {
          "msfaaId": {
            "type": "number"
          },
          "studentId": {
            "type": "number"
          },
          "sentDate": {
            "type": "string"
          },
          "signedDate": {
            "type": "string"
          },
          "receivedDate": {
            "type": "string"
          },
          "msfaaStatus": {
            "type": "string"
          },
          "historyDetailId": {
            "type": "number"
          },
          "cancelDate": {
            "type": "string"
          },
          "cancelReason": {
            "type": "string"
          },
          "recCreateDate": {
            "type": "string"
          },
          "recCreateUser": {
            "type": "string"
          },
          "recLastModDate": {
            "type": "string"
          },
          "recLastModUser": {
            "type": "string"
          },
          "sentSeqNumber": {
            "type": "number"
          },
          "lastReminderSent": {
            "type": "number"
          },
          "ptOrFt": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "fundingHistory": {
        "required": [
          "academicYear",
          "changeReason",
          "disbursedAmount",
          "institution",
          "issueDate",
          "requestType",
          "status",
          "statusReason",
          "studentId",
          "studyArea"
        ],
        "type": "object",
        "properties": {
          "studentId": {
            "type": "number"
          },
          "academicYear": {
            "type": "string"
          },
          "requestType": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "statusReason": {
            "type": "string"
          },
          "changeReason": {
            "type": "string"
          },
          "institution": {
            "type": "string"
          },
          "studyArea": {
            "type": "string"
          },
          "issueDate": {
            "type": "string"
          },
          "disbursedAmount": {
            "type": "number"
          }
        }
      },
      "msfaaEmailLog": {
        "required": [
          "emailAddress",
          "emailedFlg",
          "msfaaEmailLogId",
          "msfaaId",
          "recCreateDate",
          "recCreateUser",
          "recLastModDate",
          "recLastModUser",
          "reminderSent",
          "rowid"
        ],
        "type": "object",
        "properties": {
          "msfaaEmailLogId": {
            "type": "number"
          },
          "emailedFlg": {
            "type": "string"
          },
          "reminderSent": {
            "type": "number"
          },
          "msfaaId": {
            "type": "number"
          },
          "emailAddress": {
            "type": "string"
          },
          "recCreateDate": {
            "type": "string"
          },
          "recCreateUser": {
            "type": "string"
          },
          "recLastModDate": {
            "type": "string"
          },
          "recLastModUser": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "fundingRequestRequirement": {
        "required": [
          "historyDetailId",
          "requestTypeId",
          "requirementTypeId"
        ],
        "type": "object",
        "properties": {
          "requestTypeId": {
            "type": "number"
          },
          "requirementTypeId": {
            "type": "number"
          },
          "historyDetailId": {
            "type": "number"
          }
        }
      },
      "msfaaImport": {
        "required": [
          "agreementNumber",
          "borrowerSignedDate",
          "cancelDate",
          "errorMessage",
          "newIssueProv",
          "sin",
          "spReceivedDate",
          "statusCode"
        ],
        "type": "object",
        "properties": {
          "agreementNumber": {
            "type": "string"
          },
          "sin": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          },
          "borrowerSignedDate": {
            "type": "string"
          },
          "spReceivedDate": {
            "type": "string"
          },
          "newIssueProv": {
            "type": "string"
          },
          "cancelDate": {
            "type": "string"
          },
          "errorMessage": {
            "type": "string"
          }
        }
      },
      "inqStatus": {
        "required": [
          "customStatus",
          "fundingRequestId",
          "historyDetailId",
          "receivedDate",
          "requestType",
          "requestTypeId",
          "status",
          "statusDate",
          "statusReason"
        ],
        "type": "object",
        "properties": {
          "requestType": {
            "type": "string"
          },
          "receivedDate": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "statusReason": {
            "type": "string"
          },
          "customStatus": {
            "type": "string"
          },
          "statusDate": {
            "type": "string"
          },
          "fundingRequestId": {
            "type": "number"
          },
          "historyDetailId": {
            "type": "number"
          },
          "requestTypeId": {
            "type": "number"
          }
        }
      },
      "officer": {
        "required": [
          "createdBy",
          "createdDate",
          "email",
          "fax",
          "firstName",
          "isActiveFlg",
          "lastName",
          "officerId",
          "phone",
          "position",
          "rowid",
          "tollfree",
          "updatedBy",
          "updatedDate",
          "userid"
        ],
        "type": "object",
        "properties": {
          "officerId": {
            "type": "number"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "position": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "tollfree": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "userid": {
            "type": "string"
          },
          "fax": {
            "type": "string"
          },
          "isActiveFlg": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "requestRequirementMet": {
        "required": [
          "completedDate",
          "historyDetailId",
          "requestTypeId",
          "requirementMetId",
          "requirementTypeId"
        ],
        "type": "object",
        "properties": {
          "requestTypeId": {
            "type": "number"
          },
          "requirementTypeId": {
            "type": "number"
          },
          "requirementMetId": {
            "type": "number"
          },
          "completedDate": {
            "type": "string"
          },
          "historyDetailId": {
            "type": "number"
          }
        }
      },
      "ownership": {
        "required": [
          "createdBy",
          "createdDate",
          "description",
          "isActiveFlg",
          "ownershipId",
          "rowid",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "ownershipId": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "isActiveFlg": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "requirementMetView": {
        "required": [
          "completedDate",
          "createdBy",
          "createdDate",
          "description",
          "historyDetailId",
          "requirementMetId",
          "requirementTypeId",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "requirementMetId": {
            "type": "number"
          },
          "completedDate": {
            "type": "string"
          },
          "requirementTypeId": {
            "type": "number"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "historyDetailId": {
            "type": "number"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "parentContributionFormula": {
        "required": [
          "academicYear",
          "addAmt",
          "createdBy",
          "createdDate",
          "dIncomeFrom",
          "dIncomeTo",
          "divideBy",
          "percent",
          "rowid",
          "subtractAmt",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "academicYear": {
            "type": "number"
          },
          "dIncomeFrom": {
            "type": "number"
          },
          "dIncomeTo": {
            "type": "number"
          },
          "addAmt": {
            "type": "number"
          },
          "percent": {
            "type": "number"
          },
          "subtractAmt": {
            "type": "number"
          },
          "divideBy": {
            "type": "number"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "sfaiFundingHistory": {
        "required": [
          "academicYear",
          "changeReason",
          "disbursedAmount",
          "institution",
          "issueDate",
          "onlineSubmitDate",
          "requestType",
          "status",
          "statusReason",
          "studentId",
          "studyArea"
        ],
        "type": "object",
        "properties": {
          "studentId": {
            "type": "number"
          },
          "academicYear": {
            "type": "string"
          },
          "onlineSubmitDate": {
            "type": "string"
          },
          "requestType": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "statusReason": {
            "type": "string"
          },
          "changeReason": {
            "type": "string"
          },
          "institution": {
            "type": "string"
          },
          "studyArea": {
            "type": "string"
          },
          "issueDate": {
            "type": "string"
          },
          "disbursedAmount": {
            "type": "number"
          }
        }
      },
      "parentDependent": {
        "required": [
          "attendPostSecond",
          "birthDate",
          "comments",
          "conversionFlg",
          "createdBy",
          "createdDate",
          "dependentAge",
          "dependentFirstName",
          "dependentLastName",
          "disabilityFlg",
          "eligible",
          "historyDetailId",
          "parentDependentId",
          "relationshipId",
          "residing",
          "rowid",
          "sharedCustody",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "parentDependentId": {
            "type": "number"
          },
          "historyDetailId": {
            "type": "number"
          },
          "dependentFirstName": {
            "type": "string"
          },
          "dependentLastName": {
            "type": "string"
          },
          "dependentAge": {
            "type": "number"
          },
          "relationshipId": {
            "type": "number"
          },
          "residing": {
            "type": "number"
          },
          "sharedCustody": {
            "type": "number"
          },
          "attendPostSecond": {
            "type": "number"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "comments": {
            "type": "string"
          },
          "eligible": {
            "type": "number"
          },
          "disabilityFlg": {
            "type": "string"
          },
          "birthDate": {
            "type": "string"
          },
          "conversionFlg": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "stepChangeReasons": {
        "required": [
          "academicYear",
          "changeReason",
          "changeReasonDate",
          "changeReasonType",
          "studentId"
        ],
        "type": "object",
        "properties": {
          "studentId": {
            "type": "number"
          },
          "changeReason": {
            "type": "string"
          },
          "changeReasonDate": {
            "type": "string"
          },
          "changeReasonType": {
            "type": "string"
          },
          "academicYear": {
            "type": "string"
          }
        }
      },
      "parentResident": {
        "required": [
          "cityId",
          "countryId",
          "createdBy",
          "createdDate",
          "fromMonth",
          "fromYear",
          "historyDetailId",
          "parentResidentId",
          "provinceId",
          "rowid",
          "toMonth",
          "toYear",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "parentResidentId": {
            "type": "number"
          },
          "cityId": {
            "type": "number"
          },
          "provinceId": {
            "type": "number"
          },
          "countryId": {
            "type": "number"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "historyDetailId": {
            "type": "number"
          },
          "fromMonth": {
            "type": "number"
          },
          "toMonth": {
            "type": "number"
          },
          "fromYear": {
            "type": "number"
          },
          "toYear": {
            "type": "number"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "vwApplicationRequirements": {
        "required": [
          "condition",
          "documentLocation",
          "historyDetailId",
          "requestType",
          "requestTypeId",
          "requirementType",
          "requirementTypeId",
          "showOnline"
        ],
        "type": "object",
        "properties": {
          "historyDetailId": {
            "type": "number"
          },
          "requestTypeId": {
            "type": "number"
          },
          "requestType": {
            "type": "string"
          },
          "requirementTypeId": {
            "type": "number"
          },
          "requirementType": {
            "type": "string"
          },
          "documentLocation": {
            "type": "string"
          },
          "showOnline": {
            "type": "string"
          },
          "condition": {
            "type": "string"
          }
        }
      },
      "partTimeReason": {
        "required": [
          "createdBy",
          "createdDate",
          "description",
          "isActiveFlg",
          "partTimeReasonId",
          "rowid",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "partTimeReasonId": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "isActiveFlg": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "yeaDistinct": {
        "required": [
          "birthDt",
          "fname",
          "lname",
          "ytid"
        ],
        "type": "object",
        "properties": {
          "ytid": {
            "type": "string"
          },
          "lname": {
            "type": "string"
          },
          "fname": {
            "type": "string"
          },
          "birthDt": {
            "type": "string"
          }
        }
      },
      "period": {
        "required": [
          "createdBy",
          "createdDate",
          "description",
          "isActiveFlg",
          "periodId",
          "rowid",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "periodId": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "isActiveFlg": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "ygStatsExport": {
        "required": [
          "applicationYear",
          "firstName",
          "homeEmail",
          "homePhoneNumber",
          "informationSfaRelase",
          "lastName",
          "mailingAddress",
          "parentPhoneNumber",
          "permanentAddress",
          "receivedYukonGrantFunding",
          "schoolEmail",
          "schoolPhoneNumber",
          "studentId"
        ],
        "type": "object",
        "properties": {
          "studentId": {
            "type": "number"
          },
          "lastName": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "permanentAddress": {
            "type": "string"
          },
          "mailingAddress": {
            "type": "string"
          },
          "homeEmail": {
            "type": "string"
          },
          "schoolEmail": {
            "type": "string"
          },
          "homePhoneNumber": {
            "type": "string"
          },
          "schoolPhoneNumber": {
            "type": "string"
          },
          "parentPhoneNumber": {
            "type": "string"
          },
          "applicationYear": {
            "type": "string"
          },
          "informationSfaRelase": {
            "type": "string"
          },
          "receivedYukonGrantFunding": {
            "type": "string"
          }
        }
      },
      "portalStatus": {
        "required": [
          "isActiveFlg",
          "portalStatusId",
          "recCreateDate",
          "recCreateUser",
          "recLastModDate",
          "recLastModUser",
          "rowid",
          "statusDesc"
        ],
        "type": "object",
        "properties": {
          "portalStatusId": {
            "type": "number"
          },
          "statusDesc": {
            "type": "string"
          },
          "recCreateDate": {
            "type": "string"
          },
          "recCreateUser": {
            "type": "string"
          },
          "recLastModDate": {
            "type": "string"
          },
          "recLastModUser": {
            "type": "string"
          },
          "isActiveFlg": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "prestudyEmployStatus": {
        "required": [
          "createdBy",
          "createdDate",
          "description",
          "isActiveFlg",
          "prestudyEmployStatusId",
          "rowid",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "prestudyEmployStatusId": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "isActiveFlg": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "prestudyEmployment": {
        "required": [
          "averageWeeklyHours",
          "createdBy",
          "createdDate",
          "employedFromDate",
          "employedToDate",
          "employerCityId",
          "employerName",
          "employerProvinceId",
          "historyDetailId",
          "hourlyRate",
          "prestudyEmployStatusId",
          "prestudyEmploymentId",
          "rowid",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "prestudyEmploymentId": {
            "type": "number"
          },
          "historyDetailId": {
            "type": "number"
          },
          "prestudyEmployStatusId": {
            "type": "number"
          },
          "employerName": {
            "type": "string"
          },
          "employerCityId": {
            "type": "number"
          },
          "employerProvinceId": {
            "type": "number"
          },
          "employedFromDate": {
            "type": "string"
          },
          "employedToDate": {
            "type": "string"
          },
          "hourlyRate": {
            "type": "number"
          },
          "averageWeeklyHours": {
            "type": "number"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "prestudyTaxRate": {
        "required": [
          "academicYear",
          "createdBy",
          "createdDate",
          "incomeFrom",
          "incomeTo",
          "prestudyTaxRate",
          "rowid",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "academicYear": {
            "type": "number"
          },
          "incomeFrom": {
            "type": "number"
          },
          "incomeTo": {
            "type": "number"
          },
          "prestudyTaxRate": {
            "type": "number"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "program": {
        "required": [
          "createdBy",
          "createdDate",
          "description",
          "educationLevel",
          "isActiveFlg",
          "programId",
          "rowid",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "programId": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "educationLevel": {
            "type": "number"
          },
          "isActiveFlg": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "province": {
        "required": [
          "abbreviation",
          "createdBy",
          "createdDate",
          "description",
          "isActiveFlg",
          "provinceId",
          "rowid",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "provinceId": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "abbreviation": {
            "type": "string"
          },
          "isActiveFlg": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "relationship": {
        "required": [
          "createdBy",
          "createdDate",
          "description",
          "isActiveFlg",
          "relationshipId",
          "rowid",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "relationshipId": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "isActiveFlg": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "reportExpenseCategory": {
        "required": [
          "createdBy",
          "createdDate",
          "description",
          "isActiveFlg",
          "reportExpenseCategoryId",
          "rowid",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "reportExpenseCategoryId": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "isActiveFlg": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      },
      "requestRequirement": {
        "required": [
          "condition",
          "createdBy",
          "createdDate",
          "requestTypeId",
          "requirementTypeId",
          "rowid",
          "updatedBy",
          "updatedDate"
        ],
        "type": "object",
        "properties": {
          "requestTypeId": {
            "type": "number"
          },
          "requirementTypeId": {
            "type": "number"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          },
          "condition": {
            "type": "string"
          },
          "rowid": {
            "type": "string"
          }
        }
      }
    }
  }
}